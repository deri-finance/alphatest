{"version":3,"sources":["lib/web3js/shared/index.js","lib/web3js/shared/config/constant.js","lib/web3js/shared/config/database.js","lib/web3js/shared/config/pool.js","lib/web3js/shared/config/broker.js","lib/web3js/shared/utils/derijsnext.js","lib/web3js/shared/contract/contract_base.js","lib/web3js/shared/utils/web3.js","lib/web3js/v1/api/api_v1_globals.js","lib/web3js/v1/api/contract_transaction_api.js","lib/web3js/v1/api/trade_history_api.js","lib/web3js/v1/api/rest_api.js","lib/web3js/v1/api/contract_query_api.js","lib/web3js/v2_lite/factory.js","lib/web3js/v2_lite/contract/perpetual_pool_old.js","lib/web3js/v2_lite/api/mining_query_api.js","lib/web3js/v2_lite/api/mining_transaction_api.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/shared/api/api_globals.js","lib/web3js/v2_lite/utils.js","lib/web3js/v2_lite/api/trade_query_api.js","lib/web3js/v2_lite/api/trade_transaction_api.js","lib/web3js/v2_lite/api/trade_history_api.js","lib/web3js/option/calculation/findLiquidationPrice2.js","lib/web3js/option/calculation/trade.js","lib/web3js/option/contract/abis.js","lib/web3js/option/contract/everlasting_option_viewer.js","lib/web3js/option/contract/l_token_option.js","lib/web3js/option/contract/p_token_option.js","lib/web3js/option/factory/tokens.js","lib/web3js/option/utils.js","lib/web3js/option/contract/everlasting_option.js","lib/web3js/option/contract/option_pricer.js","lib/web3js/option/factory/pool.js","lib/web3js/option/api/mining_query_api.js","lib/web3js/option/calculation/PMM2.js","lib/web3js/option/api/trade_query_api.js","lib/web3js/option/api/trade_history_api.js","lib/web3js/v2_lite_open/api/transaction_api.js","lib/web3js/activity/config.js","lib/web3js/activity/utils.js","lib/web3js/activity/contract/abi/pTokenAirdropNULSAbi.js","lib/web3js/activity/contract/gen/PTokenAirdropNULS.js","lib/web3js/activity/contract/abi/deriVoteAbi.js","lib/web3js/activity/contract/gen/DeriVote.js","lib/web3js/activity/contract/factory.js","lib/web3js/activity/api/ptoken_airdrop.js","lib/web3js/activity/api/deri_staking.js","lib/web3js/activity/api/deri_vote.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2_lite_dpmm/utils.js","lib/web3js/v2_lite_dpmm/calc.js","lib/web3js/v2_lite_dpmm/contract/adapter.js","lib/web3js/v2_lite_dpmm/contract/abi/perpetualPoolLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/gen/PerpetualPoolLite.js","lib/web3js/v2_lite_dpmm/contract/abi/lTokenLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/gen/LTokenLite.js","lib/web3js/v2_lite_dpmm/contract/abi/pTokenLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/gen/PTokenLite.js","lib/web3js/v2_lite_dpmm/contract/factory.js","lib/web3js/v2_lite_dpmm/contract/PoolApi.js","lib/web3js/v2_lite_dpmm/api/query_api.js","lib/web3js/v2_lite_dpmm/api/trade_history_api.js","lib/web3js/v2_lite_dpmm/api/transaction_api.js","lib/web3js/v2_lite_dpmm/api/index.js","lib/web3js/v2_dpmm/contract/adapter.js","lib/web3js/v2_dpmm/contract/abi/lTokenAbi.js","lib/web3js/v2_dpmm/contract/gen/LToken.js","lib/web3js/v2_dpmm/contract/abi/pTokenAbi.js","lib/web3js/v2_dpmm/contract/gen/PToken.js","lib/web3js/v2_dpmm/contract/abi/perpetualPoolAbi.js","lib/web3js/v2_dpmm/contract/gen/PerpetualPool.js","lib/web3js/v2_dpmm/contract/abi/perpetualPoolRouterAbi.js","lib/web3js/v2_dpmm/contract/gen/PerpetualPoolRouter.js","lib/web3js/v2_dpmm/contract/factory.js","lib/web3js/v2_dpmm/contract/PoolApi.js","lib/web3js/v2_dpmm/api/query_api.js","lib/web3js/v2_dpmm/api/trade_history_api.js","lib/web3js/v2_dpmm/api/index.js","lib/web3js/v2_dpmm/api/transaction_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/option/api/mining_transaction_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/option/api/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","model/Intl.js","lib/web3js/shared/factory/index.js","lib/web3js/shared/utils/oracle.js","lib/web3js/shared/utils/api.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/factory.js","lib/web3js/shared/config/token.js","lib/web3js/v1/contract/perpetual_pool.js","lib/web3js/v1/contract/p_token.js","lib/web3js/v1/contract/l_token.js","lib/web3js/v1/factory.js","lib/web3js/shared/contract/TERC20.js","lib/web3js/shared/factory/contract/b_token.js","lib/web3js/shared/contract/deri/deri.js","lib/web3js/shared/contract/deri/mining_vault_pool.js","lib/web3js/shared/contract/deri/mining_vault_router.js","lib/web3js/shared/contract/deri/wormhole.js","lib/web3js/shared/factory/contract/deri.js","lib/web3js/shared/contract/lp_pool/slp_pool.js","lib/web3js/shared/contract/lp_pool/clp_pool.js","lib/web3js/shared/contract/lp_pool/clp2_pool.js","lib/web3js/shared/factory/contract/lp_pool.js","lib/web3js/shared/factory/contract/activity.js","utils/utils.js","lib/web3js/v1/calculation/fundingRate.js","lib/web3js/v1/calculation/index.js","lib/web3js/shared/config/env.js","model/Type.js","model/Version.js","lib/web3js/shared/utils/validate.js","lib/web3js/shared/utils/convert.js","lib/web3js/shared/config/pool_v1.js","lib/web3js/shared/utils/factory.js","lib/web3js/shared/api/database_api.js","lib/web3js/shared/contract/abi/pancakePairAbi.js","lib/web3js/shared/contract/gen/PancakePair.js","lib/web3js/shared/contract/adapter.js","lib/web3js/shared/contract/abi/TERC20Abi.js","lib/web3js/shared/contract/gen/TERC20.js","lib/web3js/shared/contract/abi/ERC20Abi.js","lib/web3js/shared/contract/gen/ERC20.js","lib/web3js/shared/contract/abi/chainlinkOracleAbi.js","lib/web3js/shared/contract/gen/ChainlinkOracle.js","lib/web3js/shared/contract/abi/offChainOracleAbi.js","lib/web3js/shared/contract/gen/OffChainOracle.js","lib/web3js/shared/contract/abi/offChainVolatilityOracleAbi.js","lib/web3js/shared/contract/gen/OffChainVolatilityOracle.js","lib/web3js/shared/contract/abi/TERC20MintLimitAbi.js","lib/web3js/shared/contract/gen/TERC20MintLimit.js","lib/web3js/shared/contract/abi/bTokenOracle1Abi.js","lib/web3js/shared/contract/gen/BTokenOracle1.js","lib/web3js/shared/contract/factory.js","lib/web3js/shared/config/version.js","lib/web3js/shared/contract/abis.js","lib/web3js/shared/config/chain.js","lib/web3js/v2_lite_open/contract/abis.js","lib/web3js/v2_lite_open/contract/chainlink_feed.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryChainlinkAbi.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryChainlink.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryOffChainAbi.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryOffChain.js","lib/web3js/v2_lite_open/contract/p_token.js","lib/web3js/v2_lite_open/contract/perpetual_pool.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_manager.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite_open/factory.js","lib/web3js/shared/contract/database/database.js","lib/web3js/shared/contract/database/database_wormhole.js","lib/web3js/shared/contract/database/database_airdrop.js","lib/web3js/shared/config/config.js","lib/web3js/shared/contract/oracle/symbol_oracle_off_chain.js","lib/web3js/shared/contract/oracle/woo_oracle.js","lib/web3js/shared/factory/oracle.js","lib/web3js/v2_lite_open/api/query_api.js","lib/web3js/shared/factory/database.js","lib/web3js/shared/factory/web3.js","lib/web3js/v2_lite/contract/abis.js","lib/web3js/v2_lite_open/config.js","lib/web3js/shared/config/config_processor.js","lib/web3js/shared/config/oracle.js","lib/web3js/shared/utils/chain.js","lib/web3js/shared/api/wallet_api.js","lib/web3js/shared/api/deri_query_api.js","lib/web3js/shared/api/deri_transaction_api.js","lib/web3js/shared/api/activity_api.js","lib/web3js/shared/api/slp_pool_api.js","lib/web3js/shared/api/clp2_pool_api.js","lib/web3js/shared/api/clp_pool_api.js","lib/web3js/shared/api/lp_pool_query_api.js","lib/web3js/shared/api/lp_pool_transaction_api.js","lib/web3js/shared/api/ERC20_api.js","lib/web3js/shared/utils/network.js","lib/web3js/shared/contract/b_token.js","lib/web3js/shared/contract/oracle/wrapped_oracle.js","lib/web3js/shared/contract/activity/broker_manager.js","lib/web3js/shared/contract/activity/ptoken_airdrop.js","lib/web3js/v2_lite/contract/index.js","utils/LoadableComponent.js","lib/web3js/shared/config/rest_server.js","model/WebSocket.js","components/hoc/withModal.js","lib/web3js/v2_lite/contract/l_token.js","lib/web3js/v2_lite/contract/p_token.js","lib/web3js/v2_lite/contract/perpetual_pool_lite_viewer.js","model/Config.js","../lang).)*/.json$","components/Loading/LoadingMask.js","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","model/Loading.js","index.js"],"names":["SECONDS_IN_A_DAY","getDBAddress","env","useProductionDB","getDBWormholeAddress","getDBAirdropAddress","getConfig","version","config","getJsonConfig","pools","openConfigListCache","get","Array","isArray","i","length","poolProcessor","poolValidator","getPoolConfigList","map","pool","result","bTokens","bToken","symbols","symbol","push","pToken","lToken","router","initialBlock","chainId","bTokenId","bTokenSymbol","symbolId","unit","type","versionId","isOption","flat","expandPoolConfigV2","offchainSymbolIds","offchainSymbols","expandPoolConfigV2Lite","isOpen","expandPoolConfigV2LiteOpen","pricer","volatilitySymbols","expandPoolConfigOption","getPoolConfig","poolAddress","getPoolVersion","LITE_AND_OPTION_VERSIONS","includes","undefined","toString","poolConfigList","DeriEnv","check","res","filter","Error","getFilteredPoolConfigList","VERSIONS","reduce","acc","concat","getPoolV1ConfigList","index","findIndex","v","getPoolVersionId","_getPoolConfig","find","p","getPoolConfig2","defaultSymbol","b","bTokenCount","symbolCount","getPoolBTokenList","bTokenAddress","getPoolBTokenIdList","getPoolSymbolList","s","getPoolSymbolIdList","getPoolViewerConfig","viewers","poolViewer","address","getBrokerConfigList","brokerManager","getBrokerConfig","filteredByChainId","c","checkChainId","getChainIds","checkAddress","toChecksumAddress","err","checkApiInput","accountAddress","checkApiInputWithoutAccount","checkTokenId","tokenId","test","checkAmount","amount","checkSymbolId","symbolIds","indexOf","join","contractFactory","klass","instances","key","Object","keys","processResult","val","propList","prop","fromWei","processObjectResult","processMethod","methodName","originMethod","prototype","async","args","apply","this","getLiquidity","_call","stateValues","liquidity","getLastTimestamp","lastTimestamp","getProtocolFeeAccrued","protocolFeeAccrued","MAX_GAS_AMOUNT","ContractBase","contractAddress","contractAbi","a","web3","web3Factory","contract","eth","Contract","method","retry","_init","methods","call","console","log","gas","estimateGas","from","parseInt","tx","self","_transactionReceipt","resolve","reject","getTransactionReceipt","error","receipt","setTimeout","status","_estimatedGas","txRaw","to","numberToHex","value","data","encodeABI","window","ethereum","request","params","Promise","_getTransactionReceipt","intRe","deleteIndexedKey","obj","intKeyCount","k","newObj","forEach","getLatestBlockNumber","getBlockNumber","getBlockInfo","blockNumber","getBlock","getPastEvents","eventName","fromBlock","events","es","toBlock","e","getPastEventsUseAbi","fundingRateCache","resourceMap","set","resource","priceCache","_accountAddress","_price","_interval","getPriceFromRest","update","setInterval","_update","clear","clearInterval","PerpetualPoolParametersCache","_parameters","multiplier","perpetualPool","perpetualPoolFactory","getParameters","_ws","unlock","getPoolV1Config","bTokenFactory","success","transaction","depositMargin","pPool","naturalToDeri","withdrawMargin","pTokenAddress","pTokenFactory","deriToNatural","getPriceInfoForV1","price","getPositionInfo","volume","margin","cost","minInitialMarginRatio","maxWithdrawMargin","calculateMaxWithdrawMargin","bg","lte","_transact","addLiquidity","removeLiquidity","shares","lTokenAddress","lTokenFactory","all","balance","totalSupply","lTokenBalance","lTokenTotalSupply","minPoolMarginRatio","getStateValues","tradersNetVolume","tradersNetCost","maxRemovableShares","calculateMaxRemovableShares","tradeWithMargin","newVolume","orderValidation","isOrderValid","message","closePosition","negated","eq","processTradeEvent","info","txHash","feeRatio","tradeVolume","_getTimeStamp","timeStamp","direction","gt","time","timestamp","transactionFee","_calculateFee","notional","abs","times","baseToken","transactionHash","getTradeHistoryOnline","_getBlockInfo","filters","owner","_getPastEvents","number","item","returnValues","unshift","getTradeHistory2","fetchJson","getHttpBase","tradeFromBlock","tradeHistoryBlock","liquidateFromBlock","liquidateHistoryBlock","tradeHistory","trim","tradeHistoryOnline","sort","getSpecification","minMaintenanceMarginRatio","minAddLiquidity","redemptionFeeRatio","fundingRateCoefficient","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","priceDelayAllowance","addresses","averageEntryPrice","calculateEntryPrice","marginHeld","unrealizedPnl","liquidationPrice","calculateLiquidationPrice","calculateMarginHeld","calculatePnl","getLiquidityInfo","balanceOf","poolDynamicEquity","plus","minus","poolLiquidity","shareValue","calculateShareValue","getWalletBalance","isUnlocked","getEstimatedFee","parameters","getFundingRate","catch","getPoolInfoApy","poolInfo","fundingRate","fundingRatePerBlock","volume24h","fundingRate0","naturalWithPercentage","toExponential","getEstimatedFundingRate","newNetVolume","validateArgs","fundingRate1","calculateFundingRate","processFundingRate","getLiquidityUsed","liquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","poolMarginRatio","liquidityUsed1","calculateLiquidityUsed","factory","perpetualPoolLiteFactory","perpetualPoolLiteOldAbi","getAddresses","pTokenLiteFactory","lTokenLiteFactory","getActiveSymbolIds","activeSymbolIds","offChainOracleSymbolIds","getSymbol","activeSymbolNames","oracleAddress","o","checkOffChainOracleSymbol","offChainOracleSymbols","init","getPosition","positions","protocolFeeCollectRatio","cumulativeFundingRate","prices","getPriceInfos","priceInfos","values","r","_getSymbolPrices","LTokenLite","PTokenLite","_getLiquidityInfo","PerpetualPoolLiteViewer","parameterInfo","promises","totalPnl","catchApiError","div","dynamicCost","tmp","max","minMargin","gte","annualBlockCount","getDailyBlockNumber","calculateFundingFee","dynamicEquity","lastCumulativeFundingRate","lastUpdatedBlockNumber","latestBlockNumber","calculateBTokenDynamicEquities","accum","discount","pnl","isBToken0RatioValid","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","totalCost","calculateMaxRemovableLiquidity","restLiquidity","min","_prices","split","isNaN","parseFloat","Date","now","liquidatePriceCache","_cache","getSymbolPrices","offChainSymbolIds","offChainSymbolNames","onChainOracleAddressWithPlaceHolder","_symbol","getOraclePriceFromCache2","f","onChainSymbolPrices","oraclePricesCache","offChainSymbolPrices","symbolPrices","shift","symbolInfo","indexConstituents","getIndexInfo","url","tokens","symbolIndex","getLastUpdateBlock","getMargin","positionInfo","marginHeldBySymbol","unrealizedPnlList","fundingFee","getPositionInfos","symbolList","idx","_getFundingRate","liquidityUsedInAmount","cache","catchTxApiError","addMargin","isMaximum","removeMargin","trade","calculateTxFee","symbolIdList","account","invalidValues","NaN","getEverlastingTimePriceAndDelta","S","K","V","T","timeValue","delta","u","Math","sqrt","pow","getDynamicInitialMarginRatio","spot","strike","isCall","initialMarginRatio","otmRatio","canLiquidateWithPrice","trader","newUnderlierPrice","newDynamicMargin","dynamicMargin","newInitialMargin","initialMargin","position","newIntrinsicValue","strikePrice","volatility","fundingPeriod","newTimeValue","newPnl","newDynamicMarginRatio","spotPrice","dynamicMarginRatio","newMaintenanceMargin","maintenanceMarginRatio","findLiquidationPrice","numPositions","price1","price2","final1","final2","l1","l2","head","slice","startsWith","maintenanceMargin","dynamicInitialMarginRatio","dynamicInitialPoolMarginRatio","initialPoolMarginRatio","getMarginHeldBySymbol","getAverageEntryPrice","getLiquidationPrice","state","poolState","symbolState","traderState","positionState","normalizedSymbol","normalizeOptionSymbol","toNumberForObject","underlier","getLiquidationPrices","oracleSymbols","liquidationPrices","oSymbol","everlastingOptionAbi","everlastingOptionViewerAbi","lTokenOptionAbi","pTokenOptionAbi","everlastingOptionOldAbi","EverlastingOptionViewer","oraclePrices","oracleVolatilities","fromWeiForObject","LTokenOption","constructor","super","PTokenOption","lastCumulativePremiumFundingRate","operator","everlastingOptionViewerFactory","lTokenOptionFactory","pTokenOptionFactory","delay","ms","volatilitiesCache","pending","floor","getOracleVolatilitiesForOption","EverlastingOption","viewerAddress","viewer","isEqualSet","Set","activeSymbols","symbolVolatilities","getPoolStates","getVolatilitySymbols","_updateConfig","volatilities","volatilityInfos","oracleSymbol","bAmount","_getVolSymbolPrices","lShares","event","block","indexPrice","tradeFee","tradeCost","contractValue","extra","optionPricerAbi","OptionPricer","everlastingOptionFactory","optionPricerFactory","optionPool","queryTradePMM","theoreticalPrice","symbolInfo2","poolInfo2","feeRatioOTM","feeRatioITM","initialMarginRatioOrigin","maintenanceMarginRatioOrigin","symbolName","getTraderStates","volPrice","wrappedOracleFactory","getPrice","timePrice","markPrice","dpmmPrice","oS","premiumFundingAccrued","fundingAccrued","volPrices","vIndex","curSymbolIndex","premiumFunding","fundingPerSecond","premiumFundingPerSecond","intrinsicValue","fee","premiumFunding0","getVolatility","getEverlastingTimeValueAndDelta","pricerAddress","formatTradeEvent","tr","getTradeHistory","ids","volumes","id","createPool","pairedTokenAddress","normalizeChainId","getPoolV2LiteManagerConfig","poolManagerAddress","poolManager","perpetualPoolLiteManagerFactory","newParameters","addSymbol","perpetualPoolLite","createOracle","feedAddress","feedContract","chainlinkFeedFactory","oracleFactoryConfig","getOracleFactoryChainlinkConfig","oracleFactory","oracleFactoryChainlinkFactory","getPTokenAirdropConfig","prod","dev","getDeriVoteConfig","pTokenAirdropNULSAbi","PTokenAirdropNULS","deriVoteAbi","DeriVote","votingId","voter","votingOption","PTokenAirdropNULSFactory","deriVoteFactory","isPTokenAirdropped","isAirdropPToken","totalAirdropCount","isUserPTokenExist","isBTokenUnlocked","hasRequiredBalance","unlockBToken","airdropPToken","keyPrefix","getStakingTop10Users","db","databaseActivityFactory","n","fill","getValues","no","userAddr","feePaid","score","evgCoeff","rewardBNB","getUserStakingInfo","scoreQ1","scoreQ2","scoreQ3","scoreQ4","coef","getUserStakingReward","rewardDERI","topUsers","getUserStakingContribution","totalContrib","userContrib","Q1Contrib","Q2Contrib","Q3Contrib","Q4Contrib","userQ1Contrib","userQ2Contrib","userQ3Contrib","userQ4Contrib","userQ1Point","userQ2Point","userQ3Point","userQ4Point","getVotingResult","databaseDeriVoteFactory","hexToNumberString","getUserVotingPower","getUserVotingResult","votingPower","option","vote","deriVote","voteId","getContractAddressConfig","getPoolV2ConfigList","ALL_EXCEPT_OPEN_VERSIONS","getPoolLiquidity","databaseFactory","poolNetwork","getNetworkName","apy","volume1h","getBToken","bTokenDiscounts","bTokenMultiplier","symbolConfigList","bTokenIdList","getLastUpdatedBlockNumber","getMargins","getPositions","getOraclePrice","margins","latestPrice","getEstimatedLiquidatePrice","promiseList","bTokenInfoList","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","PRESERVED_SYMBOLS","priceInfo","baseUrl","isProdChain","addSymbolParam","getOracleServerUrl","fetch","mode","headers","Accept","body","JSON","stringify","ok","json","calculateK","alpha","calculateDpmmPrice","calculateDpmmCost","overrideMethods","fns","fn","offChainOracleFactory","signer","signatory","processTxMethod","toWeiArgPositions","newArgs","arg","toWei","isEstimatedApi","getPoolStateValues","getFundingPeriod","ERC20Factory","offChainOracleSymbolNames","normalizeSymbolUnit","getSymbols","indexPrices","funding","timeDiff","traderPnl","isSymbolsUpdated","isPositionsUpdated","getTraderLiquidity","getDynamicEquity","getPoolRequiredMargin","getTraderMarginStatus","requiredInitialMargin","perpetualPoolLiteAbi","PerpetualPoolLite","lTokenLiteAbi","pTokenLiteAbi","perpetualPoolLiteDpmmFactory","addMethods","lTokenLiteAdapter","pTokenLiteAdapter","poolApiFactory","removable","leverage","funding0","funding1","getEstimatedMargin","getEstimatedTimePrice","api","getFundingRateCache","range","lengths","getLengths","routerAddress","perpetualPoolRouterDpmmFactory","bTokenIds","bTokenOracle1Factory","equity","bTokenSymbols","userState","toUpperCase","getBTokens","bTokenIndex","tradersNetPosition","ratePerSecond","diff","undistributedPnl","distributedUnrealizedPnl","isBTokensUpdated","totapPnl","totalEquity","m","totalNotional","lTokenAbi","LToken","pTokenAbi","PToken","perpetualPoolAbi","PerpetualPool","perpetualPoolRouterAbi","PerpetualPoolRouter","infos","lTokenAdapter","pTokenAdapter","perpetualPoolDpmmFactory","perpetualPoolDpmmAdapter","perpetualPoolRouterDpmmAdapter","usedByEstimatedApi","getAsset","lTokenAsset","lastCumulativePnl","approximatePnl","cumulativePnl","bToken0Symbol","swappedPnl","minBToken0Ratio","balances","getFundingFee","MAX_INT256","LITE_VERSIONS","getLiquidityInfoV2l","getLiquidityInfoOption","apiV2lDpmm","apiV2Dpmm","getLiquidityInfo2","bTokenInfo","getLiquidityInfoV2","getPoolLiquidityV2","getPoolLiquidity1","getPoolInfoApyV2","getPoolInfoApy1","addLiquidityV2l","addLiquidityOption","addLiquidity2","perpetualPoolRouter","perpetualPoolRouterFactory","validation","addLiquidityV2","removeLiquidityV2l","removeLiquidityOption","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecificationOption","getSpecification2","getSpecificationV2","getPositionInfoV2l","getPositionInfoOption","getPositionInfo2","getPositionInfoV2","getPositionInfosV2l","getPositionInfosOption","getPositionInfosV2","getWalletBalanceV2l","getWalletBalanceOption","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isUnlockedOption","isDeriUnlocked","isUnlocked2","isUnlockedV2","getEstimatedLiquidatePriceV2","getEstimatedFeeV2l","getEstimatedFeeOption","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRateOption","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRateOption","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsedOption","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsedOption","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","getPoolBTokensBySymbolIdV2","toNumber","getEstimatedTimePriceOption","unlockV2l","unlockOption","unlockDeri","unlock2","unlockV2","depositMarginV2l","depositMarginOption","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMarginOption","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMarginOption","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePositionOption","closePosition2","closePositionV2","getTradeHistoryV2l","getTradeHistoryOption","getTradeHistoryV2","require","path","lang","page","toLowerCase","pageName","Intl","locale","makeObservable","observable","setLocale","action","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","supportedCatalog","storeLocale","label","substr","getOracleUrl","getPriceInfo","mapToBTokenInternal","RestOracle","mapToSymbolInternal","getOracleConfig","oracle","decimal","getOraclePrice2","getOracleInfosFromRest","os","getRestServerConfig","resp","fetchRestApi","opts","func","defaultValue","errorMessage","protocolFeeCollector","decimals0","swapperAddress","decimals","getStorageAt","hexToNumber","processAsset","processPosition","bTokenPairs","AMUSDC","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","IBSCDEFI","IGAME","ALICEUSDT","SANDUSDT","QUICKUSDT","GHSTUSDT","AGLDUSDT","optionSymbol","volSymbol","getNormalizedOptionSymbols","isUsedRestOracle","mapToSymbol","mapToBToken","re","RegExp","replace","internalSymbol","customIndexs","IMEME","POOL_ABI","isProvider","cumuFundingRate","cumuFundingRateBlock","signed","args1","args2","CONTRACT_ABI","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","perpetualPoolInstanceMap","pTokenInstanceMap","lTokenInstanceMap","TERC20","TERC20Abi","spender","BToken","TERC20Factory","DeriContract","allowance","MAX_UINT256","_balanceOf","MiningVaultPool","MiningVaultRouter","WormholeContract","toChainId","wormholeAddress","toWormholeAddress","getDeriConfig","fromChainId","fromWormhole","fromNonce","deriFactory","wormholeFactory","miningVaultRouterFactory","miningVaultPoolFactory","SlpPool","ClpPool","Clp2Pool","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","brokerManagerFactory","BrokerManager","pTokenAirdropFactory","PTokenAirdrop","chainInfo","base","BigNumber","repeat","formatAddress","formatBalance","toFixed","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","convertToInternationalCurrencySystem","labelValue","Number","storeConfig","sessionStorage","setItem","getConfigFromStore","parse","getItem","storeChain","restoreChain","code","hasParam","param","urlString","location","href","URL","searchParams","has","getParam","getFormatSymbol","curChain","chain","isV1","getDefaultNw","getNetworkList","network","isDefault","assign","getMarkpriceSymbol","Type","current","zone","equalIgnoreCase","stripSymbol","secondsInRange","intervalRange","calcRange","interval","getTime","groupByNetwork","total","list","formatAdd","airdrop","combineSymbolfromPoolConfig","configs","pos","mapPoolInfo","wallet","name","buttonText","held","poolMaxVolume","_deriEnv","makeAutoObservable","setCurrent","isFuture","isV2","isV2Lite","switch","chainIds","normalizeAddress","Web3","utils","every","validateObjectKeyExist","keyList","valName","validateIsArray","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","value1","value2","hexToString","hexToUtf8","deriToString","deriToBool","sd","formatBN","bigNumber","toFormat","replaceAll","isBrowser","document","isJsDom","userAgent","set1","set2","size","sortOptionSymbols","symbolArr","unique","to2","index1","index2","index3","dToken","MiningVault","retired","getLpConfigList","isLp","getMiningVaultRouterConfig","filteredConfig","getPreminingConfigList","staking","isInTvlRace","premining","getLpConfig","Deri","Wormhole","getDeriConfigList","deriAddress","getMiningVaultConfig","dTokenAdress","MinningVaultAddress","getUserInfo","userAddress","deadline","nonce","valid","getUserInfoHarvest","harvestLp","harvestTrade","lp","getUserInfoTotal","getUserInfoAll","userInfo","userInfoHarvest","userInfoTotal","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","databaseAirdropFactory","v1","r1","s1","v2","r2","s2","pancakePairAbi","PancakePair","ERC20Adapter","ERC20Abi","ERC20","chainlinkOracleAbi","ChainlinkOracle","offChainOracleAbi","inputs","internalType","stateMutability","outputs","OffChainOracle","offChainVolatilityOracleAbi","OffChainVolatilityOracle","TERC20MintLimitAbi","TERC20MintLimit","bTokenOracle1Abi","BTokenOracle1","offChainOracleAdapter","offChainVolatilityOracleAdapter","isQuoteToken0","qDecimals","bDecimals","pair","priceCumulativeLast1","priceCumulativeLast2","timestampLast1","timestampLast2","pancakePair","getReserves","reserveQ","_reserve0","reserveB","_reserve1","_blockTimestampLast","price0CumulativeLast","price1CumulativeLast","tmpPairState","bTokenOracle1Adapter","bTokenAbi","symbolOracleOffChainAbi","wrappedOracleAbi","wooOracleAbi","brokerManagerAbi","pTokenAirdropAbi","getChainProviderUrls","provider_urls","getDailyBlockNumberConfig","chainBlockNumberList","perpetualPoolLiteManagerAbi","perpetualPoolLiteViewerAbi","chainlinkFeedAbi","ChainlinkFeed","oracleFactoryChainlinkAbi","OracleFactoryChainlink","oracleFactoryOffChainAbi","OracleFactoryOffChain","delayAllowance","updateAddresses","block_number","extraInfo","getBTokenSymbol","getPoolExtraInfo","PerpetualPoolLiteManager","poolId","perpetualPoolLiteViewerFactory","DatabaseContract","keyArray","DatabaseWormholeContract","DatabaseAirdropContract","jsonConfig","SymbolOracleOffChain","WooOracle","wooOracleAddresses","instanceMap","wooOracleFactory","WrappedOracle","getPoolOpenConfigList","openPoolChainIds","getNumPools","poolNums","numsArray","getPoolOpenOracleList","oracles","eventBlock","isPoolController","controller","poolController","getPoolAcitveSymbolIds","oldData","updatedAt","databaseInstanceMap","database","databaseWormholeFactory","web3InstanceMap","walletChainId","getChainProviderUrl","providerUrl","providers","HttpProvider","testnet","v2_lite","v2_lite_open","getOracleConfigList","urls","getLatestRPCServer","blockNumbers","connectWallet","handleChainChanged","handleAccountChanged","accounts","on","reload","getUserWalletBalance","walletAddress","getBalance","getUserWormholeSignature","databaseWormhole","signature","deri","getDeriBalance","mintDToken","miningVaultAddress","miningVault","freeze","wormhole","mintDeri","mintAirdrop","miningVaultRouter","mint","setBroker","brokerAddress","brokerManagerAddress","getAirdropPTokenAddress","getAirdropPTokenWhitelistCount","totalWhitelistCount","addSlpLiquidity","removeSlpLiquidity","unlockSlp","addClp2Liquidity","removeClp2Liquidity","unlockClp2","addClpLiquidity","removeClpLiquidity","unlockClp","getLpLiquidityInfo","bTokenBalance","getSlpLiquidityInfo","getClpLiquidityInfo","getClp2LiquidityInfo","isLpUnlocked","isSlpUnlocked","isClpUnlocked","isClp2Unlocked","getLpWalletBalance","getSlpWalletBalance","getClpWalletBalance","getClp2WalletBalance","unlockLp","addLpLiquidity","removeLpLiquidity","mintTERC20","testERC20","deepClone","clone","shuffleArray","newUrls","random","splice","duration","MAX_SAFE_INTEGER","startTime","LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","process","WebSocket","socket","io","transports","withCredentials","reconnectListeners","reconnected","callback","emit","onMessage","listener","time_type","findEvent","withModal","appElement","getElementById","customizeStyle","overlay","zIndex","background","content","border","inset","overflow","WithModal","props","modalIsOpen","className","overlayMerged","mergedStyle","style","portalClassName","intl","onClose","inject","observer","Config","setAll","isOptions","cur","webpackContext","req","webpackContextResolve","__webpack_require__","module","exports","data-title","DesktopApp","MobileApp","Mask","useState","setIsOpen","useEffect","isShowMask","LoadingMask","top","MaskWrapper","screen","width","isOptionsLite","useRouteMatch","isOptionsPro","catagory","Wallet","detail","defaultNw","supportWeb3","isConnected","approve","approved","connect","loadWalletBalance","switchNetwork","metamask","supported","setDetail","setDefaultNw","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","supportOpen","isApproved","supportInnovation","Oracle","timeType","kData","ws","paused","listeners","already","setIndex","webSocket","subscribe","close","unsubscribeBars","setSymbol","setTimeType","unsubscribe","setPause","Position","callbackALL","spec","counter","mockPositionInfo","deltaFundingAccrued","balanceContract","started","runInAction","loadAll","startedAll","load","timer","clean","deltaFundingCoefficient","optionType","bTokenSymbolDisplay","getUnderlierStrike","setInfo","History","isSupportChain","Trading","slideIncrementMargin","history","userSelectedDirection","optionsConfigs","setWallet","setConfigs","setOptionConfigs","setConfig","setMarkPrice","setContract","setPosition","setPositions","setVolume","setUserSelectedDirection","setFundingRate","setVolatility","setHistory","setSlideMargin","fundingRateTip","optionFundingRateTip","initialMarginRatioTip","maintenanceMarginRatioTip","TransactionFeeTip","dpmmFundingRateTip","fundingCoefficientTip","rateTip","multiplierTip","TotalNetPositionTip","volumeDisplay","isNegative","isPositive","configInfo","indexOracle","markOracle","contractInfo","historyInfo","finishedCallback","defaultConfig","getDefaultConfig","loadByConfig","changed","onChange","pause","store","resume","symbolChanged","addListener","syncFundingRate","syncVolatility","loadFundingRate","then","results","finally","markpriceSymbolFormat","startAll","fromStore","getFromStore","setPaused","groupConfigBySymbol","increment","MarginRatio","substring","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","curContractValue","afterLeverage","isLoading","setIsLoading","trading","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e005c20d.chunk.js","sourcesContent":["export * from './config'\nexport * from './utils'\nexport { ContractBase } from './contract';\nexport * from './factory'\nexport * from './api'","export const SECONDS_IN_A_DAY = 86400;  // 60 * 60 * 24","export const getDBProviderUrls = () => [\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\n];\n\nexport const getDBAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n\nexport const getDBWormholeAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\n  }\n  // for test\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\n};\n\nexport const getDBAirdropAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n","import { getJsonConfig } from './config';\nimport { DeriEnv } from './env';\nimport { getPoolV1ConfigList } from './pool_v1';\nimport { LITE_AND_OPTION_VERSIONS, VERSIONS } from './version';\n// import { validateObjectKeyExist } from '../utils';\nimport { poolProcessor, poolValidator } from './config_processor';\nimport { openConfigListCache } from '../../v2_lite_open/api/query_api';\n\nconst expandPoolConfigV2 = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.bTokens.length; i++) {\n        const bToken = pool.bTokens[i];\n        for (let i = 0; i < pool.symbols.length; i++) {\n          const symbol = pool.symbols[i];\n          result.push({\n            pool: pool.pool,\n            pToken: pool.pToken,\n            lToken: pool.lToken,\n            router: pool.router,\n            initialBlock: pool.initialBlock,\n            chainId: pool.chainId,\n            bToken: bToken.bToken,\n            bTokenId: bToken.bTokenId,\n            bTokenSymbol: bToken.bTokenSymbol,\n            symbol: symbol.symbol,\n            symbolId: symbol.symbolId,\n            unit: symbol.unit,\n            type: 'perpetual',\n            version: 'v2',\n            versionId: pool.versionId,\n            isOption: false,\n          });\n        }\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expandPoolConfigV2Lite = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: symbol.unit,\n          type: 'perpetual',\n          version: 'v2_lite',\n          versionId: pool.versionId,\n          isOption: false,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expandPoolConfigOption = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          pricer: pool.pricer,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          volatilitySymbols: pool.volatilitySymbols,\n          unit: symbol.unit,\n          type: 'option',\n          version: 'option',\n          versionId: pool.versionId,\n          isOption: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expandPoolConfigV2LiteOpen = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      if (pool.symbols.length > 0) {\n        for (let i = 0; i < pool.symbols.length; i++) {\n          const symbol = pool.symbols[i];\n          result.push({\n            pool: pool.pool,\n            pToken: pool.pToken,\n            lToken: pool.lToken,\n            initialBlock: pool.initialBlock,\n            chainId: pool.chainId,\n            bToken: pool.bToken,\n            bTokenSymbol: pool.bTokenSymbol,\n            symbol: symbol.symbol,\n            symbolId: symbol.symbolId,\n            offchainSymbolIds: pool.offchainSymbolIds,\n            offchainSymbols: pool.offchainSymbols,\n            unit: symbol.unit,\n            type: 'perpetual',\n            version: 'v2_lite_open',\n            versionId: pool.versionId,\n            isOpen: true,\n          });\n        }\n      } else {\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: '--',\n          symbolId: '',\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: '',\n          type: 'perpetual',\n          version: 'v2_lite_open',\n          versionId: pool.versionId,\n          isOpen: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nexport const getConfig = (version='v2', env='dev') => {\n  let config = getJsonConfig(version, env);\n  if (version === 'v2_lite_open') {\n    //if (Date.now()/1000 - openConfigListCache.updatedAt() < 15) {\n      //console.log('hit openConfigListCache')\n    config.pools = openConfigListCache.get()\n    //}\n  }\n\n  const pools = config.pools;\n  if (pools && Array.isArray(pools)) {\n    for (let i = 0; i < pools.length; i++) {\n      poolProcessor[version](pools[i])\n      poolValidator[version](pools[i])\n    }\n  }\n\n  //validateObjectKeyExist(['oracle'], config, 'oracle');\n  //validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\n  return config;\n};\n\nexport const getPoolConfigList = (version = 'v2', env = 'dev') => {\n  let config;\n  config = getConfig(version, env);\n  if (version === 'v2') {\n    return expandPoolConfigV2(config);\n  } else if (version === 'v2_lite') {\n    return expandPoolConfigV2Lite(config, version);\n  } else if (version === 'v2_lite_open') {\n    return expandPoolConfigV2LiteOpen(config);\n  } else if (version === 'option') {\n    return expandPoolConfigOption(config);\n  }\n};\n\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\n  const poolConfigList = getPoolConfigList(version, DeriEnv.get())\n  const check = bTokenId != null\n    ? symbolId != null\n      ? (i) =>\n          i.pool === poolAddress &&\n          i.bTokenId === bTokenId &&\n          i.symbolId === symbolId\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\n  if (poolConfigList.length > 0) {\n    const res = poolConfigList.filter(check)\n    if (res && res.length > 0) {\n      return res\n    }\n  }\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\n}\n\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  //console.log('version', version, poolAddress)\n  // check the bToken in v2_lite\n  if (LITE_AND_OPTION_VERSIONS.includes(version)) {\n    bTokenId = undefined\n  }\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\n  return res[0]\n}\nexport const getFilteredPoolConfig  = getPoolConfig\n\n\nexport const getPoolVersion = (poolAddress) => {\n  let pools = VERSIONS.reduce((acc, version) => {\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\n  }, [])\n  //console.log(pools)\n  // add v1 config\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\n  const index = pools.findIndex((v) => v.pool === poolAddress)\n  //console.log('pools index', index)\n  if (index >= 0) {\n    return pools[index].version\n  }\n}\n\nexport const getPoolVersionId = (poolAddress) => {\n  let pools = VERSIONS.reduce((acc, version) => {\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\n  }, [])\n  // add v1 config\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\n  const index = pools.findIndex((v) => v.pool === poolAddress)\n  if (index >= 0) {\n    return pools[index].versionId\n  }\n}\n\nexport const _getPoolConfig = (poolAddress) => {\n  const version = getPoolVersion(poolAddress);\n  // console.log('version', version)\n  const config = getConfig(version, DeriEnv.get());\n  const pools = config.pools;\n  let pool = pools.find((p) => p.pool === poolAddress);\n  //console.log(pool)\n  if (pool) {\n    return pool;\n  } else {\n    throw new Error(`getPoolConfig, cannot find pool config by pool address ${poolAddress}`)\n  }\n};\n\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\n  const pool = _getPoolConfig(poolAddress);\n  const defaultBToken = {\n    bTokenId: '',\n    bTokenSymbol: '',\n    bToken: '',\n  };\n  const defaultSymbol = {\n    symbolId: '',\n    symbol: '',\n    unit: '',\n  };\n  let bToken, symbol;\n  if (pool.bTokens && (bTokenId !== undefined || bTokenId !== null)) {\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId)\n  }\n  if (pool.symbols && (symbolId !== undefined || symbolId !== null)) {\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\n  }\n  bToken = bToken || defaultBToken;\n  symbol = symbol || defaultSymbol\n  return {\n    pool: pool.pool,\n    pToken: pool.pToken,\n    lToken: pool.lToken,\n    router: pool.router,\n    bTokenCount: pool.bTokenCount,\n    symbolCount: pool.symbolCount,\n    initialBlock: pool.initialBlock,\n    chainId: pool.chainId,\n    bToken: bToken.bToken,\n    bTokenId: bToken.bTokenId,\n    bTokenSymbol: bToken.bTokenSymbol,\n    symbol: symbol.symbol,\n    symbolId: symbol.symbolId,\n    unit: symbol.unit,\n    version: 'v2',\n  };\n};\n\nexport const getPoolBTokenList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => {\n    return {\n      bTokenId: b.bTokenId,\n      bTokenSymbol: b.bTokenSymbol,\n      bTokenAddress: b.bToken,\n    };\n  });\n};\n\nexport const getPoolBTokenIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => b.bTokenId);\n};\n\nexport const getPoolSymbolList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((s) => {\n    return {\n      symbol: s.symbol,\n      symbolId: s.symbolId,\n      unit: s.unit,\n    };\n  });\n};\n\nexport const getPoolSymbolIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((b) => b.symbolId);\n};\n\nexport const getPoolViewerConfig = (chainId, version=\"v2_lite\") => {\n  const env = DeriEnv.get()\n  const config = getJsonConfig(version, env)\n  const viewers = config.poolViewer.filter((v) => v.chainId === chainId.toString())\n  if (viewers.length > 0) {\n    return viewers[0].address\n  } else {\n    throw new Error(`getPoolViewerConfig(): invalid chainId(${chainId}) or version(${version}).`);\n  }\n};","import { getJsonConfig } from './config';\nimport { DeriEnv } from './env';\n\nexport const getBrokerConfigList = (version) => {\n  const config = getJsonConfig(version, DeriEnv.get())\n  if (config.brokerManager) {\n    return config.brokerManager\n  } else {\n    // default value\n    return []\n  }\n};\n\nexport const getBrokerConfig = (version='v2', chainId) => {\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\n  if (filteredByChainId.length > 0) {\n    return filteredByChainId[0];\n  }\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\n};\n","// utils for derijsnext, combine in one file\nimport { getChainIds } from '../config/chain';\nimport { fromWei, toWei, toChecksumAddress } from './convert';\n\nexport const checkChainId = (chainId) => {\n  chainId = chainId != null ? chainId.toString() : chainId \n  if (getChainIds().includes(chainId)) {\n    return chainId;\n  }\n  throw new Error(`invalid chainId '${chainId}'`);\n};\n\nexport const checkAddress = (address) => {\n  address = address != null ? address.toString() : address\n  try {\n    return toChecksumAddress(address)\n  } catch(err) {\n    // console.log('-- checkAddress(): ', err)\n    throw new Error(`invalid eth address '${address}'`)\n  }\n}\n\nexport const checkApiInput = (chainId, poolAddress, accountAddress) => {\n  return [\n    checkChainId(chainId),\n    checkAddress(poolAddress),\n    checkAddress(accountAddress),\n  ];\n};\n\nexport const checkApiInputWithoutAccount = (chainId, poolAddress) => {\n  return [checkChainId(chainId), checkAddress(poolAddress)];\n};\n\nexport const checkTokenId = (tokenId) => {\n  tokenId = tokenId != null ? tokenId.toString() : tokenId\n  if (/^\\d+$/.test(tokenId)) {\n    return tokenId\n  }\n  throw new Error(`invalid tokenId '${tokenId}'`)\n}\n\nexport const checkAmount = (amount) => {\n  amount = amount != null ? amount.toString() : amount\n  if (/^-?[\\d\\.]+$/.test(amount)) {\n    return amount\n  }\n  throw new Error(`invalid amount '${amount}'`)\n}\n\nexport const checkSymbolId = (symbolId, symbolIds) => {\n  if (symbolId != null) {\n    const index = symbolIds.indexOf(symbolId.toString())\n    if (index > -1) {\n      return index\n    }\n  }\n  throw new Error(`invalid symbolId '${symbolId}' for symbolIds(${symbolIds.join(',')}) `);\n};\n\n// factory\nexport const contractFactory = (klass) => {\n  let instances = {}\n  return (chainId, address, initialBlock='') => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address, initialBlock);\n      return instances[key];\n    }\n  }\n}\n\n// contract\nconst processObjectResult = (val, propList = []) => {\n  return Object.keys(val).reduce((acc, prop) => {\n    if (typeof val[prop] === \"string\" && propList.includes(prop)) {\n      acc[prop] = fromWei(val[prop]);\n    } else {\n      acc[prop] = val[prop];\n    }\n    return acc;\n  }, {});\n};\n\nexport const processResult = (val, propList = []) => {\n  if (Array.isArray(val)) {\n    return val.map((v) => processResult(v, propList));\n  } else if (typeof val === 'object' && val !== null) {\n    return processObjectResult(val, propList);\n  } else if (typeof val === \"string\") {\n    return fromWei(val);\n  } else {\n    return val;\n  }\n};\n\nexport const processMethod = (klass, methodName, propList = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const res = await originMethod.apply(this, args);\n    return processResult(res, propList);\n  };\n  return klass;\n};\n\nexport const processTxMethod = (klass, methodName, toWeiArgPositions = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const newArgs = args.map((arg, index) =>\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\n    );\n    return await originMethod.apply(this, newArgs);\n  };\n  return klass;\n};\n\n// api for v2_lite and option\nexport const getLiquidity = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype['getPoolLiquidity'] = async function () {\n    const res = await this._call('getPoolStateValues', []);\n    this.stateValues = this.stateValues || {}\n    this.stateValues.liquidity = fromWei(res[0]);\n    return this.stateValues.liquidity\n  };\n  return klass\n}\n\nexport const getLastTimestamp = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype['getLastTimestamp'] = async function () {\n    const res = await this._call('getPoolStateValues', []);\n    this.stateValues = this.stateValues || {}\n    this.stateValues.lastTimestamp = res[1];\n    return this.stateValues.lastTimestamp\n  };\n  return klass\n}\nexport const getProtocolFeeAccrued = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype['getProtocolFeeAccrued'] = async function () {\n    const res = await this._call('getPoolStateValues', []);\n    this.stateValues = this.stateValues || {}\n    this.stateValues.protocolFeeAccrued = fromWei(res[2]);\n    return this.stateValues.protocolFeeAccrued;\n  };\n  return klass;\n}","import { web3Factory } from '../factory/web3';\nimport { numberToHex } from '../utils/convert';\n\nconst MAX_GAS_AMOUNT = 832731 * 2;\n//const RE_ERROR_MSG = /\\\"message\\\":\\s\\\"execution\\sreverted:([\\w\\s]+)\\\"/\nconst RE_ERROR_MSG = /\"message\":\\s\"execution\\sreverted:([\\w\\s]+)\"/\n\nexport class ContractBase {\n  constructor(chainId, contractAddress, contractAbi) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n\n  async _init() {\n    // re-init web3 and contract when web3 instance is null\n    if (!this.web3) {\n      this.web3 = await web3Factory.get(this.chainId);\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while (retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        // remove web3 instance to re-init\n        this.web3 = null\n        if (err.toString().includes('Invalid JSON RPC response')) {\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\n        } else {\n          console.log('error:', err)\n        }\n      }\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`The contract(${this.contractAddress}) '${method}([${args}])' failed with max retry 2.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    await this._init()\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (error) {\n        console.log(`-- estimatedGas: ${error}`)\n        // const res = error.toString().split('\\n').join('').match(RE_ERROR_MSG)\n        // if (Array.isArray(res) && res.length >= 2) {\n        //   throw new Error(res[1].trim())\n        // }\n      }\n    }\n    if (gas === 0) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          //receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args=[], accountAddress) {\n    await this._init()\n    const gas = await this._estimatedGas(method, args, accountAddress)\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\n  }\n\n}\n","import { hexToNumber } from './convert';\nimport { web3Factory } from '../factory/web3'\n\nconst intRe = /^\\d+$/\n// adopt from derijs next\nexport const deleteIndexedKey = (obj) => {\n  if (typeof obj === 'object' && obj !== null &&  Object.keys(obj).length > 0) {\n    const keys = Object.keys(obj);\n    const intKeyCount = keys.reduce(\n      (acc, k) => (intRe.test(k) ? acc + 1 : acc),\n      0\n    );\n    //console.log(keys);\n    // is leaf array\n    if (intKeyCount * 2 === keys.length) {\n      let newObj = {};\n      Object.keys(obj).forEach((k) => {\n        if (!intRe.test(k)) {\n          newObj[k] = obj[k];\n        }\n      });\n      return newObj;\n    } else if (intKeyCount === keys.length) {\n      // is array container\n      let res = [];\n      for (let i = 0; i < keys.length; i++) {\n        if (Array.isArray(obj[i])) {\n          res.push(deleteIndexedKey(obj[i]));\n        } else {\n          res.push(obj[i]);\n        }\n      }\n      return res;\n    }\n  }\n  return obj;\n};\n\n  // get block number when last updated\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getStorageAt(contractAddress, position)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  export const getLatestBlockNumber = async(chainId) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  export const getBlockInfo = async(chainId, blockNumber) => {\n    const web3 = await web3Factory.get(chainId)\n    return await web3.eth.getBlock(blockNumber);\n  }\n\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\n    let events = [];\n    let amount\n    if (['56', '97', '127', '80001'].includes(chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n\n  export const getPastEventsUseAbi = async(chainId, contractAddress, contractAbi, eventName, filter = {}, fromBlock = 0, to = 0) => {\n    const web3 = await web3Factory.get(chainId)\n    const contract = new web3.eth.Contract(contractAbi, contractAddress);\n    let events = [];\n    let amount\n    if (['56', '97', '127', '80001'].includes(chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }","import { perpetualPoolFactory } from '../factory';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { io } from 'socket.io-client';\n\n/** @module apiCache */\n/**\n * fundingRateCache Object\n * @name fundingRateCache\n * @property {function} get - Get the funding rate from cache\n * @property {function} set - set the funding rate cache\n */\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress) {\n      const key = `${chainId}.${contractAddress}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`Cache key is not in resourceMap: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, resource) {\n      const key = `${chainId}.${contractAddress}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const accountAddressCache = (function () {\n  let _accountAddress = '';\n  return {\n    get() {\n      if (_accountAddress === '') {\n        console.log(\"please init 'accountAddress' first\");\n      }\n      return _accountAddress;\n    },\n    set(value) {\n      if (typeof value === 'string' && value !== '') {\n        _accountAddress = value;\n      }\n    },\n  };\n})();\n\n/**\n * priceCache Object\n * @name priceCache\n * @property {function} get - Get the price from cache\n * @property {function} update - Set the price to automatic update during a time interval\n * @property {function} clear - Clear the the automatic update of the price\n */\nexport const priceCache = (function () {\n  let _price = '';\n  let _interval = null;\n  return {\n    get() {\n      if (_price === '') {\n        console.log(\"please init 'price' first\");\n      }\n      return _price;\n    },\n    async _update(poolAddress, symbol) {\n      try {\n        const res = await getPriceFromRest(symbol);\n        if (res !== '') {\n          _price = res;\n        }\n      } catch (err) {\n        console.log(`priceCache.update: ${err}`)\n      }\n    },\n    update(poolAddress, symbol) {\n      const self = this;\n      _interval = setInterval(() => {\n        // console.log('tick')\n        self._update(poolAddress, symbol);\n      }, 3000);\n    },\n    clear() {\n      if (_interval) {\n        clearInterval(_interval);\n      }\n      _price = '';\n    },\n  };\n})();\n\n/**\n * PerpetualPoolParametersCache Object\n * @name PerpetualPoolParametersCache\n * @property {function} get - Get the perpetualPoolParameters from cache\n * @property {function} update - Set the perpetualPoolParameters\n */\n\nexport const PerpetualPoolParametersCache = (function () {\n  let _parameters = {};\n  return {\n    get() {\n      if (!_parameters.multiplier) {\n        console.log(\"please init 'perpetual pool parameters' first\");\n      }\n      return _parameters;\n    },\n    async update(chainId, poolAddress) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      const res = await perpetualPool.getParameters();\n      if (res.multiplier) {\n        _parameters = res;\n      }\n      return res;\n    },\n  };\n})();\n\n// websocket instance\nexport const wsInstance = (function(){\n  let _ws = null;\n  return {\n    get() {\n      if (_ws) {\n        return _ws\n      } else {\n        console.log('wsInstance.get() error: ws instance is not init')\n      }\n    },\n    set(url) {\n      try {\n        const ws = io(url, {\n          transports: ['websocket'],\n          path: '/ws',\n        });\n        ws.on('connect', () => {\n          console.log('hello from ws:', ws.id);\n        })\n        if (ws) {\n          _ws = ws\n        } else {\n          console.log('wsInstance.get() error: ws instance is not init')\n        }\n      } catch (err) {\n        console.log('wsInstance.set():', err)\n      }\n    },\n    getOrSet(url) {\n      if (!_ws) {\n        this.set(url)\n      }\n      return _ws\n    }\n  }\n})();\n","import {\n  bTokenFactory,\n  bg,\n  formatBN,\n  naturalToDeri,\n  getPoolV1Config,\n  deriToNatural,\n} from '../../shared';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle'\nimport {\n  calculateMaxRemovableShares,\n  calculateMaxWithdrawMargin,\n  isOrderValid,\n} from '../calculation';\n\n/**\n * Unlock the account in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Deposit margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string|number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\n};\n\n/**\n * Withdraw margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\n\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\n    price,\n    volume,\n    margin,\n    cost,\n    multiplier,\n    minInitialMarginRatio\n  );\n  if (bg(amount).lte(maxWithdrawMargin)) {\n    try {\n      const tx = await pPool._transact(\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'amount exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Mint in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const decimals = await bToken.decimals();\n  const BONE = 10 ** decimals;\n  amount = formatBN(bg(amount).multipliedBy(BONE));\n  let res;\n  try {\n    const tx = await bToken._transact('mint', [amount], accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Add liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await pPool._transact(\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} shares\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares\n) => {\n  const { lTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const {\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n  } = await pPool.getStateValues();\n\n  const maxRemovableShares = calculateMaxRemovableShares(\n    lTokenBalance,\n    lTokenTotalSupply,\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n    multiplier,\n    minPoolMarginRatio,\n    price\n  );\n  let res;\n  if (bg(shares).lte(maxRemovableShares)) {\n    try {\n      const tx = await pPool._transact(\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(shares)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'shares exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Trade with margin in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} newVolume\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minPoolMarginRatio,\n  } = await pPool.getParameters();\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\n  let res;\n  const orderValidation = isOrderValid(\n    price,\n    margin,\n    volume,\n    liquidity,\n    tradersNetVolume,\n    multiplier,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    bg(newVolume),\n    bg(amount)\n  );\n  if (orderValidation.success) {\n    try {\n      const tx = await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.message };\n  }\n  return res;\n};\n\n/**\n * Close position in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  let { volume } = await pToken.getPositionInfo(accountAddress);\n  volume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(volume), '0'],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n","import {\n  //naturalToDeri,\n  deriToNatural,\n  hexToString,\n  toChecksumAddress,\n  hexToNumber,\n  hexToNumberString,\n  bg,\n} from '../../shared/utils';\nimport { getPoolV1Config } from '../../shared/config';\n\nimport { databaseFactory } from '../../shared/factory';\nimport { perpetualPoolFactory } from '../factory';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  bTokenSymbol,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier,\n    feeRatio\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: bg(volume).times(multiplier).toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  // console.log(JSON.stringify(res))\n  return res;\n};\n\nconst processLiquidateEvent = async (\n  info,\n  txHash,\n  bTokenSymbol,\n  multiplier\n) => {\n  // console.log(info)\n  const volume = deriToNatural(info.volume).abs();\n  // const cost = deriToNatural(info.cost).abs()\n  // const margin = info.margin\n  const timestamp = `${info.timestamp}000`;\n  const price = deriToNatural(info.price);\n  // const liquidator = info.liquidator\n  // const reward = info.reward\n  const national = volume.times(price).times(multiplier);\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\n\n  const res = {\n    direction: 'Liquidation',\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: national.toString(),\n    volume: bg(volume).times(multiplier).toString(),\n    transactionFee: '0',\n    transactionHash: txHash.toString(),\n    time: timestamp,\n    // cost: naturalToDeri(cost).toString(),\n    // margin: margin.toString(),\n    // liquidator,\n    // reward: reward.toString(),\n  };\n  return res;\n};\n\n/**\n * Get the user trade history\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n * @returns {string} response[].direction\n * @returns {string} response[].baseToken\n * @returns {string} response[].price\n * @returns {string} response[].notional\n * @returns {string} response[].volume\n * @returns {string} response[].transactionFee\n * @returns {string} response[].time - Timestamp of the trade\n */\n\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\n  const keyMeta = `${chainId}.${poolAddress}`;\n  const db = databaseFactory();\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\n  ]);\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [\n      tradeHistoryOffline,\n      tradeHistoryOnline,\n      liquidateHistoryOffline,\n      liquidateHistoryOnline,\n    ] = await Promise.all([\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistoryOffline)\n      .concat(liquidateHistoryOffline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n\n// get trade history combined from cache and from online pull\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\n  // console.log(chainId, poolAddress, accountAddress)\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.trade`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const {\n    multiplier,\n  } = await perpetualPool.getParameters();\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const tradeHistoryLength = keyArray.length / 8;\n      // console.log(`trade history length: ${tradeHistoryLength}`)\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < tradeHistoryLength; i++) {\n        const indexBase = i * 8;\n        //console.log(resp[indexBase + 6].trim());\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n\n// get trade history online from the Block number\nexport const getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const {\n    multiplier,\n    feeRatio,\n    minInitialMarginRatio,\n  } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processTradeEvent(\n      perpetualPool,\n      bTokenSymbol,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      minInitialMarginRatio\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get liquidate history online from the Block number\nexport const getLiquidateHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Liquidate',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const { multiplier } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processLiquidateEvent(\n      item.returnValues,\n      item.transactionHash,\n      bTokenSymbol,\n      multiplier\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get trade history combined from cache and from online pull\nconst getLiquidateHistoryOffline = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.liquidate`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const {\n    multiplier,\n  } = await perpetualPool.getParameters();\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const liquidateHistoryLength = keyArray.length / 8;\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < liquidateHistoryLength; i++) {\n        const indexBase = i * 8;\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n","// const\nimport { getPoolV1Config } from '../../shared/config';\nimport { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getTradeHistoryOnline,\n} from './trade_history_api';\nimport { perpetualPoolFactory } from '../factory';\n\n/**\n * Get specification from REST API, please refer {@link getSpecification}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getSpecification2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate from REST API, please refer {@link getFundingRate}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRate2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\n  );\n  if (res && res.success) {\n    let result = res.data;\n    result.price = bg(result.price);\n    result.fundingRate = bg(result.fundingRate);\n    result.liquidityUsed = bg(result.liquidityUsed);\n    return result;\n  }\n  return res;\n};\n\n/**\n * Get position info from REST API, please refer {@link getPositionInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getPositionInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance from REST API, please refer {@link getWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n */\nexport const getTradeHistory2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  const res = await fetchJson(\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\n    tradeHistory = res.data.tradeHistory;\n  }\n\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const {\n    multiplier,\n  } = await perpetualPool.getParameters();\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\n    return {\n      direction: i.direction.trim(),\n      baseToken: bTokenSymbol,\n      price: deriToNatural(i.price).toString(),\n      notional: deriToNatural(i.notional).toString(),\n      volume: deriToNatural(i.volume).times(multiplier).toString(),\n      transactionFee: deriToNatural(i.transactionFee).toString(),\n      transactionHash: i.transactionHash,\n      time: i.time.toString(),\n    };\n  });\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [tradeHistoryOnline ] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      )\n    ]);\n    const result = tradeHistoryOnline.concat(tradeHistory);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n","import {\n  validateArgs,\n  naturalWithPercentage,\n  deriToNatural,\n  bg,\n} from '../../shared/utils';\nimport {\n  bTokenFactory,\n} from '../../shared/factory';\nimport { getPoolV1Config, toChecksumAddress } from '../../shared';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { getPoolInfoApy } from '../../shared/api/database_api';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport {\n  fundingRateCache,\n  PerpetualPoolParametersCache,\n  priceCache,\n} from './api_v1_globals';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  calculateShareValue,\n  calculateMaxRemovableShares,\n  calculateEntryPrice,\n  calculateMarginHeld,\n  calculatePnl,\n  calculateLiquidationPrice,\n  processFundingRate,\n} from '../calculation';\n\n/**\n * Get the contract information\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.addresses\n * @returns {string} response.symbol\n * @returns {string} response.bTokenSymbol\n * @returns {string} response.multiplier\n * @returns {string} response.feeRatio\n * @returns {string} response.minPoo\n * @returns {string} response.minPoolMarginRatio\n * @returns {string} response.minInitialMarginRatio\n * @returns {string} response.minMaintenanceMarginRatio\n * @returns {string} response.minAddLiquidity\n * @returns {string} response.redemptionFeeRatio\n * @returns {string} response.fundingRateCoefficient\n * @returns {string} response.minLiquidationReward\n * @returns {string} response.maxLiquidationReward\n * @returns {string} response.liquidationCutRatio\n * @returns {string} response.priceDelayAllowance\n */\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  //accountAddress,\n) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    feeRatio,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n    minAddLiquidity,\n    redemptionFeeRatio,\n    fundingRateCoefficient,\n    minLiquidationReward,\n    maxLiquidationReward,\n    liquidationCutRatio,\n    priceDelayAllowance,\n  } = await pPool.getParameters();\n  let symbol = await pPool.symbol();\n  const bTokenSymbol = await bToken.symbol();\n\n  // fix symbol BTCUSD issue, will remove later\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\n  //   symbol = 'iMEME'\n  // }\n\n  return {\n    addresses: poolAddress,\n    symbol,\n    bTokenSymbol,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n    minAddLiquidity: minAddLiquidity.toString(),\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minLiquidationReward: minLiquidationReward.toString(),\n    maxLiquidationReward: maxLiquidationReward.toString(),\n    liquidationCutRatio: liquidationCutRatio.toString(),\n    priceDelayAllowance: priceDelayAllowance.toString(),\n  };\n};\n\n/**\n * Get position Information of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.volume\n * @returns {string} response.averageEntryPrice\n * @returns {string} response.margin\n * @returns {string} response.marginHeld\n * @returns {string} response.unrealizedPnl\n * @returns {string} response.liquidationPrice\n */\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\n  try {\n    poolAddress = toChecksumAddress(poolAddress)\n    accountAddress = toChecksumAddress(accountAddress)\n    const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    //pPool.setAccount(accountAddress);\n    const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n    //pToken.setAccount(accountAddress);\n    const {\n      multiplier,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = await pPool.getParameters();\n    const symbol = await pPool.symbol();\n    //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\n    const { volume, margin, cost } = await pToken.getPositionInfo(\n      accountAddress\n    );\n    const price = await getPriceFromRest(symbol);\n    if (price === '') {\n      return {\n        price,\n        volume: bg(volume).times(multiplier).toString(),\n        averageEntryPrice: calculateEntryPrice(\n          volume,\n          cost,\n          multiplier\n        ).toString(),\n        margin: margin.toString(),\n        marginHeld: '',\n        unrealizedPnl: '',\n        liquidationPrice: calculateLiquidationPrice(\n          volume,\n          margin,\n          cost,\n          multiplier,\n          minMaintenanceMarginRatio\n        ).toString(),\n      };\n    } else {\n      return {\n        price,\n        volume: bg(volume).times(multiplier).toString(),\n        averageEntryPrice: calculateEntryPrice(\n          volume,\n          cost,\n          multiplier\n        ).toString(),\n        margin: margin.toString(),\n        marginHeld: calculateMarginHeld(\n          price,\n          volume,\n          multiplier,\n          minInitialMarginRatio\n        ).toString(),\n        unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n        liquidationPrice: calculateLiquidationPrice(\n          volume,\n          margin,\n          cost,\n          multiplier,\n          minMaintenanceMarginRatio\n        ).toString(),\n      };\n    }\n  } catch (err) {\n    return {};\n  }\n};\n\n/**\n * Get liquidity Info of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply, symbol] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    pPool.symbol(),\n  ]);\n  const price = await getPriceFromRest(symbol);\n  const {\n    liquidity,\n    tradersNetCost,\n    tradersNetVolume,\n  } = await pPool.getStateValues();\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const poolDynamicEquity = liquidity.plus(\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\n  );\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n      multiplier,\n      minPoolMarginRatio,\n      price\n    ).toString(),\n  };\n};\n\n/**\n * Get user balance in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {string} user balance\n */\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n\n/**\n * Check account is unlocked in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Get estimate margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} volume\n * @param {string} leverage\n * @returns {string}\n */\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const { multiplier } = await pPool.getParameters();\n  const symbol = await pPool.symbol();\n  const price = await getPriceFromRest(symbol);\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .div(bg(leverage))\n    .toString();\n};\n\n/**\n * Get estimate Fee in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} volume\n * @returns {string}\n */\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\n  let price = priceCache.get();\n  let parameters = PerpetualPoolParametersCache.get();\n  if (price === '') {\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    const symbol = await pPool.symbol();\n    await priceCache._update(poolAddress, symbol);\n    price = priceCache.get();\n  }\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\n  // const { multiplier, feeRatio } = await pPool.getParameters();\n  if (!parameters.multiplier) {\n    parameters = await PerpetualPoolParametersCache.update(\n      chainId,\n      poolAddress\n    );\n  }\n  //console.log('price', price);\n  const { multiplier, feeRatio } = parameters;\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};\n\n/**\n * Get funding rate of the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.fundingRate0\n * @returns {string} response.fundingRatePerBlock\n * @returns {string} response.liquidity\n * @returns {string} response.volume\n * @returns {string} response.tradersNetVolume\n */\nexport const getFundingRate = async (chainId, poolAddress) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const res = await perpetualPool\n    .getFundingRate()\n    .catch((err) => console.log('getFundingRate', err));\n  fundingRateCache.set(chainId, poolAddress, res);\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\n\n  if (res) {\n    // console.log(hexToNatural(res[0]));\n    const {\n      fundingRate,\n      fundingRatePerBlock,\n      liquidity,\n      tradersNetVolume,\n      multiplier,\n    } = res;\n    const volume = poolInfo.volume24h;\n    // fundingRate = processFundingRate(chainId, fundingRate);\n\n    return {\n      fundingRate0: naturalWithPercentage(fundingRate),\n      fundingRatePerBlock: bg(fundingRatePerBlock).toExponential(10),\n      liquidity: liquidity.toString(),\n      volume: deriToNatural(volume).toString(),\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\n    };\n  }\n};\n\nexport const getFundingRateCache = async(chainId, poolAddress) => {\n  return fundingRateCache.get(chainId, poolAddress)\n}\n\n/**\n * Get estimate funding rate\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let fundingRate1;\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ];\n    if (!validateArgs(...parameters)) {\n      return {\n        fundingRate1: '0',\n      };\n    }\n    // console.log(parameters)\n    fundingRate1 = calculateFundingRate(...parameters);\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\n    return {\n      fundingRate1: naturalWithPercentage(fundingRate1),\n    };\n  }\n};\n\n/**\n * Get liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidityUsed0\n */\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const { liquidityUsed } = res;\n    return {\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\n    };\n  }\n};\n\n/**\n * Get estimate liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool\n      .getFundingRate()\n      .catch((err) => console.log('getLiquidityUsed', err));\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.poolMarginRatio,\n    ];\n    if (!validateArgs(...parameters)) {\n      return {\n        liquidityUsed1: '0',\n      };\n    }\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\n    return {\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\n    };\n  }\n};\n","import {\n  LTokenLite,\n  PTokenLite,\n  PerpetualPoolLiteViewer \n} from './contract';\nimport { PerpetualPoolLiteOld } from './contract/perpetual_pool_old';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\n// const factoryWithUpgrade = (klass, klassOld, newPoolList) => {\n//   let instances = {}\n//   return (chainId, address, initialBlock='') => {\n//     const key = address\n//     if (Object.keys(instances).includes(key)) {\n//       return instances[key];\n//     } else {\n//       if (Array.isArray(newPoolList) && newPoolList.includes(address)) {\n//         instances[key] = new klass(chainId, address, initialBlock);\n//         return instances[key];\n//       } else {\n//         instances[key] = new klassOld(chainId, address, initialBlock);\n//         return instances[key];\n//       }\n//     }\n//   }\n// }\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLiteOld);\n\nexport const lTokenLiteFactory = factory(LTokenLite)\n\nexport const pTokenLiteFactory = factory(PTokenLite)\n\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)","import {\n  //getPoolConfig,\n  ContractBase,\n  deriToNatural,\n  naturalToDeri,\n  //isEqualSet,\n  bTokenFactory,\n} from '../../shared';\nimport { checkOffChainOracleSymbol, getPriceInfos } from '../../shared/utils/oracle';\nimport { perpetualPoolLiteOldAbi} from './abis';\nimport { lTokenLiteFactory, pTokenLiteFactory } from '../factory';\n\nexport class PerpetualPoolLiteOld extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteOldAbi);\n  }\n\n  async init() {\n    // init web3 and contract\n    await this._init();\n    // init address and parameters\n    if (!this.addresses || !this.pToken) {\n      [this.addresses, this.parameters] = await Promise.all([\n        this.getAddresses(),\n        this.getParameters(),\n      ]);\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\n      // init bToken, pToken and lToken\n      this.bToken = bTokenFactory(this.chainId, bTokenAddress);\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\n      this.bTokenSymbol = await this.bToken.symbol();\n    }\n    const symbolIds = await this.pToken.getActiveSymbolIds();\n    // update symbolIds\n    if (\n      !this.activeSymbolIds ||\n      this.activeSymbolIds.toString() !== symbolIds.toString() ||\n      this.offChainOracleSymbolIds == null\n    ) {\n      this.activeSymbolIds = symbolIds;\n      this.symbols = await Promise.all(\n        this.activeSymbolIds.reduce(\n          (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n          []\n        )\n      );\n      this.activeSymbolNames = this.symbols.map((s) => s.symbol);\n      this.offChainOracleSymbols = await Promise.all(\n        this.symbols\n          .map((s) => s.oracleAddress)\n          .reduce(\n            (acc, o, index) => [\n              ...acc,\n              checkOffChainOracleSymbol(\n                this.chainId,\n                o,\n                this.symbols[index].symbol\n              ),\n            ],\n            []\n          )\n      );\n      this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\n        (acc, i, index) => {\n          return this.offChainOracleSymbols[index] === '' ? acc : [...acc, i];\n        },\n        []\n      );\n      this.offChainOracleSymbols = this.offChainOracleSymbols.filter(\n        (s) => s && s !== ''\n      );\n      //console.log('offchain', this.offChainOracleSymbols);\n    }\n  }\n\n  // update symbols\n  async getSymbols() {\n    await this.init()\n    this.symbols = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n        []\n      )\n    );\n    return this.symbols\n  }\n\n  // update positions\n  async getPositions(accountAddress) {\n    await this.init()\n    this.positions = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, symbolId) => [\n          ...acc,\n          this.pToken.getPosition(accountAddress, symbolId),\n        ],\n        []\n      )\n    );\n    return this.positions\n  }\n\n  async getAddresses() {\n    const res = await this._call('getAddresses');\n    return res;\n  }\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      // decimals0: res.decimals0,\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getLastUpdateBlock() {\n    const res = await this._call('getLastUpdateBlock');\n    return parseInt(res);\n  }\n  async getProtocolFeeAccrued() {\n    const res = await this._call('getProtocolFeeAccrued');\n    return deriToNatural(res);\n  }\n  async getLiquidity() {\n    const res = await this._call('getLiquidity');\n    return deriToNatural(res);\n  }\n  // async getBTokenOracle(bTokenId) {\n  //   //bTokenId = parseInt(bTokenId)\n  //   return await this._call('getBTokenOracle', [bTokenId])\n  // }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res = await this._call('getSymbol', [symbolId]);\n      return {\n        symbol: res.symbol,\n        symbolId: res.symbolId,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n\n  // async getSymbolOracle(symbolId) {\n  //   //symbolId = parseInt(symbolId)\n  //   return await this._call('getSymbolOracle', [symbolId])\n  // }\n\n  async _getSymbolPrices() {\n    let prices = [];\n    await this.init()\n    if (this.offChainOracleSymbolIds.length > 0) {\n      const priceInfos = await getPriceInfos(this.offChainOracleSymbols);\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\n        acc.push([\n          this.offChainOracleSymbolIds[\n            this.offChainOracleSymbols.indexOf(Object.keys(priceInfos)[index])\n          ],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return prices;\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async addMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async trade(accountAddress, symbolId, newVolume) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(newVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import { catchApiError, bg, deriToNatural, getNetworkName } from '../../shared/utils';\nimport { databaseFactory } from '../../shared/factory';\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../v1/calculation';\nimport { perpetualPoolLiteFactory } from '../factory';\n\n\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  //const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', null, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  await perpetualPool.init()\n  // const bTokenSymbol = perpetualPool.bTokenSymbol\n  // const lToken = lTokenLiteFactory(chainId, lTokenAddress)\n  // const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const lToken = perpetualPool.lToken\n  // const pToken = perpetualPool.pToken\n  const parameterInfo = perpetualPool.parameters\n  const symbolIds = perpetualPool.activeSymbolIds\n  //const symbolIndex = symbolIds.indexOf(symbolId)\n  //const symbols = perpetualPool.symbols\n\n  const [liquidity, lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    //perpetualPool.getParameters(),\n    perpetualPool.getLiquidity(),\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    //pToken.getActiveSymbolIds(),\n  ])\n  const { minPoolMarginRatio } = parameterInfo;\n  let promises = []\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises)\n  const totalPnl = symbols.reduce((acc, s) => {\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\n  }, bg(0))\n  const poolDynamicEquity = liquidity.minus(totalPnl)\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      minPoolMarginRatio\n    ).toString(),\n  };\n}\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n}\n\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidity: '',\n    symbol:'',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n};\n","import { catchTxApiError } from '../../shared/utils';\nimport { perpetualPoolLiteFactory } from '../factory.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import { bg, max } from '../../shared/utils';\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\n// export const calculateMaxWithdrawMargin = (\n//   price,\n//   volume,\n//   margin,\n//   cost,\n//   multiplier,\n//   minInitialMarginRatio\n// ) => {\n//   if (volume.eq(0)) {\n//     return margin;\n//   }\n//   const held = calculateMarginHeld(\n//     price,\n//     volume,\n//     multiplier,\n//     minInitialMarginRatio\n//   );\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n//   return withdrawable;\n// };\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  dynamicCost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = bg(cost).minus(margin);\n  let res = bg(volume).gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  //price,\n  margin,\n  marginHeld,\n  liquidity,\n  liquidityUsed,\n  // multiplier,\n  // minPoolMarginRatio,\n  // newVolume,\n) => {\n  const minMargin = marginHeld;\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\n  //   .div(minPoolMarginRatio)\n  //   .div(price)\n  //   .div(multiplier);\n  if (margin.gte(minMargin)) {\n    // if (\n    //   newVolume.lte(poolMaxVolume) &&\n    //   newVolume.gte(poolMaxVolume.negated())\n    // ) {\n    if (liquidity.minus(liquidityUsed).gte(0)) {\n      return { success: true };\n    }\n    return { success: false, error: 'Pool has insufficient liquidity' };\n  }\n  return { success: false, error: 'Trader has insufficient margin' };\n};\n\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};","import { bg, getDailyBlockNumber, validateArgs } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(multiplier)\n      .times(poolMarginRatio)\n      .div(liquidity)\n      .abs();\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio,\n    ];\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\n  }\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    )\n  ) {\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\n      .times(price)\n      // .times(price)\n      // .times(multiplier)\n      .times(multiplier)\n      .times(fundingRateCoefficient)\n      .div(liquidity);\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    ];\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\n  }\n};\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n\nexport const calculateFundingFee = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  fundingRateCoefficient,\n  dynamicEquity,\n  cumulativeFundingRate,\n  lastCumulativeFundingRate,\n  lastUpdatedBlockNumber,\n  latestBlockNumber,\n  volume,\n) => {\n  if (bg(volume).eq(0)) {\n    return '0'\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      dynamicEquity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    ];\n    if (\n      validateArgs(...args)\n    ) {\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\n        .times(price)\n        .times(multiplier)\n        .times(price)\n        .times(multiplier)\n        .times(fundingRateCoefficient)\n        .div(dynamicEquity)\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\n        .plus(cumulativeFundingRate)\n        .minus(lastCumulativeFundingRate)\n        .times(volume)\n    } else {\n      console.log(`calculateFundingFee: invalid args: ${args}`);\n      return 'NaN'\n    }\n  }\n};","import { bg, max, min } from '../../shared/utils'\n\nexport const calculateBTokenDynamicEquities = (bTokens) => {\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\n  return totalDynamicEquity\n}\n\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  const b = bTokens['0']\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\n  // use 1 as efficient\n  if (\n    !totalDynamicEquity.eq(0) &&\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\n  ) {\n    return { success: false, error: 'Trader has insufficient bToken0' };\n  } else {\n    return { success: true };\n  }\n}\n\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\n  if (bg(amount).gte(userLiquidity)) {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\n  } else {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\n  }\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  let totalCost = bg(0)\n  for (let i=0; i<symbols.length; i++) {\n    const s = symbols[i]\n    if (!bg(s.tradersNetVolume).eq(0)) {\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\n      totalCost = totalCost.plus(cost.abs())\n    }\n  }\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\n  if (\n    !totalCost.eq(0) &&\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\n  ) {\n    return { success: false, error: 'Trader has insufficient liquidity' };\n  } else {\n    return { success: true };\n  }\n}\n\n\nexport const calculateMaxRemovableLiquidity = (\n  bToken,\n  userLiquidity,\n  cost,\n  pnl,\n  restLiquidity,\n  minPoolMarginRatio,\n) => {\n  if (bg(cost).eq(0)) {\n    return userLiquidity;\n  } else {\n    return max(\n      min(\n        bg(bToken.liquidity).minus(\n          bg(minPoolMarginRatio)\n            .times(cost)\n            .plus(pnl)\n            .minus(restLiquidity)\n            .div(bToken.price)\n            .div(bToken.discount)\n        ).times('0.98'),\n        bg(userLiquidity)\n      ),\n      bg(0)\n    );\n  }\n};\n\n// for v1 mining\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\n\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  value,\n  cost,\n  minPoolMarginRatio,\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const removable = bg(liquidity)\n    .plus(cost)\n    .minus(value)\n    .minus(bg(value).abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n","export const priceCache = (function(){\n  let _prices = {}\n  return {\n    get(poolAddress, symbolId) {\n      const key = `${poolAddress}.${symbolId}`\n      if (Object.keys(_prices).includes(key)) {\n        const [price, ] = _prices[key].split('|')\n        //if (parseInt(timestamp) - Date.now() < 10000) {\n          return price\n        //}\n      }\n      console.log('please init priceCache first')\n    },\n    // update(chainId, poolAddress, symbolId) {\n    //   // place holder\n    // },\n    set(poolAddress, symbolId, val) {\n      if (!isNaN(parseFloat(val))) {\n        const timestamp = Date.now().toString()\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\n      }\n    }\n  }\n})()\n\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress, symbolId) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, symbolId, resource) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const liquidatePriceCache = (function() {\n  let _cache = {}\n  return {\n    get(address) {\n      if (Object.keys(_cache).includes(address)) {\n        return _cache[address]\n      } else {\n        return {}\n      }\n    },\n    set(address, val) {\n      _cache[address] = val\n    },\n  }\n})()\n","import { fromWei } from \"../shared\";\nimport { getOraclePriceFromCache2, oraclePricesCache } from \"../shared/utils/oracle\";\n\nexport const getSymbolPrices = async (chainId, symbols, offChainSymbolIds, offChainSymbolNames) => {\n  const onChainOracleAddressWithPlaceHolder = symbols.map((s) =>\n    offChainSymbolIds.indexOf(s.symbolId) > -1\n      ? ''\n      : s.oracleAddress\n  );\n\n  const onChainSymbolPrices = await Promise.all(\n    onChainOracleAddressWithPlaceHolder\n      .reduce((acc, address, index) => {\n        const _symbol = symbols.map((s) => s.symbol)[index];\n        if (address !== '') {\n          return acc.concat(\n            getOraclePriceFromCache2.get(chainId, _symbol, address)\n          );\n        } else {\n          return acc.concat('');\n        }\n      }, [])\n      .filter((f) => f !== '')\n  );\n\n  const res =  await oraclePricesCache.get(offChainSymbolNames)\n  const offChainSymbolPrices = offChainSymbolNames.map((s) => fromWei(res[s].price))\n\n  // combine offChain and onChain symbol prices\n  const symbolPrices = onChainOracleAddressWithPlaceHolder.map((o) => {\n    if (o !== '') {\n      return onChainSymbolPrices.shift();\n    } else {\n      return offChainSymbolPrices.shift();\n    }\n  });\n  return symbolPrices\n};","import {\n  calculateEntryPrice,\n  calculateFundingRate,\n  calculateLiquidationPrice,\n  processFundingRate,\n  calculateFundingFee,\n} from '../../v2/calculation';\nimport { getPoolConfig } from \"../../shared/config\"\nimport { bTokenFactory } from \"../../shared/factory\"\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from \"../factory.js\"\nimport {\n  bg,\n  catchApiError,\n  getLatestBlockNumber,\n} from '../../shared/utils';\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\nimport { getIndexInfo } from '../../shared/config/token';\nimport { getSymbolPrices } from '../utils';\n\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    //const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const bTokenSymbol = perpetualPool.bTokenSymbol\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo;\n\n    return {\n      symbol,\n      bTokenSymbol,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n      indexConstituents: getIndexInfo(symbol),\n    }\n  }, args, 'getSpecification', {\n    symbol: '',\n    bTokenSymbol: '',\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n    indexConstituents: { url: '', tokens: [] },\n  })\n}\n\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const pToken = perpetualPool.pToken\n    const parameterInfo = perpetualPool.parameters \n    const symbolIds = perpetualPool.activeSymbolIds\n    const symbolIndex = symbolIds.indexOf(symbolId)\n\n    if (symbolIndex > -1) {\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      //const symbol = symbols[symbolIndex].symbol\n      //const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n      //const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\n      const [\n        symbolInfo,\n        liquidity,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        positionInfo,\n        margin,\n        //latestPrice,\n      ] = await Promise.all([\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n        perpetualPool.getSymbol(symbolId),\n        perpetualPool.getLiquidity(),\n        perpetualPool.getLastUpdateBlock(),\n        getLatestBlockNumber(chainId),\n        pToken.getPosition(accountAddress, symbolId),\n        pToken.getMargin(accountAddress),\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\n      ]);\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n      const { volume, cost, lastCumulativeFundingRate } = positionInfo;\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        tradersNetVolume,\n        cumulativeFundingRate,\n      } = symbolInfo;\n      const {\n        minInitialMarginRatio,\n        minMaintenanceMarginRatio,\n      } = parameterInfo;\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      // }\n      //const symbols = await Promise.all(promises);\n\n      const symbolPrices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\n      //   const address = isOffchain ? '' : symbols[i].oracleAddress\n      //   const _symbol = symbolList[i]\n      //   promises.push(\n      //     getOraclePriceFromCache2.get(chainId, _symbol, address),\n      //   );\n      // }\n      // const symbolPrices = await Promise.all(promises);\n      let price;\n      if (symbolIndex === '-1') {\n        price = '0';\n      } else {\n        price = symbolPrices[symbolIndex];\n        priceCache.set(poolAddress, symbolId, price);\n      }\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      const marginHeld = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .times(minInitialMarginRatio)\n            .abs()\n        );\n      }, bg(0));\n      const marginHeldBySymbol = bg(volume)\n        .abs()\n        .times(multiplier)\n        .times(price)\n        .times(minInitialMarginRatio);\n\n      const unrealizedPnl = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .minus(positions[index].cost)\n        );\n      }, bg(0));\n      const unrealizedPnlList = symbols.map((s, index) => {\n        return [\n          s.symbol,\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .minus(positions[index].cost)\n            .toString(),\n        ];\n      }, bg(0));\n\n      const totalCost = positions.reduce((accum, p) => {\n        return accum.plus(bg(p.cost));\n      }, bg(0));\n      const dynamicCost = symbols.reduce((accum, s, index) => {\n        if (index !== symbolIndex) {\n          return accum.plus(\n            bg(positions[index].volume)\n              .times(symbolPrices[index])\n              .times(s.multiplier)\n          );\n        } else {\n          return accum;\n        }\n      }, bg(0));\n\n      const fundingFee = calculateFundingFee(\n        tradersNetVolume,\n        price,\n        multiplier,\n        fundingRateCoefficient,\n        liquidity,\n        cumulativeFundingRate,\n        lastCumulativeFundingRate,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        volume\n      );\n\n      liquidatePriceCache.set(poolAddress, {\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        price,\n        multiplier,\n        minMaintenanceMarginRatio,\n      });\n\n      return {\n        symbol:symbols[symbolIndex].symbol,\n        price,\n        volume: bg(volume).times(symbols[symbolIndex].multiplier).toString(),\n        averageEntryPrice: calculateEntryPrice(\n          volume,\n          cost,\n          multiplier\n        ).toString(),\n        margin: margin.toString(),\n        marginHeld: marginHeld.toString(),\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\n        unrealizedPnl: unrealizedPnl.toString(),\n        unrealizedPnlList,\n        fundingFee: fundingFee.toString(),\n        liquidationPrice: calculateLiquidationPrice(\n          volume,\n          margin,\n          totalCost,\n          dynamicCost,\n          multiplier,\n          minMaintenanceMarginRatio\n        ).toString(),\n      };\n    } else {\n      throw new Error(`-- getPostionInfo: invalid symbolId(${symbolId})`)\n    }\n  }, args, 'getPositionInfo', {})\n}\n\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const pToken = perpetualPool.pToken\n    const parameterInfo = perpetualPool.parameters \n    const symbolIds = perpetualPool.activeSymbolIds\n    //const symbolIndex = symbolIds.indexOf(symbolId)\n\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      // const symbol = symbols[symbolIndex].symbol\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\n      const [\n        liquidity,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        margin,\n      ] = await Promise.all([\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n        //perpetualPool.getSymbol(symbolId),\n        perpetualPool.getLiquidity(),\n        perpetualPool.getLastUpdateBlock(),\n        getLatestBlockNumber(chainId),\n        //pToken.getPosition(accountAddress, symbolId),\n        pToken.getMargin(accountAddress),\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\n      ]);\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n      const {\n        minInitialMarginRatio,\n        minMaintenanceMarginRatio,\n      } = parameterInfo;\n\n      const symbolList = symbols.map((s) => s.symbol);\n\n      const symbolPrices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\n      //   const address = isOffchain ? '' : symbols[i].oracleAddress\n      //   const _symbol = symbolList[i]\n      //   promises.push(\n      //     getOraclePriceFromCache2.get(chainId, _symbol, address)\n      //   );\n      // }\n      // const symbolPrices = await Promise.all(promises);\n\n      const marginHeld = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .times(minInitialMarginRatio)\n            .abs()\n        );\n      }, bg(0));\n\n      const totalCost = positions.reduce((accum, p) => {\n        return accum.plus(bg(p.cost));\n      }, bg(0));\n\n      return positions.map((p, index) => {\n      const symbolId = symbolList[index]\n      const symbol = symbols[index]\n      const price = symbolPrices[index]\n\n      const { volume, cost, lastCumulativeFundingRate } = p\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        tradersNetVolume,\n        cumulativeFundingRate,\n      } = symbol;\n      priceCache.set(poolAddress, symbolId, price);\n\n      const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\n\n      const dynamicCost = symbols.reduce((accum, s, idx) => {\n        if (idx !== index) {\n          return accum.plus(\n            bg(positions[idx].volume)\n              .times(symbolPrices[idx])\n              .times(s.multiplier)\n          );\n        } else {\n          return accum;\n        }\n      }, bg(0));\n      const fundingFee = calculateFundingFee(\n        tradersNetVolume,\n        price,\n        multiplier,\n        fundingRateCoefficient,\n        liquidity,\n        cumulativeFundingRate,\n        lastCumulativeFundingRate,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        volume\n      );\n      const marginHeldBySymbol = bg(volume)\n        .abs()\n        .times(multiplier)\n        .times(price)\n        .times(minInitialMarginRatio);\n\n        return {\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          price,\n          volume: bg(volume).times(symbols[index].multiplier).toString(),\n          averageEntryPrice: calculateEntryPrice(\n            volume,\n            cost,\n            multiplier\n          ).toString(),\n          margin: margin.toString(),\n          marginHeld: marginHeld.toString(),\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\n          unrealizedPnl: unrealizedPnl.toString(),\n          //unrealizedPnlList,\n          fundingFee: fundingFee.toString(),\n          liquidationPrice: calculateLiquidationPrice(\n            volume,\n            margin,\n            totalCost,\n            dynamicCost,\n            multiplier,\n            minMaintenanceMarginRatio\n          ).toString(),\n        };\n      }).filter((p) => p.volume !== '0')\n  }, args, 'getPositionInfos', [])\n}\n\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  }, args, 'getWalletBalance', '')\n}\n\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, 'isUnlocked', '')\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  await perpetualPool.init()\n  const parameterInfo = perpetualPool.parameters\n  const symbolIds = perpetualPool.activeSymbolIds\n  const symbolIndex = symbolIds.indexOf(symbolId)\n\n  let promises = [];\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises);\n\n  if (symbolIndex > -1) {\n    const symbolInfo = symbols[symbolIndex];\n    // const symbol = symbols[symbolIndex].symbol;\n    // const isOffchainOracleSymbol =\n    //   perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\n    // const oracleAddress = isOffchainOracleSymbol\n    //   ? ''\n    //   : symbols[symbolIndex].oracleAddress;\n    const [liquidity, prices] = await Promise.all([\n      perpetualPool.getLiquidity(),\n      getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      ),\n    ]);\n    const price = prices[symbolIndex]\n    priceCache.set(poolAddress, symbolId, price);\n    const {\n      multiplier,\n      fundingRateCoefficient,\n      tradersNetVolume,\n      feeRatio,\n    } = symbolInfo;\n    const { minPoolMarginRatio } = parameterInfo;\n    const fundingRateArgs = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient,\n    ];\n    const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs);\n    const fundingRate = processFundingRate(chainId, fundingRatePerBlock);\n\n    const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n      return accum.plus(\n        bg(a.tradersNetVolume)\n          .times(a.price)\n          .times(a.multiplier)\n          .times(minPoolMarginRatio)\n          .abs()\n      );\n    }, bg(0));\n\n    const res = {\n      price,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      tradersNetVolume: tradersNetVolume.toString(),\n      liquidity: liquidity.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      fundingRatePerBlock: fundingRatePerBlock,\n      fundingRate: fundingRate,\n      liquidityUsed: liquidityUsedInAmount.div(liquidity),\n    };\n    fundingRateCache.set(chainId, poolAddress, symbolId, res);\n    return res;\n  } else {\n    throw new Error(`-- getFundingRate: invalide symbolId(${symbolId})`);\n  }\n}\n\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\n  const args = [chainId, poolAddress, volume, symbolId]\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n\n    const symbolIds = perpetualPool.activeSymbolIds\n    const symbolIndex = perpetualPool.activeSymbolIds.indexOf(symbolId)\n\n    let promises = [];\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\n    }\n    const symbols = await Promise.all(promises);\n    //const symbol = symbols[symbolIndex]\n    let price = priceCache.get(poolAddress, symbolId)\n    //console.log('symbol',symbol)\n\n    if (!price) {\n      // const symbolName = symbol.symbol;\n      // const isOffchainOracleSymbol =\n      //   perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbol.oracleAddress;\n      const prices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n      price = prices[symbolIndex]\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  }, args, 'getFundingFee', '')\n}\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\n    //const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const symbolIds = perpetualPool.activeSymbolIds\n    const symbolIndex = symbolIds.indexOf(symbolId)\n    let promises = [];\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\n    }\n    const symbols = await Promise.all(promises);\n    if (symbolIndex > -1) {\n      // const symbol = symbols[symbolIndex].symbol\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n      //const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\n\n      const prices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n      const price = prices[symbolIndex]\n      priceCache.set(poolAddress, symbolId, price)\n      const { multiplier } = symbols[symbolIndex]\n      return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n    } else {\n      throw new Error(`-- getEstimatedMargin: invalid symbolId(${symbolId})`)\n    }\n\n  }, args, 'getEstimatedMargin', '')\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume, multiplier} = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString()\n    }\n  }, args, 'getFundingRate', {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  })\n}\n\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const args = [\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n        res.price,\n        res.multiplier,\n        res.liquidity,\n        res.fundingRateCoefficient,\n      ];\n      let fundingRate1 = calculateFundingRate(...args);\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\n      return {\n        fundingRate1: fundingRate1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    ''\n  );\n}\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async () => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        symbolId,\n        'v2_lite'\n      );\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const symbolIds = await pToken.getActiveSymbolIds();\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(s.tradersNetVolume.plus(newNetVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\n          );\n        }\n      }, bg(0));\n      const liquidityUsed1 = liquidityUsed0\n        .times(res.minPoolMarginRatio)\n        .div(res.liquidity);\n      return {\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    ''\n  );\n}\n","import { catchTxApiError, bg } from '../../shared/utils';\nimport { isOrderValid } from '../../v2/calculation';\nimport { perpetualPoolLiteFactory } from '../factory.js';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    // const { bToken: bTokenAddress } = getPoolConfig(\n    //   poolAddress,\n    //   '0',\n    //   null,\n    //   'v2_lite'\n    // );\n    // const bToken = bTokenFactory(chainId, bTokenAddress);\n    return await perpetualPool.bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n      await perpetualPool.init()\n      return await perpetualPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      return await perpetualPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'v2_lite'\n      // );\n      // const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      // const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = perpetualPool.pToken\n      const parameterInfo = perpetualPool.parameters\n      // const symbols = perpetualPool.symbols\n      const symbolIds = perpetualPool.activeSymbolIds\n      const [liquidity, margin] = await Promise.all([\n        //perpetualPool.getParameters(),\n        perpetualPool.getLiquidity(),\n        pToken.getMargin(accountAddress),\n        //pToken.getActiveSymbolIds(),\n      ]);\n      const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      let promises = [];\n\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      let marginHeld = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(positions[index].volume.plus(newVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n          );\n        }\n      }, bg(0));\n      marginHeld = marginHeld.times(minInitialMarginRatio);\n\n      let liquidityUsed = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newVolume)\n              .times(s.price)\n              .times(s.multiplier)\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n          );\n        }\n      }, bg(0));\n      liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      const orderValidation = isOrderValid(\n        margin,\n        marginHeld,\n        liquidity,\n        liquidityUsed\n      );\n      if (orderValidation.success) {\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error(orderValidation.error);\n      }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'v2_lite'\n      // );\n\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      //const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const pToken = perpetualPool.pToken\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!volume.eq(0)) {\n        const newVolume = volume.negated();\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import { bg, deriToNatural, getBlockInfo, getPastEvents, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getPoolConfig,\n  getPoolConfig2,\n} from '../../shared/config';\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory';\nimport { calculateTxFee } from '../../v2/calculation/position';\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  bTokenSymbol,\n  symbols,\n  symbolIds,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const index = symbolIds.findIndex((s) => s === symbolId)\n  const symbol = symbols[index]\n  const transactionFee = calculateTxFee(\n    tradeVolume,\n    price,\n    symbol.multiplier,\n    symbol.feeRatio,\n  );\n  const notional = tradeVolume.abs().times(price).times(symbol.multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    symbolId,\n    symbol: symbol && symbol.symbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    //volume: volume.toString(),\n    volume: bg(volume).times(symbol.multiplier).toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n  const { pTokenAddress } = await perpetualPool.getAddresses()\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  //const symbolIdList = getPoolSymbolIdList(poolAddress)\n  const symbolIdList = await pToken.getActiveSymbolIds()\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      bTokenSymbol,\n      symbols,\n      symbolIdList,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const symbolIds = perpetualPool.activeSymbolIds\n    //const symbolIndex = symbolIds.indexOf(symbolId)\n\n    let promises= []\n    for (let i=0; i<symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\n    }\n    let symbols = await Promise.all(promises)\n\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\n        .map((i) => {\n          if (i.direction !== 'LIQUIDATION') {\n            const index = symbolIds.indexOf(i.symbolId);\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              //volume: deriToNatural(i.volume).toString(),\n              volume: deriToNatural(i.volume)\n                .times(symbols[index].multiplier)\n                .toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            if (i.volume !== '' && i.volume.indexOf(',') > -1 && !i.price.startsWith('NaN')) {\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\n                if (v !== '0') {\n                  return acc.concat([index]);\n                } else {\n                  return acc\n                }\n              }, []);\n              const prices = i.price.split(',').map((s)=> deriToNatural(s))\n              const volumes = i.volume.split(',').map((v)=> deriToNatural(v))\n              return ids.map((id) => {\n                return {\n                  direction: i.direction.trim(),\n                  baseToken: i.baseToken.trim(),\n                  symbolId: id.toString(),\n                  symbol: symbols[id].symbol,\n                  volume: volumes[id].abs().times(symbols[id].multiplier).toString(),\n                  price: prices[id].toString(),\n                  notional: volumes[id].abs().times(prices[id]).times(symbols[id].multiplier).toString(),\n                  transactionFee: '0',\n                  transactionHash: i.transactionHash,\n                  time: i.time.toString(),\n                };\n              })\n            } else {\n              // handle missing price data\n              return {\n                direction: i.direction.trim(),\n                baseToken: i.baseToken.trim(),\n                symbolId: '',\n                symbol: '',\n                price: '',\n                notional: '',\n                //volume: deriToNatural(i.volume).toString(),\n                volume: '',\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              }\n            }\n          }\n        }).flat();\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","const invalidValues = [NaN, null, undefined];\n\nfunction getEverlastingTimePriceAndDelta(S, K, V, T) {\n  let u = Math.sqrt(8 / V / V / T + 1);\n  let timeValue, delta;\n  if (S > K) {\n    timeValue = (K * Math.pow(S / K, (1 - u) / 2)) / u;\n    delta = ((1 - u) * timeValue) / S / 2;\n  } else if (S === K) {\n    timeValue = K / u;\n    delta = 0;\n  } else {\n    timeValue = (K * Math.pow(S / K, (1 + u) / 2)) / u;\n    delta = ((1 + u) * timeValue) / S / 2;\n  }\n  return [timeValue, delta];\n}\n\nfunction getDynamicInitialMarginRatio(\n  spot,\n  strike,\n  isCall,\n  initialMarginRatio,\n  minInitialMarginRatio\n) {\n  if ((isCall && spot >= strike) || (!isCall && strike >= spot)) {\n    return initialMarginRatio;\n  } else {\n    let otmRatio = (isCall ? strike - spot : spot - strike) / strike;\n    return Math.max(\n      (1 - otmRatio * 3) * initialMarginRatio,\n      minInitialMarginRatio\n    );\n  }\n}\n\n// multiple position for same underlier, e.x. BTCUSD\nfunction canLiquidateWithPrice(\n  pool,\n  trader,\n  symbols,\n  positions,\n  newUnderlierPrice\n) {\n  let newDynamicMargin = trader.dynamicMargin;\n  let newInitialMargin = trader.initialMargin;\n\n  for (let i = 0; i < symbols.length; i++) {\n    let symbol = symbols[i];\n    let position = positions[i];\n    if (position.volume === 0) {\n      continue;\n    }\n\n    let newIntrinsicValue = symbol.isCall\n      ? Math.max(newUnderlierPrice - symbol.strikePrice, 0)\n      : Math.max(symbol.strikePrice - newUnderlierPrice, 0);\n    let [newTimeValue, newDelta] = getEverlastingTimePriceAndDelta(\n      newUnderlierPrice,\n      symbol.strikePrice,\n      symbol.volatility,\n      pool.fundingPeriod\n    );\n    if (newIntrinsicValue > 0) {\n      newDelta += symbol.isCall ? 1 : -1;\n    }\n    let newPnl =\n      position.volume * (newIntrinsicValue + newTimeValue) * symbol.multiplier -\n      position.cost;\n    let newDynamicMarginRatio = getDynamicInitialMarginRatio(\n      newUnderlierPrice,\n      symbol.strikePrice,\n      symbol.isCall,\n      pool.initialMarginRatio,\n      0.01\n    );\n\n    newDynamicMargin = newDynamicMargin - position.pnl + newPnl;\n    newInitialMargin =\n      newInitialMargin -\n      Math.abs(\n        position.volume *\n          symbol.spotPrice *\n          symbol.multiplier *\n          symbol.dynamicMarginRatio\n      ) +\n      Math.abs(\n        position.volume *\n          newUnderlierPrice *\n          symbol.multiplier *\n          newDynamicMarginRatio\n      );\n  }\n\n  let newMaintenanceMargin =\n    (newInitialMargin * pool.maintenanceMarginRatio) / pool.initialMarginRatio;\n\n  if (\n    invalidValues.includes(newMaintenanceMargin) ||\n    invalidValues.includes(newDynamicMargin)\n  ) {\n    throw new Error(\n      `-- canLiquidateWithPrice: Invalid Margin value: ${newMaintenanceMargin} ${newDynamicMargin}`\n    );\n  }\n  return newMaintenanceMargin > newDynamicMargin;\n}\n\nexport function findLiquidationPrice(pool, trader, symbols, positions) {\n  if (symbols.length != positions.length) {\n    throw new Error(\n      'canLiquidateWithPrice: symbols and positions length not match'\n    );\n  }\n  if (symbols.length === 0) {\n    return {\n      numPositions: positions.length,\n      price1: null,\n      price2: null,\n    };\n  }\n  let head = symbols[0].symbol.slice(0, 6);\n  for (let i = 0; i < symbols.length; i++) {\n    if (!symbols[i].symbol.startsWith(head)) {\n      throw new Error('canLiquidateWithPrice: symbols not in same underlier');\n    }\n  }\n\n  if (trader.maintenanceMargin > trader.dynamicMargin) {\n    return {\n      numPositions: positions.length,\n      price1: symbols[0].spotPrice,\n      price2: symbols[0].spotPrice,\n    };\n  }\n\n  let final1, final2;\n  let price1, price2;\n  let l1, l2;\n\n  price1 = symbols[0].spotPrice / 10;\n  price2 = symbols[0].spotPrice;\n  l1 = canLiquidateWithPrice(pool, trader, symbols, positions, price1);\n  l2 = false;\n  while (true) {\n    if (l1 && l2) {\n      final1 = (price1 + price2) / 2;\n      break;\n    }\n    if (!l1 && !l2) {\n      final1 = null;\n      break;\n    }\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\n      final1 = (price1 + price2) / 2;\n      break;\n    }\n    let price = (price1 + price2) / 2;\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\n    if (l === l1) price1 = price;\n    else price2 = price;\n  }\n\n  price1 = symbols[0].spotPrice;\n  price2 = symbols[0].spotPrice * 10;\n  l1 = false;\n  l2 = canLiquidateWithPrice(pool, trader, symbols, positions, price2);\n  while (true) {\n    if (l1 && l2) {\n      final2 = (price1 + price2) / 2;\n      break;\n    }\n    if (!l1 && !l2) {\n      final2 = null;\n      break;\n    }\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\n      final2 = (price1 + price2) / 2;\n      break;\n    }\n    let price = (price1 + price2) / 2;\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\n    if (l === l1) price1 = price;\n    else price2 = price;\n  }\n\n  return {\n    numPositions: positions.length,\n    price1: final1,\n    price2: final2,\n  };\n}\n","import { bg, max, normalizeOptionSymbol, toNumberForObject } from \"../../shared\"\nimport { findLiquidationPrice } from './findLiquidationPrice2';\n\nexport const dynamicInitialMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\n    return initialMarginRatio\n  } else {\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\n    return max((bg(1).minus(otmRatio.times(3))).times(initialMarginRatio), bg(0.01))\n  }\n}\n\nexport const dynamicInitialPoolMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\n  // for pool\n  const initialPoolMarginRatio = bg(initialMarginRatio).times(10)\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\n    return initialMarginRatio\n  } else {\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\n    return max((bg(1).minus(otmRatio.times(3))).times(initialPoolMarginRatio), bg(0.01).times(10))\n  }\n}\n\nexport const getDeltaFundingPerSecond = (symbol, delta, price, totalDynamicEquity, newNetVolume)  => {\n  return bg(totalDynamicEquity).eq(0)\n    ? bg(0)\n    : bg(delta)\n        .times(bg(symbol.tradersNetVolume).plus(newNetVolume))\n        .times(price)\n        .times(price)\n        .times(symbol.multiplier)\n        .times(symbol.multiplier)\n        .times(symbol.deltaFundingCoefficient)\n        .div(totalDynamicEquity);\n} \nexport const getpremiumFunding = (symbol, premiumFundingCoefficient, totalDynamicEquity)  => {\n  return bg(totalDynamicEquity).eq(0)\n    ? bg(0)\n    : bg(symbol.timeValue)\n        .times(symbol.multiplier)\n        .times(premiumFundingCoefficient)\n        .div(totalDynamicEquity);\n} \n\nexport const getIntrinsicPrice = (price, strikePrice, isCall) => {\n  return isCall\n    ? max(bg(price).minus(strikePrice), bg(0))\n    : max(bg(strikePrice).minus(price), bg(0));\n};\n\n\nexport const getMarginHeldBySymbol = (\n  volume,\n  price,\n  symbol,\n  initialMarginRatio\n) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(symbol.multiplier)\n    .times(\n      dynamicInitialMarginRatio(\n        price,\n        symbol.strikePrice,\n        symbol.isCall,\n        initialMarginRatio\n      )\n    );\n};\n\nexport const getAverageEntryPrice = (position, symbol) => {\n  return bg(position.volume).eq(0)\n    ? '0'\n    : bg(position.cost).div(position.volume).div(symbol.multiplier).toString();\n};\n\nexport const getLiquidationPrice = (state, symbolId)  => {\n  const { poolState, symbolState, traderState, positionState } = state;\n  const normalizedSymbol = normalizeOptionSymbol(symbolState[symbolId].symbol)\n  let res = findLiquidationPrice(\n    toNumberForObject(poolState, [\n      'initialMarginRatio',\n      'maintenanceMarginRatio',\n      'fundingPeriod',\n      'fundingCoefficient',\n      'marginMultiplier',\n      'liquidity',\n      'totalDynamicEquity',\n      'totalInitialMargin',\n    ]),\n    toNumberForObject(traderState, [\n      'margin',\n      'totalPnl',\n      'totalFundingAccrued',\n      'dynamicMargin',\n      'initialMargin',\n      'maintenanceMargin',\n    ]),\n    symbolState\n      .filter((s, index) => positionState[index].volume !== '0')\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\n      .map((s) =>\n        toNumberForObject(s, [\n          'multiplier',\n          'strikePrice',\n          'spotPrice',\n          'dpmmPrice',\n          'volatility',\n          'timePrice',\n          'dynamicMarginRatio',\n          'intrinsicValue',\n          'timeValue',\n          'delta',\n          'K',\n          'tradersNetVolume',\n          'tradersNetCost',\n          'cumulativeFundingRate',\n          'fundingPerSecond',\n        ])\n      ),\n    symbolState\n      .filter((s, index) => positionState[index].volume !== '0')\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\n      .map((s) =>\n        toNumberForObject(positionState[s.symbolId], [\n          'volume',\n          'cost',\n          'lastCumulativePremiumFundingRate',\n          'pnl',\n          'premiumFundingAccrued',\n        ])\n      )\n  );\n  res.underlier = normalizedSymbol\n  return res\n}\n\nexport const getLiquidationPrices = (state) => {\n  const { poolState, symbolState, traderState, positionState } = state;\n  const symbols = symbolState.filter((s, index) => positionState[index].volume !== '0').map((s) => s.symbol);\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n\n  const liquidationPrices = oracleSymbols.map((oSymbol) => {\n    let res = findLiquidationPrice(\n      toNumberForObject(poolState, [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'premiumFundingPeriod',\n        'premiumFundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      toNumberForObject(traderState, [\n        'margin',\n        'totalPnl',\n        'totalFundingAccrued',\n        'dynamicMargin',\n        'initialMargin',\n        'maintenanceMargin',\n      ]),\n      symbolState\n        .filter((s, index) => positionState[index].volume !== '0')\n        .filter((s) => s.symbol.startsWith(oSymbol))\n        .map((s) =>\n          toNumberForObject(s, [\n          'multiplier',\n          'strikePrice',\n          'spotPrice',\n          'dpmmPrice',\n          'underlierVolatility',\n          'timePrice',\n          'dynamicMarginRatio',\n          'intrinsicValue',\n          'timeValue',\n          'delta',\n          'K',\n          'tradersNetVolume',\n          'tradersNetCost',\n          'cumulativePremiumFundingRate',\n          'premiumFundingPerSecond',\n          ])\n        ),\n      symbolState\n        .filter((s, index) => positionState[index].volume !== '0')\n        .filter((s) => s.symbol.startsWith(oSymbol))\n        .map((s) =>\n          toNumberForObject(positionState[s.symbolId], [\n            'volume',\n            'cost',\n            'lastCumulativeDeltaFundingRate',\n            'lastCumulativePremiumFundingRate',\n            'pnl',\n            'deltaFundingAccrued',\n            'premiumFundingAccrued',\n          ])\n        )\n    );\n    return res;\n  });\n  return oracleSymbols.map((i, index) => { \n    liquidationPrices[index].underlier = i\n    return liquidationPrices[index]\n  })\n};","/* eslint-disable */\nexport const everlastingOptionAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"lp\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"lp\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"indexPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeFee\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"pTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const everlastingOptionViewerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"theoreticalPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetPosition\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" } ], \"name\": \"_calculateDpmmPrice\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"changePercent\", \"type\": \"int256\" } ], \"name\": \"_calculateOptionValueChange\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"change\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spot\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strike\", \"type\": \"int256\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" } ], \"name\": \"_getDynamicInitialMarginRatio\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"_getTraderPortfolio\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"_initState\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"str\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"start\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"end\", \"type\": \"uint256\" } ], \"name\": \"_slice\", \"outputs\": [ { \"internalType\": \"bytes\", \"name\": \"\", \"type\": \"bytes\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolFundingRates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolPrices\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderFunding\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderMargins\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getPoolStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getPriceOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getTraderStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getVolatilityOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const lTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const pTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate2\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"addSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getActiveSymbolIds\", \"outputs\": [ { \"internalType\": \"uint256[]\", \"name\": \"\", \"type\": \"uint256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getNumPositionHolders\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getTokenId\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"isActiveSymbolId\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const everlastingOptionOldAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n/* eslint-enable */","import { ContractBase, deleteIndexedKey, fromWeiForObject } from '../../shared';\nimport { everlastingOptionViewerAbi } from './abis';\n\nexport class EverlastingOptionViewer extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, everlastingOptionViewerAbi);\n  }\n\n  // query\n  async _getTraderPortfolio(state, account) {\n    const res = await this._call('_getTraderPortfolio', [state, account]);\n    return res;\n  }\n  async _initState(poolAddress, oraclePrices) {\n    const res = await this._call('_initState', [poolAddress, oraclePrices]);\n    return res;\n  }\n  async _updateSymbolPrices(state) {\n    const res = await this._call('_updateSymbolPrices', [state]);\n    return res;\n  }\n  async getPoolStates(poolAddress, oraclePrices, oracleVolatilities) {\n    const res = await this._call('getPoolStates', [poolAddress, oraclePrices, oracleVolatilities]);\n    const symbolState = res[2].reduce((acc, i) => {\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\n        'multiplier',\n        'strikePrice',\n        'spotPrice',\n        'dpmmPrice',\n        'dynamicMarginRatio',\n        'intrinsicValue',\n        'timeValue',\n        'delta',\n        'alpha',\n        'K',\n        'tradersNetVolume',\n        'tradersNetCost',\n        //'cumulativeDeltaFundingRate',\n        'cumulativeFundingRate',\n        //'deltaFundingPerSecond',\n        'fundingPerSecond',\n        'volatility',\n      ]);\n      return acc.concat([symbol])\n    }, [])\n    return {\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'fundingPeriod',\n        'fundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      symbolState,\n    };\n  }\n  async getTraderStates(poolAddress, account, oraclePrices, oracleVolatilities) {\n    const res = await this._call('getTraderStates', [\n      poolAddress,\n      account,\n      oraclePrices,\n      oracleVolatilities,\n    ]);\n    const symbolState = res[2].reduce((acc, i) => {\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\n        'multiplier',\n        'strikePrice',\n        'spotPrice',\n        'dpmmPrice',\n        'dynamicMarginRatio',\n        'intrinsicValue',\n        'timeValue',\n        'delta',\n        'alpha',\n        'K',\n        'tradersNetVolume',\n        'tradersNetCost',\n        'cumulativeFundingRate',\n        //'deltaFundingPerSecond',\n        'fundingPerSecond',\n        'volatility',\n      ]);\n      return acc.concat([symbol])\n    }, [])\n    const positionState = res[3].reduce((acc, i) => {\n      const position = fromWeiForObject(deleteIndexedKey(i), [\n        'volume',\n        'cost',\n        'pnl',\n        //'lastCumulativeDeltaFundingRate',\n        'lastCumulativeFundingRate',\n        //'deltaFundingAccrued',\n        'fundingAccrued',\n      ])\n      return acc.concat([position])\n    }, [])\n    return {\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'fundingPeriod',\n        'fundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      traderState: fromWeiForObject(deleteIndexedKey(res[1]), [\n        'margin',\n        'totalPnl',\n        'totalFundingAccrued',\n        'dynamicMargin',\n        'initialMargin',\n        'maintenanceMargin',\n      ]),\n      symbolState: symbolState,\n      positionState: positionState,\n    };\n  }\n  async getVolatilityOracles(poolAddress) {\n    const res = await this._call('getVolatilityOracles', [poolAddress]);\n    return res;\n  }\n  async getPriceOracles(poolAddress) {\n    const res = await this._call('getPriceOracles', [poolAddress]);\n    return res;\n  }\n\n  // tx\n}\n","import { ContractBase, fromWei } from '../../shared'\nimport { lTokenOptionAbi } from './abis.js'\n\nexport class LTokenOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenOptionAbi)\n  }\n\n  // query\n  // async allowance(owner, spender) {\n  //   const res = await this._call('allowance', [owner, spender])\n  //   return res\n  // }\n  async balanceOf(account) {\n    const res = await this._call('balanceOf', [account])\n    return fromWei(res)\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return res\n  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return res\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return res\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return fromWei(res)\n  }\n\n  // tx\n  // async approve(accountAddress, spender, amount) {\n  //   return await this._transact('approve', [spender, amount], accountAddress)\n  // }\n  // async transfer(accountAddress, to, amount) {\n  //   return await this._transact('transfer', [to, amount], accountAddress)\n  // }\n  // async transferFrom(accountAddress, from, to, amount) {\n  //   return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  // }\n\n}","import { ContractBase, fromWei } from '../../shared'\nimport { pTokenOptionAbi } from './abis.js'\n\nexport class PTokenOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenOptionAbi)\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return res\n  }\n  async exists(owner) {\n    const res = await this._call('exists', [owner])\n    return res\n  }\n  async getActiveSymbolIds() {\n    const res = await this._call('getActiveSymbolIds', [])\n    return res\n  }\n  async getApproved(tokenId) {\n    const res = await this._call('getApproved', [tokenId])\n    return res\n  }\n  async getMargin(owner) {\n    const res = await this._call('getMargin', [owner])\n    return fromWei(res)\n  }\n  async getNumPositionHolders(symbolId) {\n    const res = await this._call('getNumPositionHolders', [symbolId])\n    return res\n  }\n  async getPosition(owner, symbolId) {\n    const res = await this._call('getPosition', [owner, symbolId])\n    return {\n      volume: fromWei(res[0]),\n      cost: fromWei(res[1]),\n      lastCumulativePremiumFundingRate: fromWei(res[2]),\n    };\n }\n  async getTokenId(owner) {\n    const res = await this._call('getTokenId', [owner])\n    return res\n  }\n  async isActiveSymbolId(symbolId) {\n    const res = await this._call('isActiveSymbolId', [symbolId])\n    return res\n  }\n  async isApprovedForAll(owner, operator) {\n    const res = await this._call('isApprovedForAll', [owner, operator])\n    return res\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return res\n  }\n  async ownerOf(tokenId) {\n    const res = await this._call('ownerOf', [tokenId])\n    return res\n  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return res\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return res\n  }\n  async totalMinted() {\n    const res = await this._call('totalMinted', [])\n    return res\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return res\n  }\n\n  // tx\n  async addMargin(accountAddress, owner, delta) {\n    return await this._transact('addMargin', [owner, delta], accountAddress)\n  }\n  async updateMargin(accountAddress, owner, margin) {\n    return await this._transact('updateMargin', [owner, margin], accountAddress)\n  }\n  async updatePosition(accountAddress, owner, symbolId, position) {\n    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\n  }\n\n  // async approve(accountAddress, operator, tokenId) {\n  //   return await this._transact('approve', [operator, tokenId], accountAddress)\n  // }\n  // async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  // }\n  // async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  // }\n  // async setApprovalForAll(accountAddress, operator, approved) {\n  //   return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  // }\n  // async toggleCloseOnly(accountAddress, symbolId) {\n  //   return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\n  // }\n  // async transferFrom(accountAddress, from, to, tokenId) {\n  //   return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  // }\n}","import { factory } from '../../shared';\nimport { EverlastingOptionViewer } from '../contract/everlasting_option_viewer';\nimport { LTokenOption } from '../contract/l_token_option';\nimport { PTokenOption } from '../contract/p_token_option';\n\nexport const everlastingOptionViewerFactory = factory(EverlastingOptionViewer);\nexport const lTokenOptionFactory = factory(LTokenOption);\nexport const pTokenOptionFactory = factory(PTokenOption);","import { getOracleVolatilitiesForOption } from \"../shared/utils/oracle\"\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n\nexport const volatilitiesCache = (function() {\n  const cache = {}\n  const pending = {}\n  return {\n    async get(symbols=['BTCUSD']){\n      const key = symbols.join('_')\n      if (\n        !Object.keys(cache).includes(key) ||\n        Math.floor(Date.now() / 1000) - cache[key].timestamp > 30\n      ) {\n        const timestamp = Math.floor(Date.now() / 1000);\n        // pending is exit\n        if (Object.keys(pending).includes(key)) {\n          let retry = 10;\n          while (retry > 0) {\n            await delay(390);\n            if (!Object.keys(pending).includes(key)) {\n              //console.log('hit pending with cache');\n              return cache[key].data;\n            }\n          }\n          if (retry === 0) {\n            //console.log('hit pending expired');\n            const data = await getOracleVolatilitiesForOption(symbols);\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          }\n        } else {\n          pending[key] = true;\n          try {\n            //console.log('hit new');\n            const data = await getOracleVolatilitiesForOption(symbols);\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          } catch (err) {\n          } finally {\n            delete pending[key];\n          }\n        }\n      } else {\n        //console.log('hit cache');\n        return cache[key].data;\n      }\n    }\n  }\n})()\n\n// export const volatilityCache = (function() {\n//   const cache = {}\n//   return {\n//     async get(symbol){\n//       const key = symbol\n//       if (!Object.keys(cache).includes(key) || (Math.floor(Date.now()/1000) - cache[key].timestamp > 30)) {\n//         const timestamp = Math.floor(Date.now()/1000)\n//         const res = await getPriceInfo(symbol, 'option')\n//         const data = deriToNatural(res.volatility).toString()\n//         cache[key] = {\n//           data,\n//           timestamp,\n//         }\n//         //console.log('new key')\n//         return cache[key].data\n//       } else {\n//         return cache[key].data\n//       }\n//     }\n//   }\n// })()\n\n// export const volatilitiesCache2 = async (symbols) => {\n//   return await Promise.all(\n//     symbols.reduce((acc, s) => acc.concat(volatilityCache.get(s)), [])\n//   )\n// }\n","import {\n  ContractBase,\n  deleteIndexedKey,\n  fromWeiForObject,\n  fromWei,\n  naturalToDeri,\n  getPoolConfig,\n  getPoolViewerConfig,\n  isEqualSet,\n  getBlockInfo,\n  deriToNatural,\n  normalizeOptionSymbol,\n  bg,\n  MAX_INT256,\n} from '../../shared';\nimport { getVolatilitySymbols } from '../../shared/config/token';\nimport { getOracleVolatilitiesForOption } from '../../shared/utils/oracle';\nimport {\n  everlastingOptionViewerFactory,\n  pTokenOptionFactory,\n} from '../factory/tokens';\nimport { volatilitiesCache } from '../utils';\nimport { everlastingOptionAbi } from './abis.js';\n\nexport class EverlastingOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, everlastingOptionAbi);\n\n    this.config = getPoolConfig(\n      contractAddress,\n      undefined,\n      undefined,\n      'option'\n    );\n    // this.offchainSymbolIds = this.config.offchainSymbolIds;\n    // this.offchainSymbols = this.config.offchainSymbols;\n    this.volatilitySymbols = this.config.volatilitySymbols;\n    this.bTokenAddress = this.config.bToken;\n    this.lTokenAddress = this.config.lToken;\n    this.pTokenAddress = this.config.pToken;\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'option');\n  }\n  async _updateConfig() {\n    if (!this.pToken) {\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\n    }\n    if (!this.viewer) {\n      this.viewer = everlastingOptionViewerFactory(\n        this.chainId,\n        this.viewerAddress\n      );\n    }\n\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds();\n    if (\n      !this.activeSymbolIds ||\n      !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))\n    ) {\n      // symbol is updated\n      const activeSymbols = await Promise.all(\n        activeSymbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\n      );\n      const symbolVolatilities = (await volatilitiesCache.get(\n        activeSymbols.map((s) => s.symbol)\n      )).map((v) => v.volatility);\n      //console.log(symbolVolatilities)\n      const state = await this.viewer.getPoolStates(\n        this.contractAddress,\n        [],\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n\n      // update state\n      this.activeSymbolIds = activeSymbolIds;\n      this.activeSymbols = symbolState.filter((s) =>\n        this.activeSymbolIds.includes(s.symbolId)\n      );\n      this.activeSymbolNames = this.activeSymbols.map((s) => s.symbol)\n      // for tx use\n      this.volatilitySymbols = getVolatilitySymbols(\n        this.activeSymbols.map((s) => s.symbol)\n      );\n\n      this.symbols = await Promise.all(\n        this.activeSymbolIds.reduce(\n          (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n          []\n        )\n      );\n    }\n  }\n\n  // query\n  // async OptionPricer() {\n  //   const res = await this._call('OptionPricer', []);\n  //   return res;\n  // }\n  // async PmmPricer() {\n  //   const res = await this._call('PmmPricer', []);\n  //   return res;\n  // }\n  // async _T() {\n  //   const res = await this._call('_T', []);\n  //   return fromWei(res);\n  // }\n  async getAddresses() {\n    const res = await this._call('getAddresses', []);\n    return deleteIndexedKey(res);\n  }\n  async getLastTimestamp() {\n    const res = await this._call('getPoolStateValues', []);\n    return res[1];\n  }\n  async getLiquidity() {\n    const res = await this._call('getPoolStateValues', []);\n    return fromWei(res[0]);\n  }\n  async getParameters() {\n    const res = await this._call('getParameters', []);\n    return fromWeiForObject(deleteIndexedKey(res), [\n      'initialMarginRatio',\n      'liquidationCutRatio',\n      'maintenanceMarginRatio',\n      'maxLiquidationReward',\n      'minLiquidationReward',\n      'minPoolMarginRatio',\n      'protocolFeeCollectRatio',\n    ]);\n  }\n  // async getProtocolFeeAccrued() {\n  //   const res = await this._call('getPoolStateValues', []);\n  //   return fromWei(res[2])\n  // }\n\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId]);\n    return fromWeiForObject(deleteIndexedKey(res), [\n      'strikePrice',\n      'multiplier',\n      'feeRatioITM',\n      'feeRatioOTM',\n      'alpha',\n      'tradersNetVolume',\n      'tradersNetCost',\n      'cumulativeFundingRate',\n    ]);\n  }\n  async updateSymbols() {\n    if (!this.pToken) {\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\n    }\n    if (!this.activeSymbolIds) {\n      this.activeSymbolIds = await this.pToken.getActiveSymbolIds();\n    }\n    this.activeSymbols = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, i) => acc.concat([this.getSymbol(i)]),\n        []\n      )\n    );\n    return this.activeSymbols\n  }\n\n  // tx\n  async _getVolSymbolPrices() {\n    await this._updateConfig();\n    let volatilities = [];\n    let oracleSymbols = []\n    if (this.volatilitySymbols.length > 0) {\n      const volatilityInfos = await getOracleVolatilitiesForOption(\n        this.activeSymbols.map((s) => s.symbol)\n      );\n      volatilities = Object.values(volatilityInfos).reduce((acc, p, index) => {\n        const oracleSymbol = normalizeOptionSymbol(this.activeSymbolNames[index])\n        if (!oracleSymbols.includes(oracleSymbol)) {\n          oracleSymbols.push(oracleSymbol)\n          acc.push([\n            this.activeSymbolIds[index],\n            p.timestamp,\n            p.volatility,\n            parseInt(p.v).toString(),\n            p.r,\n            p.s,\n          ]);\n        }\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return volatilities;\n  }\n\n  async addLiquidity(accountAddress, bAmount) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(bAmount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, lShares) {\n    const prices = await this._getVolSymbolPrices();\n    let amount = naturalToDeri(lShares);\n    return await this._transact(\n      'removeLiquidity',\n      [amount, prices],\n      accountAddress\n    );\n  }\n  async addMargin(accountAddress, bAmount) {\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(bAmount)],\n      accountAddress\n    );\n  }\n  async removeMargin(accountAddress, bAmount) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(bAmount), prices],\n      accountAddress\n    );\n  }\n  async trade(accountAddress, symbolId, tradeVolume) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(tradeVolume), prices],\n      accountAddress\n    );\n  }\n\n  // trade history\n  async formatTradeEvent(event) {\n    const info = event.returnValues;\n    const tradeVolume = deriToNatural(info.tradeVolume).toString();\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\n    const symbolId = info.symbolId;\n    const indexPrice = deriToNatural(info.indexPrice).toString();\n    const index = this.activeSymbolIds.indexOf(symbolId);\n    if (index > -1) {\n      const symbol = this.symbols[index];\n      const tradeFee = info.tradeFee;\n\n      const direction =\n        tradeFee !== \"-1\"\n          ? bg(tradeVolume).gt(0)\n            ? \"LONG\"\n            : \"SHORT\"\n          : \"LIQUIDATION\";\n      const price = bg(info.tradeCost)\n        .div(info.tradeVolume)\n        .div(symbol.multiplier)\n        .toString();\n      const notional = bg(tradeVolume)\n        .abs()\n        .times(indexPrice)\n        .times(symbol.multiplier)\n        .toString();\n      const contractValue = bg(tradeVolume)\n        .abs()\n        .times(price)\n        .times(symbol.multiplier)\n        .toString();\n\n      const res = {\n        symbolId: info.symbolId,\n        symbol: symbol.symbol,\n        trader: info.trader,\n        direction,\n        volume: bg(tradeVolume).abs().toString(),\n        price,\n        indexPrice,\n        notional,\n        contractValue,\n        transactionFee:\n          tradeFee === \"-1\" ? \"0\" : deriToNatural(tradeFee).toString(),\n        transactionHash: event.transactionHash,\n        time: block.timestamp * 1000,\n        extra: {},\n      };\n      //console.log(JSON.stringify(res));\n      return res;\n    } else {\n      return null;\n    }\n  }\n}\n","import { ContractBase, fromWei } from '../../shared'\n\nexport const optionPricerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValue\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValueAndDelta\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" } ]\n\nexport class OptionPricer extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, optionPricerAbi)\n  }\n\n  async getEverlastingTimeValueAndDelta(S, K, V, T) {\n    const res = await this._call('getEverlastingTimeValueAndDelta', [S, K, V, T])\n    return {\n      timeValue: fromWei(res.timeValue),\n      delta: fromWei(res.delta),\n    };\n  }\n}","import { factory } from '../../shared';\nimport { EverlastingOption } from '../contract/everlasting_option';\nimport { OptionPricer } from '../contract/option_pricer';\n\nexport const everlastingOptionFactory = factory(EverlastingOption);\nexport const optionPricerFactory = factory(OptionPricer);","import { getPoolConfig } from '../../shared/config';\nimport { catchApiError, bg } from '../../shared/utils';\nimport {\n  calculateMaxRemovableShares,\n  calculateShareValue,\n} from '../../v1/calculation';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport {\n  lTokenOptionFactory,\n} from '../factory/tokens';\nimport { volatilitiesCache } from '../utils';\n\nconst _getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\n  const { lToken: lTokenAddress } = getPoolConfig(\n    poolAddress,\n    '0',\n    '0',\n    'option'\n  );\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  await optionPool._updateConfig()\n  const lToken = lTokenOptionFactory(chainId, lTokenAddress);\n  const [\n    lTokenBalance,\n    lTokenTotalSupply,\n  ] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n  ]);\n\n  const symbols = optionPool.activeSymbols\n  const symbolVolatilities = await volatilitiesCache.get(symbols.map((s) => s.symbol))\n  const state = await optionPool.viewer.getPoolStates(poolAddress, [], symbolVolatilities.map((v) => v.volatility))\n  const { poolState } = state;\n  const { initialMarginRatio, liquidity, totalDynamicEquity } = poolState;\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0));\n  const value = symbols.reduce(\n    (acc, s) =>\n      acc.plus(bg(s.tradersNetVolume).times(s.strikePrice).times(s.multiplier)),\n    bg(0)\n  );\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      totalDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      bg(initialMarginRatio).times(10)\n    ).toString(),\n  };\n};\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n};\n","/*\n    1. Calculate the cost for user input volume\n    2. Calculate the final price if user input volume is traded\n*/\n\nexport function getMidPrice(tradersNetVolume, theoreticalPrice, K) {\n    return theoreticalPrice * (1 + K * tradersNetVolume)\n}\n\nexport function queryTradePMM(tradersNetVolume, theoreticalPrice, K, volume) {\n    return theoreticalPrice * (volume + ((tradersNetVolume + volume) ** 2 - tradersNetVolume ** 2) * K / 2)\n}\n","import {\n  bg,\n  max,\n  bTokenFactory,\n  catchApiError,\n  getPoolConfig,\n  fromWei,\n} from '../../shared';\nimport { fundingRateCache } from '../../shared/api/api_globals';\nimport { wrappedOracleFactory } from '../../shared/factory/oracle';\nimport { queryTradePMM } from '../calculation/PMM2';\nimport {\n  dynamicInitialMarginRatio,\n  dynamicInitialPoolMarginRatio,\n  getAverageEntryPrice,\n  //getDeltaFundingPerSecond,\n  getLiquidationPrice,\n  getLiquidationPrices,\n  getMarginHeldBySymbol,\n} from '../calculation/trade';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport { volatilitiesCache } from '../utils';\nimport { getIndexInfo } from '../../shared/config/token';\n\n//\nconst SECONDS_IN_A_DAY = 86400;\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'option');\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      const [symbolInfo2, poolInfo2] = await Promise.all([\n        optionPool.getSymbol(symbolId),\n        optionPool.getParameters(),\n      ]);\n\n      const symbols = optionPool.activeSymbols\n      const symbolVolatilities = await volatilitiesCache.get(\n        symbols.map((s) => s.symbol)\n      );\n      const state = await optionPool.viewer.getPoolStates(\n        poolAddress,\n        [],\n        symbolVolatilities.map((v) => v.volatility)\n      );\n      const { symbolState } = state;\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\n      const symbolInfo = symbolState[symbolIndex];\n      const { dynamicMarginRatio, isCall } =\n        symbolInfo;\n      const { symbol, multiplier, feeRatioOTM, feeRatioITM } = symbolInfo2;\n      const {\n        initialMarginRatio,\n        maintenanceMarginRatio,\n        minLiquidationReward,\n        maxLiquidationReward,\n        liquidationCutRatio,\n        protocolFeeCollectRatio,\n      } = poolInfo2;\n\n      return {\n        symbol,\n        bTokenSymbol,\n        multiplier: multiplier.toString(),\n        feeRatioOTM: feeRatioOTM.toString(),\n        feeRatioITM: feeRatioITM.toString(),\n        //minPoolMarginRatio: minPoolMarginRatio.toString(),\n        initialMarginRatioOrigin: initialMarginRatio.toString(),\n        initialMarginRatio: dynamicMarginRatio.toString(),\n        maintenanceMarginRatioOrigin: maintenanceMarginRatio.toString(),\n        maintenanceMarginRatio: bg(dynamicMarginRatio)\n          .times(maintenanceMarginRatio)\n          .div(initialMarginRatio)\n          .toString(),\n        minLiquidationReward: minLiquidationReward.toString(),\n        maxLiquidationReward: maxLiquidationReward.toString(),\n        liquidationCutRatio: liquidationCutRatio.toString(),\n        protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n        isCall: isCall,\n        indexConstituents: getIndexInfo(symbol),\n      };\n    },\n    args,\n    'getSpecification',\n    {\n      symbol: '',\n      bTokenSymbol: '',\n      multiplier: '',\n      feeRatio: '',\n      //minPoolMarginRatio: '',\n      initialMarginRatio: '',\n      maintenanceMarginRatio: '',\n      minLiquidationReward: '',\n      maxLiquidationReward: '',\n      liquidationCutRatio: '',\n      protocolFeeCollectRatio: '',\n      indexConstituents: { url: '', tokens: [] },\n    }\n  );\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      const { symbol: symbolName} = getPoolConfig(\n        poolAddress,\n        undefined,\n        symbolId,\n        'option'\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n      const symbols = optionPool.activeSymbols\n      let symbolVolatilities = []\n      if (symbols && symbols.length > 0) {\n        [symbolVolatilities] = await Promise.all([\n          volatilitiesCache.get(\n            symbols.map((s) => s.symbol)\n          ),\n          //volatilityCache.get(`VOL-${normalizeOptionSymbol(symbolName)}`),\n        ]);\n      }\n      const state = await optionPool.viewer.getTraderStates(\n        poolAddress,\n        accountAddress,\n        [],\n        symbolVolatilities.map((v) => v.volatility)\n      );\n      const { poolState, symbolState, traderState, positionState } = state;\n      const { initialMarginRatio } = poolState;\n      const { margin, totalPnl, initialMargin } = traderState;\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\n      const volPrice = fromWei(symbolVolatilities[symbolIndex].volatility)\n      const symbol = symbolState[symbolIndex];\n      const position = positionState[symbolIndex];\n      const price = await wrappedOracleFactory(\n        chainId,\n        symbol.oracleAddress\n      ).getPrice();\n      return {\n        symbolId,\n        symbol: symbolName,\n        price,\n        strikePrice: symbol.strikePrice.toString(),\n        timePrice: symbol.timeValue.toString(),\n        markPrice: symbol.dpmmPrice.toString(),\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\n        averageEntryPrice: getAverageEntryPrice(position, symbol),\n        margin: margin.toString(),\n        marginHeld: initialMargin.toString(),\n        marginHeldBySymbol: getMarginHeldBySymbol(\n          position.volume,\n          price,\n          symbol,\n          initialMarginRatio\n        ).toString(),\n        unrealizedPnl: totalPnl,\n        unrealizedPnlList: symbolState\n          .filter((s, index) => positionState[index].pnl !== '0')\n          .map((s) => [s.symbol, positionState[symbolState.findIndex((oS) => oS.symbolId === s.symbolId)].pnl]),\n        premiumFundingAccrued: positionState[symbolIndex].fundingAccrued,\n        isCall: symbol.isCall,\n        volatility: bg(volPrice).times(100).toString(),\n        liquidationPrice: getLiquidationPrice(state, symbolId),\n      };\n    },\n    args,\n    'getPositionInfo',\n    {}\n  );\n};\n\nexport const getPositionInfos = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n      const symbols = optionPool.activeSymbols\n      let [symbolVolatilities] = await Promise.all([\n        volatilitiesCache.get(\n          symbols.map((s) => s.symbol)\n        ),\n        //volatilitiesCache.(symbols.map((s) => s.symbol)),\n      ]);\n      let volPrices = symbolVolatilities.map((v) => fromWei(v.volatility))\n      symbolVolatilities = symbolVolatilities.map((v) => v.volatility)\n      const state = await optionPool.viewer.getTraderStates(\n        poolAddress,\n        accountAddress,\n        [],\n        symbolVolatilities\n      );\n      const { poolState, traderState, positionState, symbolState } = state;\n      const { initialMarginRatio } = poolState;\n      const { margin, initialMargin } = traderState;\n      const prices = await Promise.all(\n        symbols.reduce(\n          (acc, s) =>\n            acc.concat([\n              wrappedOracleFactory(chainId, s.oracleAddress).getPrice(),\n            ]),\n          []\n        )\n      );\n\n      const liquidationPrices = getLiquidationPrices(state);\n      return symbols\n        .filter((s) => positionState[s.symbolId].volume !== '0')\n        .map((s) => {\n          const vIndex = symbolState.findIndex(\n            (oS) => oS.symbolId === s.symbolId\n          );\n          return {\n            symbolId: s.symbolId,\n            symbol: s.symbol,\n            price: prices[vIndex],\n            // strikePrice: s.strikePrice.toString(),\n            // timePrice: s.timeValue.toString(),\n            volume: bg(positionState[vIndex].volume)\n              .times(symbolState[vIndex].multiplier)\n              .toString(),\n            averageEntryPrice: getAverageEntryPrice(positionState[vIndex], s),\n            margin: margin.toString(),\n            marginHeld: initialMargin.toString(),\n            marginHeldBySymbol: getMarginHeldBySymbol(\n              positionState[vIndex].volume,\n              prices[vIndex],\n              s,\n              initialMarginRatio\n            ).toString(),\n            unrealizedPnl: positionState[vIndex].pnl,\n            premiumFundingAccrued: positionState[vIndex].fundingAccrued,\n            isCall: s.isCall,\n            volatility: bg(volPrices[vIndex]).times(100).toString(),\n            liquidationPrice: liquidationPrices,\n          };\n        });\n    },\n    args,\n    'getPositionInfos',\n    []\n  );\n};\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const { bToken: bTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(\n        accountAddress\n      );\n      return balance.toString();\n    },\n    args,\n    'getWalletBalance',\n    ''\n  );\n};\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const { bToken: bTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const bToken = bTokenFactory(chainId, bTokenAddress);\n      return await bToken.isUnlocked(accountAddress, poolAddress);\n    },\n    args,\n    'isUnlocked',\n    ''\n  );\n};\n\nconst _getFundingRate = async (chainId, poolAddress, symbolId) => {\n  //const { symbol } = getPoolConfig(poolAddress, undefined, symbolId, 'option')\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  await optionPool._updateConfig();\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\n  //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n  const symbols = optionPool.activeSymbols;\n  const symbolVolatilities = (\n    await volatilitiesCache.get(symbols.map((s) => s.symbol))\n  ).map((v) => v.volatility);\n  const state = await optionPool.viewer.getPoolStates(\n    poolAddress,\n    [],\n    symbolVolatilities\n  );\n  const { poolState, symbolState } = state;\n  const { initialMarginRatio, totalDynamicEquity, liquidity } = poolState;\n  const curSymbolIndex = optionPool.activeSymbolIds.indexOf(symbolId);\n  if (curSymbolIndex < 0) {\n    throw new Error(\n      `getFundingRate(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n    );\n  }\n  const symbolInfo = symbolState[curSymbolIndex];\n\n  const prices = await Promise.all(\n    symbolState.reduce(\n      (acc, s) =>\n        acc.concat([wrappedOracleFactory(chainId, s.oracleAddress).getPrice()]),\n      []\n    )\n  );\n\n  const liquidityUsedInAmount = symbolState.reduce((acc, s, index) => {\n    return acc.plus(\n      bg(s.tradersNetVolume)\n        .times(prices[index])\n        .times(s.multiplier)\n        .abs()\n        .times(\n          dynamicInitialPoolMarginRatio(\n            prices[index],\n            s.strikePrice,\n            s.isCall,\n            initialMarginRatio\n          )\n        )\n    );\n  }, bg(0));\n\n  const res = {\n    initialMarginRatio,\n    symbolIds: optionPool.activeSymbolIds,\n    symbols: symbolState,\n    liquidity,\n    totalDynamicEquity,\n    prices,\n    liquidityUsed: bg(liquidity).eq(0) ? bg(0) : liquidityUsedInAmount.div(liquidity),\n    premiumFunding: bg(symbolInfo.fundingPerSecond)\n      .div(symbolInfo.multiplier)\n      .times(SECONDS_IN_A_DAY)\n      .toString(),\n    premiumFundingPerSecond: bg(symbolInfo.fundingPerSecond).div(\n      symbolInfo.multiplier\n    ),\n  };\n  return res;\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, volume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, volume, symbolId) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      const symbolInfo = await optionPool.getSymbol(symbolId);\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { symbolIds, prices, symbols } = res;\n      const curSymbolIndex = symbolIds.indexOf(symbolId);\n      if (curSymbolIndex < 0) {\n        throw new Error(\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n        );\n      }\n      const symbol = symbols[curSymbolIndex];\n      //console.log(ivolume, prices[curSymbolIndex], symbol, intrinsicPrice.toString())\n      let fee\n      const intrinsicValue = symbol.isCall\n        ? max(bg(symbol.spotPrice).minus(symbol.strikePrice), bg(0))\n        : max(bg(symbol.strikePrice).minus(symbol.spotPrice), bg(0));\n      if (bg(intrinsicValue).gt(0)) {\n        fee = bg(volume)\n          .abs()\n          .times(symbol.multiplier)\n          .times(symbol.spotPrice)\n          .times(symbolInfo.feeRatioITM)\n          .toString();\n      } else {\n        fee = bg(volume)\n          .abs()\n          .times(symbol.multiplier)\n          .times(symbol.timeValue)\n          .times(symbolInfo.feeRatioOTM)\n          .toString();\n      }\n      return fee\n    },\n    args,\n    'getFundingFee',\n    ''\n  );\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\n  const [parameterInfo, symbol] = await Promise.all([\n    optionPool.getParameters(),\n    optionPool.getSymbol(symbolId),\n  ]);\n  const price = await wrappedOracleFactory(\n    chainId,\n    symbol.oracleAddress\n  ).getPrice();\n  const { initialMarginRatio } = parameterInfo;\n  const marginRatio = dynamicInitialMarginRatio(\n    price,\n    symbol.strikePrice,\n    symbol.isCall,\n    initialMarginRatio\n  );\n  //console.log(marginRatio, symbol.multiplier, price, volume)\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(symbol.multiplier)\n    .times(marginRatio);\n};\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId);\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      const res = await _getFundingRate(chainId, poolAddress, symbolId);\n      fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      const curSymbolIndex = res.symbolIds.indexOf(symbolId);\n      if (curSymbolIndex < 0) {\n        throw new Error(\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n        );\n      }\n      return {\n        premiumFunding0: bg(res.premiumFunding).toString(),\n        premiumFundingPerSecond: res.premiumFundingPerSecond.toString(),\n        liquidity: res.liquidity.toString(),\n        volume: '-',\n        tradersNetVolume: res.symbols[curSymbolIndex].tradersNetVolume,\n      };\n    },\n    args,\n    'getFundingRate',\n    {\n      premiumFunding0: '',\n      premiumFundingPerSecond: '',\n      liquidity: '',\n      volume: '-',\n      tradersNetVolume: '',\n    }\n  );\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async () => {\n      // let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      // if (!res) {\n      //   res = await _getFundingRate(chainId, poolAddress, symbolId);\n      //   fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      // }\n      // const { symbolIds, symbols, prices, totalDynamicEquity } = res;\n      // const curSymbolIndex = symbolIds.indexOf(symbolId);\n      // if (curSymbolIndex < 0) {\n      //   throw new Error(\n      //     `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n      //   );\n      // }\n      // let symbol = symbols[curSymbolIndex];\n      // //console.log('symbol.tradersNetVolume0', symbol.tradersNetVolume)\n      // //symbol.tradersNetVolume = bg(symbol.tradersNetVolume).plus(newNetVolume).toString()\n      // //console.log('symbol.tradersNetVolume1', symbol.tradersNetVolume)\n      // const deltaFunding1 = getdeltaFundingPerSecond(\n      //   symbol,\n      //   symbol.delta,\n      //   prices[curSymbolIndex],\n      //   totalDynamicEquity,\n      //   newNetVolume\n      // );\n\n      return {\n        // deltaFunding1: bg(deltaFunding1)\n        //   .div(symbol.multiplier)\n        //   .times(SECONDS_IN_A_DAY)\n        //   .toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    {\n    }\n  );\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    {\n      liquidityUsed0: '',\n    }\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      }\n      const { symbolIds, symbols, prices, liquidity, initialMarginRatio } = res;\n\n      const liquidityUsedInAmount = symbols.reduce((acc, s, index) => {\n        if (symbolIds[index] == symbolId) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newNetVolume)\n              .times(prices[index])\n              .times(s.multiplier)\n              .abs()\n              .times(\n                dynamicInitialPoolMarginRatio(\n                  prices[index],\n                  s.strikePrice,\n                  s.isCall,\n                  initialMarginRatio\n                )\n              )\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .times(prices[index])\n              .times(s.multiplier)\n              .abs()\n              .times(\n                dynamicInitialPoolMarginRatio(\n                  prices[index],\n                  s.strikePrice,\n                  s.isCall,\n                  initialMarginRatio\n                )\n              )\n          );\n        }\n      }, bg(0));\n      return {\n        liquidityUsed1: bg(liquidity).eq(0) ? '0' : liquidityUsedInAmount\n          .div(liquidity)\n          .times(100)\n          .toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    {\n      liquidityUsed1: '',\n    }\n  );\n};\n\nexport const getEstimatedTimePrice = (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      const symbolVolatilities = (await volatilitiesCache.get(\n        optionPool.activeSymbols.map((s) => s.symbol)\n      )).map((v) => v.volatility);\n      const state = await optionPool.viewer.getPoolStates(\n        poolAddress,\n        [],\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n\n      //const { liquidity } = poolState;\n      const index = symbolState.findIndex((s) => s.symbolId === symbolId);\n      if (index > -1) {\n        const {\n          tradersNetVolume,\n          multiplier,\n          intrinsicValue,\n          timeValue,\n          K,\n        } = symbolState[index];\n        //console.log(tradersNetVolume, multiplier, liquidity, quoteBalanceOffset, timePrice, K)\n        const args = [\n          bg(tradersNetVolume).times(multiplier).toNumber(),\n          bg(intrinsicValue).plus(timeValue).toNumber(),\n          bg(K).toNumber(),\n          bg(newNetVolume).times(multiplier).toNumber(),\n        ]\n\n        const res = queryTradePMM(...args);\n        //console.log('res', res)\n        return bg(res).div(newNetVolume).div(multiplier).toString();\n      } else {\n        console.log(\n          `invalid symbolId(${symbolId}) for the pool(${poolAddress})`\n        );\n        return '';\n      }\n    },\n    args,\n    'getEstimatedMarkPrice',\n    ''\n  );\n};\n\n// getVolatility\nexport const getVolatility = async (\n  chainId,\n  poolAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      const symbols = optionPool.activeSymbols\n      const symbolVolatilities = await volatilitiesCache.get(\n        symbols.map((s) => s.symbol)\n      );\n      const symbolIndex = symbols.findIndex((s) => s.symbolId === symbolId);\n      const volPrice = fromWei(symbolVolatilities[symbolIndex].volatility)\n      return bg(volPrice).times(100).toString()\n    },\n    args,\n    'getVolatility',\n    ''\n  );\n};\n","import {\n  deriToNatural,\n  naturalToDeri,\n  bg,\n  getBlockInfo,\n  getPastEvents,\n  getPastEventsUseAbi,\n  getHttpBase,\n  fetchJson,\n  max,\n} from '../../shared/utils';\nimport { getPoolConfig, DeriEnv } from '../../shared/config';\nimport { everlastingOptionFactory, optionPricerFactory } from '../factory/pool';\nimport { everlastingOptionOldAbi } from '../contract/abis';\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  bTokenSymbol,\n  symbolIdList,\n  symbols,\n  pricer\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const tradeCost = deriToNatural(info.tradeCost);\n  const time = `${+timeStamp.timestamp}000`;\n  const volume = tradeVolume.abs();\n  const symbolId = info.symbolId;\n  const volatility = info.volatility;\n  const index = symbolIdList.indexOf(symbolId);\n  const price = bg(tradeCost).div(\n    bg(tradeVolume).times(symbols[index].multiplier)\n  );\n  const indexPrice = deriToNatural(info.spotPrice);\n\n  const intrinsicValue = symbols[index].isCall\n    ? max(indexPrice.minus(symbols[index].strikePrice), bg(0))\n    : max(bg(symbols[index].strikePrice).minus(indexPrice), bg(0));\n  let timeValue = '0';\n  if (intrinsicValue.lte(0)) {\n    const res = await pricer.getEverlastingTimeValueAndDelta(\n      naturalToDeri(indexPrice),\n      naturalToDeri(symbols[index].strikePrice),\n      volatility,\n      naturalToDeri(bg(1).div(365).toString())\n    );\n    timeValue = res.timeValue;\n  }\n  if (index > -1) {\n    return {\n      direction,\n      baseToken: bTokenSymbol,\n      symbolId,\n      symbol: symbols[index].symbol,\n      price: price.toString(),\n      indexPrice: indexPrice.toString(),\n      volume: volume.times(symbols[index].multiplier).toString(),\n      transactionHash: txHash.toString(),\n      notional: tradeVolume\n        .abs()\n        .times(indexPrice)\n        .times(multiplier[index])\n        .toString(),\n      contractValue: tradeVolume\n        .abs()\n        .times(price)\n        .times(multiplier[index])\n        .toString(),\n      transactionFee: intrinsicValue.gt(0)\n        ? volume\n            .times(symbols[index].multiplier)\n            .times(indexPrice)\n            .times(symbols[index].feeRatioITM)\n            .toString()\n        : volume\n            .times(symbols[index].multiplier)\n            .times(timeValue)\n            .times(symbols[index].feeRatioOTM)\n            .toString(),\n      time,\n    };\n  } else {\n    return null;\n  }\n};\n\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n  // const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol, pricer: pricerAddress } = getPoolConfig(\n    poolAddress,\n    undefined,\n    undefined,\n    'option'\n  );\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  const pricer = optionPricerFactory(chainId, pricerAddress);\n  const [toBlock] = await Promise.all([\n    getBlockInfo(chainId, 'latest'),\n    optionPool._updateConfig(),\n  ]);\n  fromBlock = parseInt(fromBlock);\n\n  let promises = [];\n  for (let i = 0; i < optionPool.activeSymbolIds.length; i++) {\n    promises.push(\n      optionPool.getSymbol(optionPool.activeSymbolIds[i].toString())\n    );\n  }\n  let symbols = await Promise.all(promises);\n  //let symbols = optionPool.activeSymbols\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n\n  const filters = { account: accountAddress };\n  let result = [];\n\n  if (DeriEnv.get() === 'testnet') {\n    let events = await getPastEvents(\n      chainId,\n      optionPool.contract,\n      'Trade',\n      filters,\n      fromBlock,\n      toBlock.number\n    );\n\n    //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n    //console.log('online events length:', events.length);\n    for (let i = 0; i < events.length; i++) {\n      const item = events[i];\n      let res;\n      res = await optionPool.formatTradeEvent(item);\n      if (res) {\n        const symbolIndex = optionPool.activeSymbolIds.indexOf(res.symbolId);\n        result.unshift({\n          baseToken: bTokenSymbol,\n          direction: res.direction,\n          volume: bg(res.volume)\n            .times(optionPool.symbols[symbolIndex].multiplier)\n            .toString(),\n          price: res.price,\n          indexPrice: res.indexPrice,\n          notional: res.notional,\n          symbol: res.symbol,\n          symbolId: res.symbolId,\n          time: res.time,\n          contractValue: res.contractValue,\n          transactionFee: res.transactionFee,\n          transactionHash: res.transactionHash,\n        });\n      }\n    }\n  } else {\n    let events = await getPastEventsUseAbi(\n      chainId,\n      poolAddress,\n      everlastingOptionOldAbi,\n      'Trade',\n      filters,\n      fromBlock,\n      toBlock.number\n    );\n\n    // console.log('old online events length:', events.length, fromBlock, toBlock.number);\n    //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n    for (let i = 0; i < events.length; i++) {\n      const item = events[i];\n      const res = await processTradeEvent(\n        chainId,\n        item.returnValues,\n        item.blockNumber,\n        item.transactionHash,\n        multiplier,\n        bTokenSymbol,\n        optionPool.activeSymbolIds,\n        symbols,\n        pricer\n      );\n      res && result.unshift(res);\n    }\n  }\n  result = result.filter((tr) => tr !== null);\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock,\n      tradeHistory = [];\n    const optionPool = everlastingOptionFactory(chainId, poolAddress);\n    const [res] = await Promise.all([\n      fetchJson(\n        `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n      ),\n      optionPool._updateConfig(),\n    ]);\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const symbols = optionPool.activeSymbols;\n    //console.log('history ', tradeHistory)\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\n        .map((i) => {\n          const index = symbols.findIndex((s) => s.symbolId === i.symbolId);\n          if (index > -1) {\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              indexPrice: deriToNatural(i.indexPrice).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              contractValue: deriToNatural(i.contractValue).toString(),\n              volume: deriToNatural(i.volume)\n                .times(symbols[index].multiplier)\n                .toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else if (i.direction === 'LIQUIDATION') {\n            if (\n              i.volume !== '' &&\n              i.volume.indexOf(',') > -1 &&\n              !i.price.startsWith('NaN')\n            ) {\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\n                if (v !== '0') {\n                  return acc.concat([index]);\n                } else {\n                  return acc;\n                }\n              }, []);\n              const prices = i.price.split(',').map((s) => deriToNatural(s));\n              const volumes = i.volume.split(',').map((v) => deriToNatural(v));\n              const res = ids.map((id) => {\n                return {\n                  direction: i.direction.trim(),\n                  baseToken: i.baseToken.trim(),\n                  symbolId: id.toString(),\n                  symbol: symbols[id].symbol,\n                  volume: volumes[id]\n                    .times(symbols[id].multiplier)\n                    .abs()\n                    .toString(),\n                  price: prices[id].toString(),\n                  indexPrice: '',\n                  notional: '',\n                  contractValue: volumes[id]\n                    .abs()\n                    .times(prices[id])\n                    .times(symbols[id].multiplier)\n                    .toString(),\n                  transactionFee: '0',\n                  transactionHash: i.transactionHash,\n                  time: i.time.toString(),\n                };\n              });\n              return res;\n            } else {\n              return {\n                direction: i.direction.trim(),\n                baseToken: i.baseToken.trim(),\n                symbolId: '',\n                symbol: '',\n                volume: '',\n                price: '',\n                indexPrice: '',\n                notional: '',\n                contractValue: '',\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              };\n            }\n          } else {\n            // i.symbolId is not in activeSymbols\n            return null;\n          }\n        })\n        .flat();\n    }\n    tradeHistory = tradeHistory.filter((tr) => tr !== null);\n    // fetch tradeHistory on the block with fromBlock from rest api\n    //console.log('tradeFromBlock', tradeFromBlock)\n    if (tradeFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      const { initialBlock } = getPoolConfig(\n        poolAddress,\n        undefined,\n        symbolId,\n        'option'\n      );\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch (err) {\n    console.log(\n      `getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`\n    );\n  }\n  return [];\n};\n","import { catchTxApiError, naturalToDeri, toChecksumAddress } from \"../../shared\"\nimport { normalizeChainId } from \"../../shared/utils/validate\";\nimport { getOracleFactoryChainlinkConfig, getPoolV2LiteManagerConfig } from \"../config\";\nimport { chainlinkFeedFactory, oracleFactoryChainlinkFactory, perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory } from \"../factory\";\n\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\nexport const createPool = async(...args) => {\n  return catchTxApiError(async(chainId, accountAddress, parameters, bTokenAddress, pairedTokenAddress) => {\n      chainId = normalizeChainId(chainId)\n      const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(chainId)\n      const poolManager = perpetualPoolLiteManagerFactory(\n        chainId,\n        poolManagerAddress\n      );\n      // process parameters\n      const newParameters = parameters.map((p) => naturalToDeri(p).toString())\n      // send tx\n     return await poolManager.createPool(accountAddress, newParameters, bTokenAddress, pairedTokenAddress)\n  }, args)\n}\n\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\nexport const addSymbol = async(...args) => {\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, parameters) => {\n      chainId = normalizeChainId(chainId)\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      // process parameters\n      const newParameters = parameters.map((p, index) => index > 2 ? naturalToDeri(p).toString() : p)\n      // send tx\n     return await perpetualPoolLite.addSymbol(accountAddress, newParameters)\n  }, args)\n}\n\nexport const createOracle = async(...args) => {\n  return catchTxApiError(async(chainId, accountAddress, feedAddress) => {\n      chainId = normalizeChainId(chainId)\n      feedAddress = toChecksumAddress(feedAddress)\n      const feedContract = chainlinkFeedFactory(chainId, feedAddress)\n      const symbol = await feedContract.symbol()\n      if (typeof symbol === 'string' && symbol !== '') {\n        const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\n        const oracleFactory = oracleFactoryChainlinkFactory(\n          chainId,\n          oracleFactoryConfig.address\n        );\n        // process parameters\n        // send tx\n        return await oracleFactory.createOracle(\n          accountAddress,\n          symbol\n        );\n      } else {\n        throw new Error(\n          `-- createOracle: cannot get description of feedAddress(${feedAddress})`\n        );\n      }\n  }, args)\n}\n","import { DeriEnv } from \"../shared/config\"\n\nexport const getPTokenAirdropConfig = (chainId, env) => {\n  chainId = chainId.toString()\n  env = env || DeriEnv.get();\n  const config = {\n    prod: [\n      {\n        chainId: '56',\n        address: '0x055FD7f825cCD1b87092A1Ee40462c4c60dDD8ba',\n      },\n    ],\n    dev: [\n      {\n        chainId: '97',\n        address: '0x632D0f5d642B0d915cE1ad0772677FC589cc724d',\n      },\n    ],\n  };\n\n  if (Object.keys(config).includes(env)) {\n    const res = config[env].find((c) => c.chainId === chainId);\n    if (res) {\n      return res\n    }\n  } \n  throw new Error(`-- getPTokenAirdropConfig(), invalid env(${env}) or chainId(${chainId})`)\n};\n\nexport const getDeriVoteConfig = (chainId, env) => {\n  chainId = chainId.toString()\n  env = env || DeriEnv.get();\n  const config = {\n    prod: [\n      {\n        chainId: '1',\n        address: '0xb2b6907AdDa5a13673849CBD448f31be9C4A7424',\n      },\n      {\n        chainId: '56',\n        address: '0x27c116474D4E08df0A13935AF508E8922271F891',\n      },\n      {\n        chainId: '128',\n        address: '0x3752D67bfBe945a89787c7F6758A47C2D52988d4',\n      },\n      {\n        chainId: '137',\n        address: '0x6d05Fd927b5d184A8f848DA7D57C7228AEf80b85',\n      },\n    ],\n    dev: [\n      {\n        chainId: '97',\n        address: '0x37f3432B2166c6dB487c844C481Cba47ac98AD00',\n      },\n    ],\n  };\n\n  if (Object.keys(config).includes(env)) {\n    const res = config[env].find((c) => c.chainId === chainId);\n    if (res) {\n      return res\n    }\n  } \n  throw new Error(`-- getDeriVoteConfig(), invalid env(${env}) or chainId(${chainId})`)\n};\n","import Web3 from \"web3\";\nimport { bg } from \"../shared/utils\";\n\n// lang\nexport const isObject = (value) => typeof value === 'object' && value !== null\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\nexport const isFunction = (value) => typeof value === 'function'\n\n// convert\nexport const toWei = (number, unit = \"ether\") => {\n  return Web3.utils.toWei(number, unit);\n};\n\nexport const fromWei = (number, unit = \"ether\") => {\n  return Web3.utils.fromWei(number, unit);\n};\n\n// factory\nexport const contractFactory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\n// adapter\nconst processObjectResult = (val, propList = []) => {\n  return Object.keys(val).reduce((acc, prop) => {\n    if (typeof val[prop] === \"string\" && propList.includes(prop)) {\n      acc[prop] = bg(fromWei(val[prop])).toString();\n    } else {\n      acc[prop] = val[prop];\n    }\n    return acc;\n  }, {});\n};\n\nconst processResult = (val, propList = []) => {\n  if (isArray(val)) {\n    return val.map((v) => processResult(v, propList));\n  } else if (isObject(val)) {\n    return processObjectResult(val, propList);\n  } else if (typeof val === \"string\") {\n    return bg(fromWei(val)).toString();\n  } else {\n    return val;\n  }\n};\n\nexport const processMethod = (klass, methodName, propList = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const res = await originMethod.apply(this, args);\n    return processResult(res, propList);\n  };\n  return klass;\n};\n\nexport const processTxMethod = (klass, methodName, toWeiArgPositions = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const newArgs = args.map((arg, index) =>\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\n    );\n    return await originMethod.apply(this, newArgs);\n  };\n  return klass;\n};","// this file is generated by script, don't modify it !!!\nexport const pTokenAirdropNULSAbi = [{\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"bTokenAddress\",\n                \"type\": \"address\"\n            }, {\n                \"internalType\": \"address\",\n                \"name\": \"pTokenAddress\",\n                \"type\": \"address\"\n            }, {\n                \"internalType\": \"address\",\n                \"name\": \"poolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    }, {\n        \"anonymous\": false,\n        \"inputs\": [{\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }, {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }, {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"index\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AirdropPToken\",\n        \"type\": \"event\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"airdropPToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"getBTokenBalance\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isAirdropPToken\",\n        \"outputs\": [{\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"isStartAirdrop\",\n        \"outputs\": [{\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"marginUnit\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"maxAirdropLimit\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"ownerAddress\",\n        \"outputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"marginUnit_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMarginUnit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"maxAirdropLimit_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMaxAirdropLimit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"int256\",\n                \"name\": \"tradeUnit_\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"setTradeUnit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"startAirdrop\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"stopAirdrop\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"totalAirdropCount\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"tradeUnit\",\n        \"outputs\": [{\n                \"internalType\": \"int256\",\n                \"name\": \"\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"withdrawBToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils'\nimport { pTokenAirdropNULSAbi } from '../abi/pTokenAirdropNULSAbi.js'\n\nexport class PTokenAirdropNULS extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenAirdropNULSAbi)\n  }\n\n  // query\n  //  async getBTokenBalance() {\n  //    const res = await this._call('getBTokenBalance', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async isAirdropPToken(account) {\n    const res = await this._call('isAirdropPToken', [account])\n    return deleteIndexedKey(res)\n  }\n  //  async isStartAirdrop() {\n  //    const res = await this._call('isStartAirdrop', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async marginUnit() {\n  //    const res = await this._call('marginUnit', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async maxAirdropLimit() {\n  //    const res = await this._call('maxAirdropLimit', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async ownerAddress() {\n  //    const res = await this._call('ownerAddress', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalAirdropCount() {\n    const res = await this._call('totalAirdropCount', [])\n    return deleteIndexedKey(res)\n  }\n  //  async tradeUnit() {\n  //    const res = await this._call('tradeUnit', [])\n  //    return deleteIndexedKey(res)\n  //  }\n\n  // tx\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n  //  async setMarginUnit(accountAddress, marginUnit_) {\n  //    return await this._transact('setMarginUnit', [marginUnit_], accountAddress)\n  //  }\n  //  async setMaxAirdropLimit(accountAddress, maxAirdropLimit_) {\n  //    return await this._transact('setMaxAirdropLimit', [maxAirdropLimit_], accountAddress)\n  //  }\n  //  async setTradeUnit(accountAddress, tradeUnit_) {\n  //    return await this._transact('setTradeUnit', [tradeUnit_], accountAddress)\n  //  }\n  //  async startAirdrop(accountAddress) {\n  //    return await this._transact('startAirdrop', [], accountAddress)\n  //  }\n  //  async stopAirdrop(accountAddress) {\n  //    return await this._transact('stopAirdrop', [], accountAddress)\n  //  }\n  //  async withdrawBToken(accountAddress) {\n  //    return await this._transact('withdrawBToken', [], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const deriVoteAbi = [\n  { \"inputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"voter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"votingId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"votingOption\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Vote\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"controller\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"topic\", \"type\": \"string\" },\n      { \"internalType\": \"uint256\", \"name\": \"nOptions\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint256\", \"name\": \"deadline\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"initializeVote\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"numVotingOptions\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" }\n    ],\n    \"name\": \"setController\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"votingOption\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"vote\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"votingDeadline\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"votingId\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" },\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }\n    ],\n    \"name\": \"votingOptions\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"name\": \"votingTopics\",\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils'\nimport { deriVoteAbi } from '../abi/deriVoteAbi.js'\n\nexport class DeriVote extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, deriVoteAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async controller() {\n    const res = await this._call('controller', [])\n    return deleteIndexedKey(res)\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  async numVotingOptions() {\n    const res = await this._call('numVotingOptions', [])\n    return deleteIndexedKey(res)\n  }\n  async votingDeadline() {\n    const res = await this._call('votingDeadline', [])\n    return deleteIndexedKey(res)\n  }\n  async votingId() {\n    const res = await this._call('votingId', [])\n    return deleteIndexedKey(res)\n  }\n  async votingOptions(votingId, voter) {\n    const res = await this._call(\"votingOptions\", [votingId, voter]);\n    return deleteIndexedKey(res);\n  }\n  async votingTopics(votingId) {\n    const res = await this._call('votingTopics', [votingId])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async initializeVote(accountAddress, topic, nOptions, deadline) {\n  //    return await this._transact('initializeVote', [topic, nOptions, deadline], accountAddress)\n  //  }\n  //  async setController(accountAddress, newController) {\n  //    return await this._transact('setController', [newController], accountAddress)\n  //  }\n  async vote(accountAddress, votingOption) {\n    return await this._transact('vote', [votingOption], accountAddress)\n  }\n\n}","import { contractFactory } from \"../utils\";\nimport { PTokenAirdropNULSAdapter, deriVoteAdapter } from \"./adapter\";\n\nimport { PTokenAirdropNULS } from \"./gen/PTokenAirdropNULS\";\nimport { DeriVote } from \"./gen/DeriVote.js\";\n\n// pToken airdrop\nexport const PTokenAirdropNULSFactory = contractFactory(\n  PTokenAirdropNULSAdapter(PTokenAirdropNULS)\n);\n\n// deri vote\nexport const deriVoteFactory = contractFactory(deriVoteAdapter(DeriVote));","import { catchApiError, catchTxApiError, bg } from \"../../shared/utils\";\nimport { perpetualPoolLiteFactory } from \"../../v2_lite/factory\";\nimport { getPTokenAirdropConfig } from \"../config\"\nimport { PTokenAirdropNULSFactory } from \"../contract/factory\"\n\nexport const isPTokenAirdropped = async (...args) => {\n  return catchApiError(async(chainId, accountAddress) => {\n    const config = getPTokenAirdropConfig(chainId);\n    return await PTokenAirdropNULSFactory(\n      chainId,\n      config.address\n    ).isAirdropPToken(accountAddress);\n  }, args, 'isPTokenAirdropped', '')\n};\n\nexport const totalAirdropCount = async (...args) => {\n  return catchApiError(async(chainId) => {\n    const config = getPTokenAirdropConfig(chainId);\n    return await PTokenAirdropNULSFactory(\n      chainId,\n      config.address\n    ).totalAirdropCount();\n  }, args, 'totalAirdropCount', '')\n};\n\nexport const isUserPTokenExist = async (...args) => {\n  return catchApiError(async (chainId, poolAddress, accountAddress) => {\n    let res = '';\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    const result = await pool.pToken.balanceOf(accountAddress);\n    if (result === '1') {\n      res = true;\n    } else if (result === '0') {\n      res = false;\n    }\n    return res;\n  }, args, 'isUserPTokenExist', '');\n};\n\nexport const isBTokenUnlocked = async(...args) => {\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    return await pool.bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, 'isUnlocked', '')\n}\n\nexport const hasRequiredBalance = async(...args) => {\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    const res = await pool.bToken.balanceOf(accountAddress)\n    console.log('res', res)\n    return bg(res).gte(100)\n  }, args, 'hasRequiredBalance', '')\n}\n\n\n// tx\nexport const unlockBToken = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    return await pool.bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const airdropPToken = async (...args) => {\n  return catchTxApiError(async (chainId, accountAddress) => {\n    const config = getPTokenAirdropConfig(chainId);\n    return await PTokenAirdropNULSFactory(\n      chainId,\n      config.address\n    ).airdropPToken(accountAddress);\n  }, args);\n};\n","import { catchApiError, bg, deriToNatural, databaseActivityFactory, toChecksumAddress, DeriEnv, max } from '../../shared';\n\nconst range = (n) => (new Array(n)).fill(0).map((i,index) => index)\n\nconst keyPrefix = () => (DeriEnv.get() === 'prod' ? 'TE' : 'TE2');\n\nexport const getStakingTop10Users = async () => {\n  return catchApiError(\n    async () => {\n      const db = databaseActivityFactory();\n      const key = range(10).reduce(\n        (acc, i) =>\n          acc.concat([\n            `${keyPrefix()}.top.${i + 1}.account`,\n            `${keyPrefix()}.top.${i + 1}.fee`,\n            `${keyPrefix()}.top.${i + 1}.score`,\n            `${keyPrefix()}.top.${i + 1}.cont`,\n          ]),\n        []\n      );\n      //console.log(key)\n      const res = await db.getValues(key)\n      //console.log(res)\n      if (Array.isArray(res) && res.length === 4 * 10) {\n        let result = []\n        for (let i = 0; i < res.length; i++) {\n          if ((i + 1) % 4 === 0) {\n            const info = res.slice(i - 3, i + 1);\n            const index = (i + 1) / 4\n            result.push({\n              no: index,\n              userAddr: info[0].slice(0, 42),\n              feePaid: deriToNatural(info[1]).toString(),\n              score: deriToNatural(info[2]).toString(),\n              evgCoeff: deriToNatural(info[1]).eq(0)\n                ? '0'\n                : bg(info[3]).div(info[1]).toString(),\n              rewardBNB:\n                index <= 5\n                  ? index <= 4\n                    ? index <= 3\n                      ? index <= 2\n                        ? index <= 1\n                          ? '200000'\n                          : '100000'\n                        : '50000'\n                      : '35000'\n                    : '25000'\n                  : '18000',\n            });\n          }\n        }\n        return result.filter((r) => r.userAddr !== '0x0000000000000000000000000000000000000000')\n      } else {\n        return []\n      }\n    },\n    [],\n    'getStakingTop10Users',\n    [],\n  );\n};\n\nexport const getUserStakingInfo = async (accountAddress) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async (accountAddress) => {\n      accountAddress = toChecksumAddress(accountAddress)\n      const db = databaseActivityFactory();\n      const key = [\n        `${keyPrefix()}.Q1.cont`,\n        `${keyPrefix()}.Q2.cont`,\n        `${keyPrefix()}.Q3.cont`,\n        `${keyPrefix()}.Q4.cont`,\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\n        `${keyPrefix()}.${accountAddress}.fee`,\n        `${keyPrefix()}.${accountAddress}.coef`,\n      ];\n      const res = await db.getValues(key)\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\n\n      const coef = deriToNatural(res[9])\n      return {\n        userAddr: accountAddress,\n        feePaid: deriToNatural(res[8]).toString(),\n        coef: max(coef, bg(1)).toString(),\n        score: bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4).toString()\n      }\n    },\n    args,\n    'getUserStakingInfo',\n    {\n      userAddr: '',\n      feePaid: '',\n      coef: '',\n      score: '',\n    }\n  );\n};\n\nexport const getUserStakingReward = async (accountAddress) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async (accountAddress) => {\n      accountAddress = toChecksumAddress(accountAddress)\n      const db = databaseActivityFactory();\n      const key = [\n        `${keyPrefix()}.Q1.cont`,\n        `${keyPrefix()}.Q2.cont`,\n        `${keyPrefix()}.Q3.cont`,\n        `${keyPrefix()}.Q4.cont`,\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\n        `${keyPrefix()}.top.1.account`,\n        `${keyPrefix()}.top.2.account`,\n        `${keyPrefix()}.top.3.account`,\n        `${keyPrefix()}.top.4.account`,\n        `${keyPrefix()}.top.5.account`,\n        `${keyPrefix()}.top.6.account`,\n        `${keyPrefix()}.top.7.account`,\n        `${keyPrefix()}.top.8.account`,\n        `${keyPrefix()}.top.9.account`,\n        `${keyPrefix()}.top.10.account`,\n      ];\n      const res = await db.getValues(key);\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\n      const score = bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4);\n      const rewardDERI = bg(1000000).times(bg(score).div(110000)).toString();\n\n      const topUsers = res.slice(8).map((u) => toChecksumAddress(u.slice(0, 42)));\n      let rewardBNB = '0';\n      if (topUsers.includes(accountAddress)) {\n        if (accountAddress === topUsers[0]) {\n          rewardBNB = '200000';\n        } else if (accountAddress === topUsers[1]) {\n          rewardBNB = '100000';\n        } else if (accountAddress === topUsers[2]) {\n          rewardBNB = '50000';\n        } else if (accountAddress === topUsers[3]) {\n          rewardBNB = '35000';\n        } else if (accountAddress === topUsers[4]) {\n          rewardBNB = '25000';\n        } else {\n          rewardBNB = '18000';\n        }\n      }\n      return {\n        userAddr: accountAddress,\n        rewardBNB,\n        rewardDERI,\n      };\n    },\n    args,\n    'getUserStakingReward',\n    { userAddr: '', rewardBNB: '', rewardDERI: '' }\n  );\n};\n\nexport const getUserStakingContribution = async (accountAddress) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async (accountAddress) => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseActivityFactory();\n      const key = [\n        `${keyPrefix()}.Q1.cont`,\n        `${keyPrefix()}.Q2.cont`,\n        `${keyPrefix()}.Q3.cont`,\n        `${keyPrefix()}.Q4.cont`,\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\n      ];\n      const res = await db.getValues(key);\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\n\n      return {\n        userAddr: accountAddress,\n        totalContrib: deriToNatural(\n          bg(res[0]).plus(res[1]).plus(res[2]).plus(res[3])\n        ).toString(),\n        userContrib: deriToNatural(\n          bg(res[4]).plus(res[5]).plus(res[6]).plus(res[7])\n        ).toString(),\n        Q1Contrib: deriToNatural(res[0]).toString(),\n        Q2Contrib: deriToNatural(res[1]).toString(),\n        Q3Contrib: deriToNatural(res[2]).toString(),\n        Q4Contrib: deriToNatural(res[3]).toString(),\n        userQ1Contrib: deriToNatural(res[4]).toString(),\n        userQ2Contrib: deriToNatural(res[5]).toString(),\n        userQ3Contrib: deriToNatural(res[6]).toString(),\n        userQ4Contrib: deriToNatural(res[7]).toString(),\n        userQ1Point: scoreQ1.toString(),\n        userQ2Point: scoreQ2.toString(),\n        userQ3Point: scoreQ3.toString(),\n        userQ4Point: scoreQ4.toString(),\n      };\n    },\n    args,\n    'getUserStakingContribution',\n    { userAddr: '', totalContrib: '', userContrib: '' }\n  );\n};","import { catchApiError, catchTxApiError, DeriEnv, fromWei, hexToNumberString, toChecksumAddress } from \"../../shared\";\nimport { databaseDeriVoteFactory } from \"../../shared/factory/database\";\nimport { getDeriVoteConfig } from \"../config\";\nimport { deriVoteFactory } from \"../contract/factory\";\n\nconst votingId = '2'\nconst keyPrefix = () => (DeriEnv.get() === 'prod' ? `VID${votingId}` : 'VID1');\n\n\nexport const getVotingResult = async() => {\n  return catchApiError(\n    async () => {\n      const db = databaseDeriVoteFactory();\n      const keys = [\n        `${keyPrefix()}.OP1.count`,\n        `${keyPrefix()}.OP2.count`,\n        `${keyPrefix()}.OP3.count`,\n      ];\n      const res = await db.getValues(keys);\n      return res.map((v) => fromWei(hexToNumberString(v)));\n    },\n    [],\n    'getOptionsVotingPowers',\n    ['', '', '']\n  );\n}\n\nexport const getUserVotingPower = async(accountAddress) => {\n  return catchApiError(async() => {\n    accountAddress = toChecksumAddress(accountAddress)\n    const db = databaseDeriVoteFactory()\n    const keys = [\n      `${keyPrefix()}.${accountAddress}.count`,\n    ]\n    const res = await db.getValues(keys)\n    return res.map((v) => fromWei(hexToNumberString(v)))[0]\n  }, [accountAddress], 'getUserVotingPowers', '')\n}\n\n\nexport const getUserVotingResult = async (accountAddress) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async () => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseDeriVoteFactory();\n      const keys = [\n        `${keyPrefix()}.${accountAddress}.count`,\n        `${keyPrefix()}.${accountAddress}.option`,\n        `${keyPrefix()}.${accountAddress}.timestamp`,\n      ];\n      const res = await db.getValues(keys);\n      return {\n        votingPower: fromWei(hexToNumberString(res[0])),\n        option: hexToNumberString(res[1]),\n        timestamp: hexToNumberString(res[2]),\n      };\n    },\n    args,\n    'getVoteResult',\n    ''\n  );\n};\n\nexport const vote = async(chainId, accountAddress, votingOption) => {\n  const args = [chainId, accountAddress, votingOption]\n  return catchTxApiError(async() => {\n    chainId = chainId.toString()\n    accountAddress = toChecksumAddress(accountAddress)\n    const config = getDeriVoteConfig(chainId)\n    const deriVote = deriVoteFactory(chainId, config.address)\n    const voteId = await deriVote.votingId()\n    if (voteId !== votingId) {\n      throw new Error(\n        `Deri Vote: votingId is not match (${votingId} !== ${voteId}) `\n      );\n    }\n    return await deriVote.vote(accountAddress, votingOption)\n  }, args)\n}","import {\n  DeriEnv,\n  getPoolConfigList as getPoolV2ConfigList,\n  getPoolV1ConfigList,\n  VERSIONS,\n} from '../shared/config';\nimport { getJsonConfig } from '../shared/config/config';\nimport { ALL_EXCEPT_OPEN_VERSIONS } from '../shared/config/version';\n\nexport const getContractAddressConfig = (env, version) => {\n  env = env || DeriEnv.get()\n  if (version === 'v1') {\n    return getPoolV1ConfigList(env);\n  } else if (VERSIONS.includes(version)) {\n    return getPoolV2ConfigList(version, env);\n  } else if (version === undefined) {\n    return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => [...acc, ...getPoolV2ConfigList(v, env)], [])\n  } else {\n    throw new Error(`getContractAddressConfig: invalid version: ${version}`);\n  }\n};\n\nexport const getPoolConfigList = (env) => {\n  env = env || DeriEnv.get();\n  return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => {\n    let res = []\n    const config = getJsonConfig(v, env);\n    if (config && config.pools) {\n      res = config.pools.map((p) => {\n        p.version = v\n        return p\n      })\n    }\n    return [...acc, ...res];\n  }, []);\n};\n","import {\n  getPoolConfig2,\n  getPoolBTokenIdList,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport { databaseFactory } from '../../shared/factory';\nimport { bg, deriToNatural, getNetworkName } from '../../shared/utils';\nimport { lTokenFactory, perpetualPoolFactory } from '../factory';\nimport { calculateMaxRemovableLiquidity } from '../calculation';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  try {\n    const { lToken: lTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const lToken = lTokenFactory(chainId, lTokenAddress);\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress);\n    const symbolIdList = getPoolSymbolIdList(poolAddress);\n\n    const [parameterInfo, bTokenInfo, lTokenAsset] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getBToken(bTokenId),\n      lToken.getAsset(accountAddress, bTokenId),\n    ]);\n    const { minPoolMarginRatio } = parameterInfo;\n    let promises = [];\n    for (let i = 0; i < bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n    }\n    const bTokens = await Promise.all(promises);\n\n    promises = [];\n    for (let i = 0; i < symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n    }\n    const symbols = await Promise.all(promises);\n\n    const cost = symbols.reduce((accum, s) => {\n      return accum.plus(\n        bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n      );\n    }, bg(0));\n    const totalPnl = symbols.reduce((accum, s) => {\n      return accum.plus(\n        bg(s.tradersNetVolume)\n          .times(s.price)\n          .times(s.multiplier)\n          .minus(s.tradersNetCost)\n      );\n    }, bg(0));\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\n      if (index === parseInt(bTokenId)) {\n        return accum.plus(b.pnl);\n      } else {\n        return accum.plus(\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n        );\n      }\n    }, bg(0));\n\n    const { liquidity: poolLiquidity } = bTokenInfo;\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\n      bTokens[bTokenId],\n      liquidity,\n      cost,\n      totalPnl,\n      restLiquidity,\n      minPoolMarginRatio\n    );\n    const approximatePnl = pnl.plus(\n      bg(bTokens[bTokenId].cumulativePnl)\n        .minus(lastCumulativePnl)\n        .times(liquidity)\n    );\n    return {\n      //totalSupply: lTokenTotalSupply.toString(),\n      poolLiquidity: poolLiquidity.toString(),\n      // shares: liquidity.toString(),\n      // shareValue: '1',\n      // maxRemovableShares: liquidity.toString()\n      shares: liquidity.toString(),\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\n      maxRemovableShares: maxRemovableShares.toString(),\n    };\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return {\n    poolLiquidity: '',\n    shares: '',\n    pnl: '',\n    maxRemovableShares: '',\n  };\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol: '',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return {\n    liquidity: '',\n    symbol: '',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h, multiplier] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n        multiplier: deriToNatural(multiplier).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`);\n  }\n};\n","import { bTokenFactory } from '../../shared/factory';\nimport {\n  getPoolBTokenIdList,\n  getPoolBTokenList,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getPoolSymbolList,\n} from '../../shared/config';\nimport { bg, min, max } from '../../shared/utils'\nimport { getOraclePrice } from '../../shared/utils/oracle'\nimport { getIndexInfo } from '../../shared/config/token';\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\nimport {\n  calculateEntryPrice,\n  calculateLiquidationPrice,\n  calculateFundingRate,\n  calculateFundingFee,\n  processFundingRate,\n} from '../calculation';\nimport { perpetualPoolFactory, pTokenFactory } from '../factory';\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\n    const bTokens = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const bTokenDiscounts = (await Promise.all(\n      bTokens.reduce(\n        (acc, b, index) =>\n          acc.concat([perpetualPool.getBToken(index.toString())]),\n        []\n      )\n    )).map((b) => b.discount);\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo\n    return {\n      symbol: symbol,\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      //minAddLiquidity: minAddLiquidity.toString(),\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n      indexConstituents: getIndexInfo(symbol)\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    symbol: '',\n    bTokenSymbol: [],\n    bTokenMultiplier: [],\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n    indexConstituents: { url: '', tokens: [] },\n  };\n};\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    //console.log('bTokenList', bTokenList)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n    ])\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const {\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolList.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const price = symbolPrices[symbolId]\n    priceCache.set(poolAddress, symbolId, price)\n    const marginHeld = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    //\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    })\n\n    const totalCost = positions.reduce((accum, a) => {\n      return accum.plus(bg(a.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n    //console.log('cost', costTotal.toString())\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n\n    // set liquidatePrice cache\n    liquidatePriceCache.set(poolAddress, {\n      volume,\n      margin,\n      totalCost,\n      dynamicCost,\n      price,\n      multiplier,\n      minMaintenanceMarginRatio,\n    });\n  return {\n      price: price,\n      volume: bg(volume).times(multiplier).toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n      fundingFee: fundingFee.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {};\n}\n\nexport const getPositionInfos = async (chainId, poolAddress, accountAddress) => {\n  try {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    //console.log('bTokenList', bTokenList)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, '0')\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, margins, positions] = await Promise.all([\n      //perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n      //pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      //getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n    ])\n    const {\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolList.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n\n    const marginHeld = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    //\n    // const unrealizedPnlList = symbols.map((s, index) => {\n    //   return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    // })\n\n    //console.log('cost', costTotal.toString())\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n\n    return positions.map((p, index) => {\n      const symbol = symbols[index]\n      const symbolId = symbolIdList[index]\n      const price = symbolPrices[index]\n      priceCache.set(poolAddress, symbolId, price)\n      const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbol\n      const { volume, cost, lastCumulativeFundingRate } = p\n      const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[index]).times(minInitialMarginRatio)\n      const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\n      const totalCost = positions.reduce((accum, a) => {\n        return accum.plus(bg(a.cost))\n      }, bg(0))\n      const dynamicCost = symbols.reduce((accum, s, idx) => {\n        if (idx !== index) {\n          return accum.plus(bg(positions[idx].volume).times(symbolPrices[idx]).times(s.multiplier))\n        } else {\n          return accum\n        }\n      }, bg(0))\n      const fundingFee = calculateFundingFee(\n        tradersNetVolume,\n        price,\n        multiplier,\n        fundingRateCoefficient,\n        liquidity,\n        cumulativeFundingRate,\n        lastCumulativeFundingRate,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        volume,\n      );\n      return {\n        symbol: symbol.symbol,\n        symbolId: index.toString(),\n        price: symbolPrices[index],\n        volume: bg(p.volume).times(multiplier).toString(),\n        averageEntryPrice: calculateEntryPrice(p.volume, cost, multiplier).toString(),\n        margin: margin.toString(),\n        marginHeld: marginHeld.toString(),\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\n        //unrealizedPnlList,\n        unrealizedPnl: unrealizedPnl.toString(),\n        liquidationPrice: calculateLiquidationPrice(\n          volume,\n          margin,\n          totalCost,\n          dynamicCost,\n          multiplier,\n          minMaintenanceMarginRatio\n        ).toString(),\n        fundingFee: fundingFee.toString()\n      };\n    }).filter((p) => p.volume !== '0')\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return []\n}\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return '';\n}\n\nexport const getEstimatedLiquidatePrice = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n) => {\n  try {\n    let {\n      volume,\n      margin,\n      totalCost,\n      dynamicCost,\n      price,\n      multiplier,\n      minMaintenanceMarginRatio,\n    } = liquidatePriceCache.get(poolAddress);\n    totalCost = bg(totalCost).plus(bg(newVolume).times(price).times(multiplier))\n    //console.log(totalCost.toString())\n    return calculateLiquidationPrice(\n      bg(volume).plus(newVolume),\n      margin,\n      totalCost,\n      dynamicCost,\n      multiplier,\n      minMaintenanceMarginRatio\n    ).toString();\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return '';\n};\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return false\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  try {\n    let price = priceCache.get(poolAddress, symbolId)\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    if (!price) {\n      //price = await getOraclePrice(poolAddress, symbolId)\n      price = await getOraclePrice(chainId, symbol)\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    //console.log(volume, price, multiplier, feeRatio)\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  try {\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [price, symbolInfo ] = await Promise.all([\n      //getOraclePrice(poolAddress, symbolId),\n      getOraclePrice(chainId, symbol),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const {multiplier} = symbolInfo\n    //console.log('m',multiplier.toString())\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\n  let promiseList = []\n  for (let i=0; i<bTokenIdList.length; i++) {\n    promiseList.push(perpetualPool.getBToken(i))\n  }\n  const bTokenInfoList = await Promise.all(promiseList)\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  //console.log('pnl', pnl.toString())\n\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\n    //getOraclePrice(poolAddress, symbolId),\n    getOraclePrice(chainId, symbol),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\n  const { minPoolMarginRatio } = parameterInfo;\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n  // const liquidityUsedArgs = [\n  //   tradersNetVolume,\n  //   price,\n  //   multiplier,\n  //   liquidity,\n  //   minPoolMarginRatio,\n  // ]\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\n  let promises = []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  const symbols = await Promise.all(promises)\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    //pnl: pnl.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  try {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume, multiplier } = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  };\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const args = [\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ]\n    let fundingRate1 = calculateFundingRate(...args)\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\n    return {\n      fundingRate1: fundingRate1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate1: '',\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    return {\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed0: '',\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\n      }\n    }, bg(0))\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\n    return {\n      liquidityUsed1: liquidityUsed1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed1: '',\n  }\n}\n\n\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    let bTokenList = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    // let bTokenList = bTokensConfigList.map((i) => {\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\n    // })\n    let promiseList = []\n    for (let i=0; i<bTokenList.length; i++) {\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\n    }\n    const resultList = await Promise.all(promiseList)\n    for (let i=0; i<bTokenList.length; i++) {\n      bTokenList[i].walletBalance = resultList[i].toString()\n    }\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n    const [margins, positions, parameterInfo] = await Promise.all([\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      perpetualPool.getParameters(),\n    ]);\n    const { minInitialMarginRatio } = parameterInfo;\n\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n    //console.log('margin', margin.toString())\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n\n    promises = []\n    const symbolList = symbols.map((s) => s.symbol)\n    for (let i=0; i< symbols.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n    //console.log(symbolPrices)\n\n    const marginHeld = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\n    }, bg(0))\n    //console.log('marginHeld', marginHeld.toString())\n\n    const pnl = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    //console.log('pnl', pnl.toString())\n\n    bTokenList = bTokenList.map((i, index) => {\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\n      } else {\n        i.availableBalance = '-'\n      }\n      return i\n    })\n    return bTokenList\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return []\n}\n\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      pToken.getPosition(accountAddress, symbolId),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n    ])\n    const { volume, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return fundingFee.toString()\n}\n","import {\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getPoolBTokenIdList,\n} from '../../shared/config';\nimport { bg } from '../../shared/utils';\nimport { getPriceInfo } from '../../shared/utils/oracle';\nimport { bTokenFactory } from '../../shared/factory';\nimport { isOrderValid } from '../calculation';\nimport {\n  perpetualPoolRouterFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const tx = await perpetualPoolRouter.addMargin(\n      accountAddress,\n      bTokenId,\n      amount\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const tx = await perpetualPoolRouter.removeMargin(\n      accountAddress,\n      bTokenId,\n      amount,\n      isMaximum\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getPositions(accountAddress),\n    //pToken.getMargin(accountAddress, symbolId),\n  ]);\n\n  //const { multiplier } = symbolInfo;\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const margins = await pToken.getMargins(accountAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const margin = bTokens.reduce((accum, i, index) => {\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\n  }, bg(0));\n\n  const liquidity = bTokens.reduce(\n    (accum, i) =>\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\n    bg(0)\n  );\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  let marginHeld = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.price)\n          .times(a.multiplier)\n          .times(positions[index].volume.plus(newVolume))\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\n      );\n    }\n  }, bg(0));\n  marginHeld = marginHeld.times(minInitialMarginRatio);\n\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.tradersNetVolume)\n          .plus(newVolume)\n          .times(a.price)\n          .times(a.multiplier)\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\n      );\n    }\n  }, bg(0));\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n  //console.log('liquidityUsed', liquidityUsed.toString())\n\n  const orderValidation = isOrderValid(\n    //price,\n    margin,\n    marginHeld,\n    liquidity,\n    liquidityUsed\n    //multiplier,\n    //minPoolMarginRatio,\n    //bg(newVolume),\n  );\n  let res;\n  if (orderValidation.success) {\n    try {\n      const tx = await perpetualPoolRouter.trade(\n        accountAddress,\n        symbolId,\n        newVolume\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.error };\n  }\n  return res;\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\n  const newVolume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await perpetualPoolRouter.trade(\n        accountAddress,\n        symbolId,\n        newVolume\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n\nexport const depositMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const promises = symbolIdList.map(async (s) => {\n      return await getPriceInfo(s);\n    });\n    const prices = await Promise.all(promises);\n    const priceInfos = prices.map((p, index) => {\n      return [\n        symbolIdList[index],\n        p.timestamp,\n        p.price,\n        parseInt(p.v).toString(),\n        p.r,\n        p.s,\n      ];\n    });\n    const tx = await perpetualPoolRouter.addMarginWithPrices(\n      accountAddress,\n      bTokenId,\n      amount,\n      priceInfos\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const withdrawMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const promises = symbolIdList.map(async (s) => {\n      return await getPriceInfo(s);\n    });\n    const prices = await Promise.all(promises);\n    const priceInfos = prices.map((p, index) => {\n      return [\n        symbolIdList[index],\n        p.timestamp,\n        p.price,\n        parseInt(p.v).toString(),\n        p.r,\n        p.s,\n      ];\n    });\n    const tx = await perpetualPoolRouter.removeMarginWithPrices(\n      accountAddress,\n      bTokenId,\n      amount,\n      priceInfos,\n      isMaximum\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const tradeWithMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\n  const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getPositions(accountAddress),\n    //pToken.getMargin(accountAddress, symbolId),\n  ]);\n\n  //const { multiplier } = symbolInfo;\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const margins = await pToken.getMargins(accountAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const margin = bTokens.reduce((accum, i, index) => {\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\n  }, bg(0));\n\n  const liquidity = bTokens.reduce(\n    (accum, i) =>\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\n    bg(0)\n  );\n  //console.log('liquidity', liquidity.toString())\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  let marginHeld = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.price)\n          .times(a.multiplier)\n          .times(positions[index].volume.plus(newVolume))\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\n      );\n    }\n  }, bg(0));\n  marginHeld = marginHeld.times(minInitialMarginRatio);\n\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.tradersNetVolume.plus(newVolume))\n          .times(a.price)\n          .times(a.multiplier)\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\n      );\n    }\n  }, bg(0));\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n  //console.log('liquidityUsed', liquidityUsed.toString())\n\n  // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  // console.log('pnl', pnl.toString())\n\n  const orderValidation = isOrderValid(\n    //price,\n    margin,\n    marginHeld,\n    liquidity,\n    liquidityUsed\n    //multiplier,\n    //minPoolMarginRatio,\n    //bg(newVolume),\n  );\n  let res;\n  if (orderValidation.success) {\n    try {\n      promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.tradeWithPrices(\n        accountAddress,\n        symbolId,\n        newVolume,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.error };\n  }\n  return res;\n};\n\nexport const closePositionWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\n  const newVolume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.tradeWithPrices(\n        accountAddress,\n        symbolId,\n        newVolume,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n","import { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getPoolConfig2,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport { perpetualPoolFactory } from '../factory';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  symbols,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    //baseToken: bTokenSymbol,\n    symbolId,\n    symbol: symbol && symbol.symbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: bg(volume).times(multiplier[parseInt(symbolId)]).toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters = { owner: accountAddress };\n  let events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      perpetualPool,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      symbols,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n    //console.log(symbolIdList)\n\n    let promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    //console.log(symbols)\n\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\n        .map((i) => {\n          const index = parseInt(i.symbolId)\n          if (i.direction !== 'LIQUIDATION') {\n            return {\n              direction: i.direction.trim(),\n              //baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              volume: deriToNatural(i.volume).times(symbols[index].multiplier).toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            if (i.volume !== '' && i.volume.indexOf(',') > -1 && !i.price.startsWith('NaN')) {\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\n                if (v !== '0') {\n                  return acc.concat([index]);\n                } else {\n                  return acc\n                }\n              }, []);\n            const prices = i.price.split(',').map((s)=> deriToNatural(s))\n            const volumes= i.volume.split(',').map((v)=> deriToNatural(v))\n            const res = ids.map((id) => {\n              return {\n                direction: i.direction.trim(),\n                symbolId: id.toString(),\n                symbol: symbols[id].symbol,\n                volume: volumes[id].times(symbols[id].multiplier).abs().toString(),\n                price: prices[id].toString(),\n                notional: volumes[id].abs().times(prices[id]).times(symbols[id].multiplier).toString(),\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              };\n            })\n            return res\n            } else {\n              return {\n                direction: i.direction.trim(),\n                symbolId: '',\n                symbol: '',\n                volume: '',\n                price: '',\n                notional: '',\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              }\n            }\n          }\n        }).flat();\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","//import { getOracleServerUrl } from \"../shared/utils/index.js\";\n\nexport const isProdChain = (chainId) => {\n  return [\"1\", \"56\", \"128\", \"137\"].includes(chainId.toString());\n};\n\nexport const PRESERVED_SYMBOLS = [\"BTCUSD\", \"ETHUSD\", \"BNBUSD\"];\n\nexport const getOracleServerUrl = (chainId, symbol, type = \"futures\") => {\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\n  let method = \"get_signed_price\";\n  if (type === \"option\") {\n    method = \"get_signed_volatility\";\n  }\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\n    method = \"get_price\";\n    symbol = `${symbol}_v2_bsc`;\n  }\n  let baseUrl = isProdChain(chainId)\n    ? `https://oracle4.deri.finance/${method}`\n    : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) => `${url}?symbol=${symbol}`;\n\n  if (symbol) {\n    return addSymbolParam(baseUrl, symbol);\n  } else {\n    return baseUrl;\n  }\n};\n\nexport const getPriceInfos = async (chainId, symbolList) => {\n  let url = getOracleServerUrl(chainId);\n  let retry = 3;\n  //console.log('url', url)\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, {\n      mode: \"cors\",\n      cache: \"no-cache\",\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(symbolList),\n    });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === \"200\" && priceInfo.data) {\n        return priceInfo.data;\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(\n      `!! getPriceInfos exceed max retry(3): ${symbolList} ${JSON.stringify(\n        priceInfo\n      )}`\n    );\n  }\n};\n","import { bg } from \"../shared\";\n\nexport const calculateK = (indexPrice, liquidity, alpha) => {\n  return bg(indexPrice).times(alpha).div(liquidity);\n};\nexport const calculateDpmmPrice = (\n  indexPrice,\n  K,\n  tradersNetVolume,\n  multiplier\n) => {\n  return bg(indexPrice).times(\n    bg(1).plus(bg(K).times(tradersNetVolume).times(multiplier))\n  );\n};\nexport const calculateDpmmCost = (\n  indexPrice,\n  K,\n  tradersNetVolume,\n  multiplier,\n  tradeVolume\n) => {\n  return bg(indexPrice).times(\n    bg(multiplier)\n      .times(tradersNetVolume)\n      .plus(bg(multiplier).times(tradeVolume))\n      .pow(2)\n      .minus(bg(multiplier).times(tradersNetVolume).pow(2))\n      .times(K)\n      .div(2)\n      .plus(bg(tradeVolume).times(multiplier))\n  );\n};","// this file is generated by script, don't modify it !!!\nimport { ERC20Factory, offChainOracleFactory} from \"../../shared/contract/factory.js\";\nimport {\n  toWei,\n  getLiquidity,\n  getProtocolFeeAccrued,\n  getLastTimestamp,\n  bg,\n  processResult,\n  deriToNatural,\n  getBlockInfo,\n} from \"../../shared/utils/index.js\";\nimport { normalizeSymbolUnit, SECONDS_IN_A_DAY } from \"../../shared/config\";\nimport {  getOraclePriceFromCache2 } from '../../shared/utils/oracle'\nimport { getPriceInfos } from \"../utils.js\";\nimport { lTokenLiteFactory, pTokenLiteFactory } from \"./factory.js\";\nimport { calculateK, calculateDpmmPrice, calculateDpmmCost } from \"../calc\";\n\n\n// klass = addInstanceMethods(klass, [])\nconst addMethods = (klass, fns = []) => {\n  if (fns.length > 0) {\n    for (let i = 0; i < fns.length; i++) {\n      klass = fns[i](klass);\n    }\n    return klass;\n  } else {\n    return klass;\n  }\n};\nconst overrideMethods = (klass, fns = []) => {\n  if (fns.length > 0) {\n    for (let i = 0; i < fns.length; i++) {\n      const fn = fns[i][0]\n      const args = fns[i].slice(1)\n      // console.log(fn, args)\n      klass = fn(klass)(...args);\n    }\n    return klass;\n  } else {\n    return klass;\n  }\n};\n\nconst checkOffChainOracleSymbol = async (chainId, oracleAddress, symbol) => {\n  try {\n    await offChainOracleFactory(chainId, oracleAddress).signer()\n    return symbol\n  } catch (err) {\n  }\n  try {\n    await offChainOracleFactory(chainId, oracleAddress).signatory()\n    return symbol\n  } catch (err) {\n  }\n  return ''\n};\n\nconst processMethod = (klass) => (methodName, propList = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const res = await originMethod.apply(this, args);\n    return processResult(res, propList);\n  };\n  return klass;\n};\n\nconst processTxMethod = (klass) => (methodName, toWeiArgPositions = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const prices = await this._getSymbolPrices()\n    // console.log('prices', prices)\n    let newArgs = args.map((arg, index) =>\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\n    );\n    newArgs.push(prices)\n    return await originMethod.apply(this, newArgs);\n  };\n  return klass;\n};\n\nconst init = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype['init'] = async function (isEstimatedApi = false) {\n    await this._init();\n    if (!this.addresses || !this.activeSymbolIds) {\n      [this.addresses, this.parameters, this.state, this.fundingPeriod] = await Promise.all([\n        this.getAddresses(),\n        this.getParameters(),\n        this.getPoolStateValues(),\n        this.getFundingPeriod(),\n      ]);\n      this.fundingPeriod = parseInt(this.fundingPeriod);\n      // console.log(this.addresses, this.parameters)\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\n      this.bToken = ERC20Factory(this.chainId, bTokenAddress);\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\n\n      // init tokens\n      [this.bTokenSymbol ] = await Promise.all([\n        this.bToken.symbol(),\n      ]);\n      this.symbols = []\n      this.positions = []\n\n    }\n    // update symbols\n    // estimated for estimated* api use to disable async call\n    if (!isEstimatedApi) {\n      const symbolIds = await this.pToken.getActiveSymbolIds();\n      if (\n        !this.activeSymbolIds ||\n        this.activeSymbolIds.toString() !== symbolIds.toString()\n      ) {\n        this.poolLiquidity = await this.getPoolLiquidity();\n        this.activeSymbolIds = symbolIds;\n        this.symbols = await Promise.all(\n          this.activeSymbolIds.reduce(\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n            []\n          )\n        );\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\n        this.offChainOracleSymbolNames = await Promise.all(\n          this.symbols\n            .map((s) => s.oracleAddress)\n            .reduce(\n              (acc, o, index) => [\n                ...acc,\n                checkOffChainOracleSymbol(\n                  this.chainId,\n                  o,\n                  this.symbols[index].symbol\n                ),\n              ],\n              []\n            )\n        );\n        this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\n          (acc, i, index) => {\n            return this.offChainOracleSymbolNames[index] === ''\n              ? acc\n              : [...acc, i];\n          },\n          []\n        );\n        this.offChainOracleSymbolNames = this.offChainOracleSymbolNames.filter(\n          (s) => s && s !== ''\n        );\n        // console.log(\n        //   `${this.contractAddress} offchain`,\n        //   this.offChainOracleSymbolNames\n        // );\n      }\n    }\n  };\n  return klass;\n};\n\n// this.addresses\n// this.parameters\n\nconst getConfig = (klass) => {\n  klass.prototype[\"getConfig\"] = async function () {\n    return {\n      pool: this.contractAddress,\n      pToken: this.addresses.pTokenAddress,\n      lToken: this.addresses.lTokenAddress,\n      bToken: this.addresses.bTokenAddress,\n      bTokenSymbol: this.bTokenSymbol,\n      symbols: this.symbols.map((s, index) => ({\n        symbolId: this.activeSymbolIds[index],\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      initialBlock: this.initialBlock,\n      type: \"perpetual\",\n      version: \"v2_lite\",\n      versionId: \"v2_lite_dpmm\",\n      chainId: this.chainId,\n    };\n  };\n  return klass;\n};\n\n// getStateValues\nconst getStateValues = (klass) => {\n  klass.prototype[\"getStateValues\"] = async function () {\n    const res = await this.getPoolStateValues()\n    // update\n    this.state = { ...this.state, ...res}\n    return this.state\n  }\n  return klass\n}\n\n// getSymbol()\nconst getSymbols = (klass) => {\n  klass.prototype[\"getSymbols\"] = async function (symbolId) {\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\n    const symbols = await Promise.all(\n      symbolIds.reduce(\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n        []\n      )\n    );\n\n    const indexPrices = await Promise.all(\n      symbols.map((s) => {\n        const oracleAddress = this.offChainOracleSymbolIds.includes(s.symbolId) ? '' : s.oracleAddress\n        return getOraclePriceFromCache2.get(this.chainId, s.symbol, oracleAddress)\n      })\n    )\n    symbols.forEach((s, index) => {\n      s.indexPrice = indexPrices[index]\n      s.K = calculateK(\n        s.indexPrice,\n        this.state.liquidity,\n        s.alpha\n      ).toString();\n      //console.log(s.K, s.indexPrice, s.tradersNetVolume, s.multiplier)\n      s.dpmmPrice = calculateDpmmPrice(\n        s.indexPrice,\n        s.K,\n        s.tradersNetVolume,\n        s.multiplier\n      ).toString();\n      s.fundingPerSecond = bg(s.dpmmPrice).minus(s.indexPrice).times(s.multiplier).div(this.fundingPeriod).toString()\n      //s.fundingPerSecond = bg(s.dpmmPrice).minus(s.indexPrice).div(this.fundingPeriod).toString()\n      s.funding = bg(s.fundingPerSecond).times(SECONDS_IN_A_DAY).toString()\n    });\n\n    // update\n    if (symbolId) {\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\n      if (symbolIndex > -1) {\n        this.symbols[symbolIndex] = symbols[0]\n      }\n    } else {\n      this.symbols = symbols\n    }\n    \n    return symbols\n  };\n  return klass\n};\n\n// get traders positions\nconst getPositions = (klass) => {\n  klass.prototype[\"getPositions\"] = async function (account, symbolId) {\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\n    const positions = await Promise.all(\n      symbolIds.reduce(\n        (acc, symbolId) => [...acc, this.pToken.getPosition(account,symbolId)],\n        []\n      )\n    );\n    await this.getLastTimestamp()\n\n    const timeDiff = bg(Math.floor(Date.now() / 1000)).minus(\n      this.state.lastTimestamp\n    );\n    positions.forEach((p, index) => {\n      const symbol = this.symbols[index];\n      p.fundingAccrued = bg(p.volume)\n        .times(\n          bg(symbol.cumulativeFundingRate)\n            .plus(bg(timeDiff).times(this.symbols[index].fundingPerSecond))\n            .minus(p.lastCumulativeFundingRate)\n        )\n        .toString();\n      p.traderPnl = calculateDpmmCost(\n        symbol.indexPrice,\n        symbol.K,\n        symbol.tradersNetVolume,\n        symbol.multiplier,\n        bg(p.volume).negated().toString()\n      )\n        .negated()\n        .minus(p.cost).toString();\n\n      p.notional = bg(p.volume).abs().times(symbol.indexPrice).times(symbol.multiplier).toString()\n    });\n\n    // update\n    if (symbolId) {\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\n      if (symbolIndex > -1) {\n        this.positions[symbolIndex] = positions[0]\n      }\n    } else {\n      this.positions = positions\n    }\n\n    return positions\n  };\n  return klass\n};\n\n// check is updated\nconst isSymbolsUpdated = (klass) => {\n  klass.prototype['isSymbolsUpdated'] = function() {\n    return Array.isArray(this.symbols) && this.symbols.length > 0 && this.symbols[0].K != null\n  }\n  return klass\n}\nconst isPositionsUpdated = (klass) => {\n  klass.prototype['isPositionsUpdated'] = function() {\n    return Array.isArray(this.positions) && this.positions.length > 0 && this.positions[0].volume != null\n  }\n  return klass\n}\n\nconst getTraderLiquidity = (klass) => {\n  klass.prototype[\"getTraderLiquidity\"] = async function(account) {\n    return await this.lToken.balanceOf(account)\n  }\n  return klass\n}\n\n\nconst getDynamicEquity = (klass) => {\n  klass.prototype['getDynamicEquity'] = async function() {\n    if (!this.isSymbolsUpdated) {\n      await this.getSymbols()\n    }\n    //console.log(this.symbols)\n    const res = bg(this.state.liquidity)\n      .plus(\n        this.symbols.reduce(\n          (acc, s) =>\n            acc\n              .plus(s.tradersNetCost)\n              .minus(\n                bg(s.tradersNetVolume).times(s.dpmmPrice).times(s.multiplier)\n              ),\n          bg(0)\n        )\n      )\n      .toString();\n    this.state.dynamicEquity = res\n    return res\n  }\n  return klass\n}\n\nconst getPoolRequiredMargin = (klass) => {\n  klass.prototype['getPoolRequiredMargin'] = async function () {\n    if (!this.isSymbolsUpdated) {\n      await this.getSymbols()\n    }\n    const { poolMarginRatio } = this.parameters;\n    return this.symbols\n      .reduce(\n        (acc, s) =>\n          acc.plus(\n            bg(s.tradersNetVolume).times(s.indexPrice).times(s.multiplier).abs()\n          ),\n        bg(0)\n      )\n      .times(poolMarginRatio).toString()\n  };\n  return klass\n}\n\nconst getTraderMarginStatus = (klass) => {\n  klass.prototype['getTraderMarginStatus'] = async function (account) {\n    if (!this.isSymbolsUpdated) {\n      await this.getSymbols()\n    }\n    if (!this.isPositionsUpdated) {\n      await this.getPositions(account)\n    }\n    if (!this.margin) {\n      this.margin = await this.pToken.getMargin(account)\n    }\n    // console.log(this.positions)\n    // console.log(this.symbols)\n    const { initialMarginRatio } = this.parameters;\n    let dynamicMargin = bg(this.margin), requiredInitialMargin = bg(0)\n    for (let i = 0; i < this.activeSymbolIds.length; i++) {\n      const s = this.symbols[i];\n      const p = this.positions[i];\n      dynamicMargin = dynamicMargin.plus(\n        bg(p.volume).times(s.dpmmPrice).times(s.multiplier).minus(p.cost)\n      );\n      requiredInitialMargin = requiredInitialMargin.plus(\n        bg(p.volume)\n          .times(s.indexPrice)\n          .times(s.multiplier)\n          .abs()\n          .times(initialMarginRatio)\n      );\n    }\n    return [dynamicMargin.toString(), requiredInitialMargin.toString()];\n  };\n  return klass\n}\n\nconst formatTradeEvent = (klass) => {\n  klass.prototype['formatTradeEvent'] = async function (event) {\n    const info = event.returnValues;\n    const tradeVolume = deriToNatural(info.tradeVolume);\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\n    const symbolId = info.symbolId;\n    const index = this.activeSymbolIds.indexOf(symbolId);\n    if (index > -1) {\n      const symbol = this.symbols[index];\n      const tradeFee = info.tradeFee;\n\n      const direction =\n        tradeFee !== '-1'\n          ? bg(tradeVolume).gt(0)\n            ? 'LONG'\n            : 'SHORT'\n          : 'LIQUIDATION';\n      const price = bg(info.tradeCost)\n        .div(info.tradeVolume)\n        .div(symbol.multiplier)\n        .toString();\n      const notional = bg(tradeVolume)\n        .abs()\n        .times(price)\n        .times(symbol.multiplier)\n        .toString();\n\n      const res = {\n        symbolId: info.symbolId,\n        symbol: symbol.symbol,\n        trader: info.trader,\n        direction,\n        volume: bg(tradeVolume).abs().toString(),\n        price: price,\n        indexPrice: deriToNatural(info.indexPrice).toString(),\n        notional: notional,\n        transactionFee:\n          tradeFee === '-1' ? '0' : deriToNatural(tradeFee).toString(),\n        transactionHash: event.transactionHash,\n        time: block.timestamp * 1000,\n        extra: {},\n      };\n      return res;\n    } else {\n      return null;\n    }\n  };\n  return klass\n};\n\nconst _getSymbolPrices = (klass) => {\n  klass.prototype[\"_getSymbolPrices\"] = async function () {\n    await this.init()\n    let prices = []\n    if (this.offChainOracleSymbolIds.length > 0) {\n        const priceInfos = await getPriceInfos(this.chainId, this.offChainOracleSymbolNames);\n        prices = Object.values(priceInfos).reduce((acc, p, index) => {\n        acc.push([\n            this.offChainOracleSymbolIds[\n            this.offChainOracleSymbolNames.indexOf(Object.keys(priceInfos)[index])\n            ],\n            p.timestamp,\n            p.price,\n            parseInt(p.v).toString(),\n            p.r,\n            p.s,\n        ]);\n        return acc;\n        }, []);\n    }\n    return prices;\n  };\n  return klass;\n};\n\nexport const perpetualPoolLiteAdapter = (klass) => {\n  //klass = processMethod(klass, \"getFundingPeriod\")\n\n  klass = addMethods(klass, [\n    init,\n\n    getConfig,\n    getLiquidity,\n    getLastTimestamp,\n    getProtocolFeeAccrued,\n    getStateValues,\n    getSymbols,\n    getPositions,\n    getDynamicEquity,\n    getPoolRequiredMargin,\n    getTraderMarginStatus,\n    isSymbolsUpdated,\n    isPositionsUpdated,\n    getTraderLiquidity,\n    formatTradeEvent,\n    _getSymbolPrices,\n  ]);\n\n  klass = overrideMethods(klass, [\n    [\n      processMethod,\n      'getParameters',\n      [\n        'poolMarginRatio',\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'minLiquidationReward',\n        'maxLiquidationReward',\n        'liquidationCutRatio',\n        'protocolFeeCollectRatio',\n      ],\n    ],\n    [processMethod, 'getPoolStateValues', ['liquidity', 'protocolFeeAccrued']],\n    [processMethod, 'getFundingPeriod'],\n    [\n      processMethod,\n      'getSymbol',\n      [\n        'multiplier',\n        'feeRatio',\n        'fundingRateCoefficient',\n        'price',\n        'alpha',\n        'cumulativeFundingRate',\n        'tradersNetVolume',\n        'tradersNetCost',\n      ],\n    ],\n  ]);\n\n  klass = overrideMethods(klass, [\n    [processTxMethod, 'addLiquidity', ['1']],\n    [processTxMethod, 'removeLiquidity', ['1']],\n    [processTxMethod, 'addMargin', ['1']],\n    [processTxMethod, 'removeMargin', ['1']],\n    [processTxMethod, 'trade', ['2']],\n  ]);\n\n  return klass;\n};\n\nexport const lTokenLiteAdapter = (klass) => {\n  return overrideMethods(klass, [\n    [processMethod, 'balanceOf'],\n    [processMethod, 'totalSupply'],\n  ]);\n};\n\nexport const pTokenLiteAdapter = (klass) => {\n  return overrideMethods(klass, [\n    [processMethod, 'getMargin'],\n    [\n      processMethod,\n      'getPosition',\n      ['volume', 'cost', 'lastCumulativeFundingRate'],\n    ],\n  ]);\n};\n\nexport const perpetualPoolLiteManagerAdapter = (klass) => {\n    // klass = processMethod(klass, 'symbol', []);\n    return klass\n}\n\n","// this file is generated by script, don't modify it !!!\nexport const perpetualPoolLiteAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256[7]\",\n                \"name\": \"parameters\",\n                \"type\": \"uint256[7]\"\n            },\n            {\n                \"internalType\": \"address[5]\",\n                \"name\": \"addresses\",\n                \"type\": \"address[5]\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"lShares\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AddLiquidity\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AddMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"oldController\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"newController\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ChangeController\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"migrationTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ExecuteMigration\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"liquidator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"reward\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Liquidate\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"migrationTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"PrepareMigration\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"collector\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ProtocolFeeCollection\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"lShares\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"RemoveLiquidity\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"RemoveMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"indexPrice\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeCost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeFee\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"Trade\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"addLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"multiplier\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"approveMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimNewController\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"collectProtocolFee\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"controller\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"executeMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"executeMigrationWithTimestamp\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getAddresses\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"bTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"pTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"liquidatorQualifierAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"protocolFeeCollector\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getFundingPeriod\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getParameters\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"poolMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"initialMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"maintenanceMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"minLiquidationReward\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"maxLiquidationReward\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"liquidationCutRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeCollectRatio\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPoolStateValues\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"liquidity\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeAccrued\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getSymbol\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"string\",\n                        \"name\": \"symbol\",\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"multiplier\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"feeRatio\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"alpha\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetVolume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetCost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"pTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"migrationDestination\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"migrationTimestamp\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"graceDays\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"prepareMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lShares\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"removeLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"removeMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"period\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setFundingPeriod\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newController\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setNewController\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setSymbolParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"toggleCloseOnly\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"trade\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { perpetualPoolLiteAbi } from '../abi/perpetualPoolLiteAbi.js'\n\nexport class PerpetualPoolLite extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async controller() {\n  //    const res = await this._call('controller', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getAddresses() {\n    const res = await this._call('getAddresses', [])\n    return deleteIndexedKey(res)\n  }\n  async getFundingPeriod() {\n    const res = await this._call('getFundingPeriod', [])\n    return deleteIndexedKey(res)\n  }\n  async getParameters() {\n    const res = await this._call('getParameters', [])\n    return deleteIndexedKey(res)\n  }\n  async getPoolStateValues() {\n    const res = await this._call('getPoolStateValues', [])\n    return deleteIndexedKey(res)\n  }\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId])\n    return deleteIndexedKey(res)\n  }\n  //  async migrationDestination() {\n  //    const res = await this._call('migrationDestination', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async migrationTimestamp() {\n  //    const res = await this._call('migrationTimestamp', [])\n  //    return deleteIndexedKey(res)\n  //  }\n\n  // tx\n  async addLiquidity(accountAddress, bAmount, prices) {\n    return await this._transact('addLiquidity', [bAmount, prices], accountAddress)\n  }\n  async addMargin(accountAddress, bAmount) {\n    return await this._transact('addMargin', [bAmount], accountAddress)\n  }\n  //  async addSymbol(accountAddress, symbolId, symbol, oracleAddress, multiplier, feeRatio, alpha) {\n  //    return await this._transact('addSymbol', [symbolId, symbol, oracleAddress, multiplier, feeRatio, alpha], accountAddress)\n  //  }\n  //  async approveMigration(accountAddress) {\n  //    return await this._transact('approveMigration', [], accountAddress)\n  //  }\n  //  async claimNewController(accountAddress) {\n  //    return await this._transact('claimNewController', [], accountAddress)\n  //  }\n  //  async collectProtocolFee(accountAddress) {\n  //    return await this._transact('collectProtocolFee', [], accountAddress)\n  //  }\n  //  async executeMigration(accountAddress, source) {\n  //    return await this._transact('executeMigration', [source], accountAddress)\n  //  }\n  //  async executeMigrationWithTimestamp(accountAddress, source, lastTimestamp) {\n  //    return await this._transact('executeMigrationWithTimestamp', [source, lastTimestamp], accountAddress)\n  //  }\n  //  async liquidate(accountAddress, account, prices) {\n  //    return await this._transact('liquidate', [account, prices], accountAddress)\n  //  }\n  //  async liquidate(accountAddress, pTokenId, prices) {\n  //    return await this._transact('liquidate', [pTokenId, prices], accountAddress)\n  //  }\n  //  async prepareMigration(accountAddress, target, graceDays) {\n  //    return await this._transact('prepareMigration', [target, graceDays], accountAddress)\n  //  }\n  async removeLiquidity(accountAddress, lShares, prices) {\n    return await this._transact('removeLiquidity', [lShares, prices], accountAddress)\n  }\n  async removeMargin(accountAddress, bAmount, prices) {\n    return await this._transact('removeMargin', [bAmount, prices], accountAddress)\n  }\n  //  async removeSymbol(accountAddress, symbolId) {\n  //    return await this._transact('removeSymbol', [symbolId], accountAddress)\n  //  }\n  //  async setFundingPeriod(accountAddress, period) {\n  //    return await this._transact('setFundingPeriod', [period], accountAddress)\n  //  }\n  //  async setNewController(accountAddress, newController) {\n  //    return await this._transact('setNewController', [newController], accountAddress)\n  //  }\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\n  //  }\n  //  async toggleCloseOnly(accountAddress, symbolId) {\n  //    return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\n  //  }\n  async trade(accountAddress, symbolId, tradeVolume, prices) {\n    return await this._transact('trade', [symbolId, tradeVolume, prices], accountAddress)\n  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const lTokenLiteAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"pure\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { lTokenLiteAbi } from '../abi/lTokenLiteAbi.js'\n\nexport class LTokenLite extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, lTokenLiteAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async allowance(owner, spender) {\n  //    const res = await this._call('allowance', [owner, spender])\n  //    return deleteIndexedKey(res)\n  //  }\n  async balanceOf(account) {\n    const res = await this._call('balanceOf', [account])\n    return deleteIndexedKey(res)\n  }\n  //  async decimals() {\n  //    const res = await this._call('decimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async name() {\n  //    const res = await this._call('name', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return deleteIndexedKey(res)\n  }\n  //  async symbol() {\n  //    const res = await this._call('symbol', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async approve(accountAddress, spender, amount) {\n  //    return await this._transact('approve', [spender, amount], accountAddress)\n  //  }\n  //  async burn(accountAddress, account, amount) {\n  //    return await this._transact('burn', [account, amount], accountAddress)\n  //  }\n  //  async mint(accountAddress, account, amount) {\n  //    return await this._transact('mint', [account, amount], accountAddress)\n  //  }\n  //  async setPool(accountAddress, newPool) {\n  //    return await this._transact('setPool', [newPool], accountAddress)\n  //  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const pTokenLiteAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"ApprovalForAll\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"amount\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdateMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"volume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"cost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"lastCumulativeFundingRate\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdatePosition\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"delta\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"addMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addSymbolId\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"exists\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getActiveSymbolIds\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256[]\",\n                \"name\": \"\",\n                \"type\": \"uint256[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getApproved\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getMargin\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getNumPositionHolders\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getPosition\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPTokenLite.Position\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getTokenId\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"isActiveSymbolId\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isApprovedForAll\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ownerOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeSymbolId\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bytes\",\n                \"name\": \"data\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"setApprovalForAll\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes4\",\n                \"name\": \"interfaceId\",\n                \"type\": \"bytes4\"\n            }\n        ],\n        \"name\": \"supportsInterface\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"toggleCloseOnly\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalMinted\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"margin\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"updateMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPTokenLite.Position\",\n                \"name\": \"position\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"updatePosition\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { pTokenLiteAbi } from '../abi/pTokenLiteAbi.js'\n\nexport class PTokenLite extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return deleteIndexedKey(res)\n  }\n  async exists(owner) {\n    const res = await this._call('exists', [owner])\n    return deleteIndexedKey(res)\n  }\n  async getActiveSymbolIds() {\n    const res = await this._call('getActiveSymbolIds', [])\n    return deleteIndexedKey(res)\n  }\n  //  async getApproved(tokenId) {\n  //    const res = await this._call('getApproved', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getMargin(owner) {\n    const res = await this._call('getMargin', [owner])\n    return deleteIndexedKey(res)\n  }\n  async getNumPositionHolders(symbolId) {\n    const res = await this._call('getNumPositionHolders', [symbolId])\n    return deleteIndexedKey(res)\n  }\n  async getPosition(owner, symbolId) {\n    const res = await this._call('getPosition', [owner, symbolId])\n    return deleteIndexedKey(res)\n  }\n  //  async getTokenId(owner) {\n  //    const res = await this._call('getTokenId', [owner])\n  //    return deleteIndexedKey(res)\n  //  }\n  async isActiveSymbolId(symbolId) {\n    const res = await this._call('isActiveSymbolId', [symbolId])\n    return deleteIndexedKey(res)\n  }\n  //  async isApprovedForAll(owner, operator) {\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async name() {\n  //    const res = await this._call('name', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async ownerOf(tokenId) {\n  //    const res = await this._call('ownerOf', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return deleteIndexedKey(res)\n  }\n  //  async supportsInterface(interfaceId) {\n  //    const res = await this._call('supportsInterface', [interfaceId])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async symbol() {\n  //    const res = await this._call('symbol', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async totalMinted() {\n  //    const res = await this._call('totalMinted', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async addMargin(accountAddress, owner, delta) {\n  //    return await this._transact('addMargin', [owner, delta], accountAddress)\n  //  }\n  //  async addSymbolId(accountAddress, symbolId) {\n  //    return await this._transact('addSymbolId', [symbolId], accountAddress)\n  //  }\n  //  async approve(accountAddress, operator, tokenId) {\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\n  //  }\n  //  async burn(accountAddress, owner) {\n  //    return await this._transact('burn', [owner], accountAddress)\n  //  }\n  //  async mint(accountAddress, owner) {\n  //    return await this._transact('mint', [owner], accountAddress)\n  //  }\n  //  async removeSymbolId(accountAddress, symbolId) {\n  //    return await this._transact('removeSymbolId', [symbolId], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  //  }\n  //  async setApprovalForAll(accountAddress, operator, approved) {\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  //  }\n  //  async setPool(accountAddress, newPool) {\n  //    return await this._transact('setPool', [newPool], accountAddress)\n  //  }\n  //  async toggleCloseOnly(accountAddress, symbolId) {\n  //    return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async updateMargin(accountAddress, owner, margin) {\n  //    return await this._transact('updateMargin', [owner, margin], accountAddress)\n  //  }\n  //  async updatePosition(accountAddress, owner, symbolId, position) {\n  //    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { contractFactory } from '../../shared/utils/index.js';\nimport {\n  perpetualPoolLiteAdapter,\n  lTokenLiteAdapter,\n  pTokenLiteAdapter,\n} from \"./adapter.js\";\n\nimport { PerpetualPoolLite } from './gen/PerpetualPoolLite.js';\nimport { LTokenLite } from './gen/LTokenLite.js';\nimport { PTokenLite } from './gen/PTokenLite.js';\n\n\nexport const perpetualPoolLiteDpmmFactory = contractFactory(\n  perpetualPoolLiteAdapter(PerpetualPoolLite)\n);\nexport const lTokenLiteFactory = contractFactory(lTokenLiteAdapter(LTokenLite));\nexport const pTokenLiteFactory = contractFactory(pTokenLiteAdapter(PTokenLite));\n","import { bg, max, min } from '../../shared/utils';\nimport { checkSymbolId } from '../../shared/utils/derijsnext';\nimport { contractFactory } from '../../shared/utils/index.js';\nimport { getIndexInfo, SECONDS_IN_A_DAY } from '../../shared/config';\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\nimport { calculateLiquidationPrice } from '../../v2/calculation';\nimport { calculateDpmmPrice } from '../calc';\nimport { perpetualPoolLiteDpmmFactory} from './factory';\nimport { liquidatePriceCache } from '../../shared/api/api_globals';\n\nexport class PoolApi{\n  constructor(chainId, poolAddress) {\n    this.chainId = chainId;\n    this.poolAddress = poolAddress;\n    this.pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n  }\n  async init(isEstimatedApi) {\n    await this.pool.init(isEstimatedApi);\n  }\n\n  // =================\n  //  api\n  // =================\n  async getLiquidityInfo(accountAddress) {\n    await this.init();\n    const pool = this.pool;\n    const lToken = pool.lToken;\n    const [liquidity, lTokenBalance, lTokenTotalSupply] = await Promise.all([\n      pool.getPoolLiquidity(),\n      lToken.balanceOf(accountAddress),\n      lToken.totalSupply(),\n    ]);\n    const { poolMarginRatio } = pool.parameters;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const poolDynamicEquity = await pool.getDynamicEquity();\n    const shareValue = bg(lTokenTotalSupply).eq(0)\n      ? '0'\n      : bg(poolDynamicEquity).div(lTokenTotalSupply).toString();\n\n    const value = pool.symbols.reduce((acc, s) => {\n      return acc.plus(\n        bg(s.tradersNetVolume).times(s.multiplier).times(s.dpmmPrice)\n      );\n    }, bg(0));\n    const removable = bg(poolDynamicEquity).minus(\n      bg(value).times(poolMarginRatio)\n    );\n    return {\n      totalSupply: lTokenTotalSupply,\n      poolLiquidity: liquidity,\n      shares: lTokenBalance,\n      shareValue,\n      maxRemovableShares: max(\n        min(\n          bg(lTokenBalance),\n          bg(shareValue).eq(0) ? '0' : removable.div(shareValue)\n        ),\n        bg(0)\n      ),\n    };\n  }\n\n  async getSpecification(symbolId) {\n    await this.init();\n    const pool = this.pool;\n\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbolInfo = pool.symbols[symbolIndex];\n\n    const { symbol, multiplier, feeRatio } = symbolInfo;\n    const parameterInfo = pool.parameters;\n    return {\n      symbol,\n      bTokenSymbol: pool.bTokenSymbol,\n      multiplier,\n      feeRatio,\n      fundingRateCoefficient: bg(1).div(pool.fundingPeriod).toString(),\n      minPoolMarginRatio: parameterInfo.poolMarginRatio,\n      minInitialMarginRatio: parameterInfo.initialMarginRatio,\n      minMaintenanceMarginRatio: parameterInfo.maintenanceMarginRatio,\n      minLiquidationReward: parameterInfo.minLiquidationReward,\n      maxLiquidationReward: parameterInfo.maxLiquidationReward,\n      liquidationCutRatio: parameterInfo.liquidationCutRatio,\n      protocolFeeCollectRatio: parameterInfo.protocolFeeCollectRatio,\n      indexConstituents: getIndexInfo(symbol),\n    };\n  }\n\n  async getPositionInfo(accountAddress, symbolId) {\n    await this.init();\n    const pool = this.pool;\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\n    const symbolIndex = pool.activeSymbolIds.indexOf(symbolId);\n    if (symbolIndex > -1) {\n      const oracleAddress =\n        pool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n          ? ''\n          : pool.symbols[symbolIndex].oracleAddress;\n      const [\n        symbols,\n        lastTimestamp,\n        margin,\n        fundingPeriod,\n        price,\n      ] = await Promise.all([\n        pool.getSymbols(),\n        pool.getLastTimestamp(),\n        pool.pToken.getMargin(accountAddress),\n        pool.getFundingPeriod(),\n        getOraclePriceFromCache2.get(\n          this.chainId,\n          pool.symbols[symbolIndex].symbol,\n          oracleAddress\n        ),\n      ]);\n\n      const positions = await pool.getPositions(accountAddress)\n\n      const symbol = symbols[symbolIndex];\n      const position = positions[symbolIndex];\n      // const { volume } = position\n      // const { multiplier, indexPrice } = symbol\n      const marginHeld = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(s.indexPrice)\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .times(initialMarginRatio)\n            .abs()\n        );\n      }, bg(0));\n      const marginHeldBySymbol = bg(position.volume)\n        .times(symbol.multiplier)\n        .times(symbol.indexPrice)\n        .times(initialMarginRatio)\n        .abs();\n\n      const unrealizedPnl = positions.reduce((acc, p) => {\n        return acc.plus(\n          bg(p.traderPnl)\n        );\n      }, bg(0));\n      const unrealizedPnlList = symbols.map((s, index) => {\n        return [s.symbol, positions[index].traderPnl];\n      });\n      const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\n      const dynamicCost = symbols.reduce((acc, s, index) => {\n        if (index !== parseInt(symbolId)) {\n          return acc.plus(\n            bg(positions[index].volume).times(s.dpmmPrice).times(s.multiplier)\n          );\n        } else {\n          return acc;\n        }\n      }, bg(0));\n      const fundingFee = bg(symbol.cumulativeFundingRate)\n        .minus(position.lastCumulativeFundingRate)\n        .plus(\n          bg(symbol.dpmmPrice)\n            .minus(symbol.indexPrice)\n            .times(symbol.multiplier)\n            .div(fundingPeriod)\n            .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\n        )\n        .times(position.volume)\n        .toString();\n\n      //console.log(position.volume, margin, totalCost.toString(), dynamicCost.toString(), symbol.multiplier, maintenanceMarginRatio)\n\n      // set liquidatePrice cache\n      liquidatePriceCache.set(this.poolAddress, {\n        volume: position.volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        price,\n        multiplier: symbol.multiplier,\n        minMaintenanceMarginRatio: maintenanceMarginRatio,\n      });\n\n      return {\n        symbol: symbol.symbol,\n        price: price,\n        markPrice: symbol.dpmmPrice.toString(),\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\n        averageEntryPrice: bg(position.volume).eq(0)\n          ? '0'\n          : bg(position.cost)\n              .div(position.volume)\n              .div(symbol.multiplier)\n              .toString(),\n        margin: margin,\n        marginHeld: marginHeld.toString(),\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\n        unrealizedPnl: unrealizedPnl.toString(),\n        unrealizedPnlList,\n        fundingFee,\n        liquidationPrice: calculateLiquidationPrice(\n          position.volume,\n          margin,\n          totalCost,\n          dynamicCost,\n          symbol.multiplier,\n          maintenanceMarginRatio\n        ).toString(),\n      };\n    }\n  }\n\n  async getPositionInfos(accountAddress) {\n    await this.init();\n    const pool = this.pool;\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\n    const [\n      symbols,\n      lastTimestamp,\n      margin,\n      fundingPeriod,\n    ] = await Promise.all([\n      pool.getSymbols(),\n      //pool.getPositions(accountAddress),\n      pool.getLastTimestamp(),\n      pool.pToken.getMargin(accountAddress),\n      pool.getFundingPeriod(),\n    ]);\n    const positions = await pool.getPositions(accountAddress)\n\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\n\n    return positions.map((p, index) => {\n      const symbolIndex = index;\n      const symbol = symbols[symbolIndex];\n      const position = positions[symbolIndex];\n      // const { volume } = position\n      // const { multiplier, indexPrice } = symbol\n      const marginHeld = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(s.indexPrice)\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .times(initialMarginRatio)\n            .abs()\n        );\n      }, bg(0));\n      const marginHeldBySymbol = bg(position.volume)\n        .times(symbol.multiplier)\n        .times(symbol.indexPrice)\n        .times(initialMarginRatio)\n        .abs();\n      const unrealizedPnl = p.traderPnl\n      const dynamicCost = symbols.reduce((acc, s, idx) => {\n        if (idx !== index) {\n          return acc.plus(\n            bg(positions[idx].volume).times(s.dpmmPrice).times(s.multiplier)\n          );\n        } else {\n          return acc;\n        }\n      }, bg(0));\n      const fundingFee = bg(symbol.cumulativeFundingRate)\n        .minus(position.lastCumulativeFundingRate)\n        .plus(\n          bg(symbol.dpmmPrice)\n            .minus(symbol.indexPrice)\n            .times(symbol.multiplier)\n            .div(fundingPeriod)\n            .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\n        )\n        .times(position.volume)\n        .toString();\n      return {\n        symbol: symbol.symbol,\n        symbolId: symbol.symbolId,\n        price: symbol.indexPrice,\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\n        averageEntryPrice: bg(position.volume).eq(0)\n          ? '0'\n          : bg(position.cost)\n              .div(position.volume)\n              .div(symbol.multiplier)\n              .toString(),\n        margin: margin,\n        marginHeld: marginHeld.toString(),\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\n        unrealizedPnl: unrealizedPnl.toString(),\n        fundingFee,\n        liquidationPrice: calculateLiquidationPrice(\n          position.volume,\n          margin,\n          totalCost,\n          dynamicCost,\n          symbol.multiplier,\n          maintenanceMarginRatio\n        ).toString(),\n      };\n    }).filter((p) => p.volume !== '0');\n  }\n\n  async getEstimatedMargin(accountAddress, volume, leverage, symbolId) {\n    await this.init(true);\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = pool.symbols[symbolIndex];\n    return bg(volume)\n      .abs()\n      .times(symbol.indexPrice)\n      .times(symbol.multiplier)\n      .div(leverage)\n      .toString();\n  }\n\n  async getEstimatedFee(volume, symbolId) {\n    await this.init(true);\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = pool.symbols[symbolIndex];\n    return bg(volume)\n      .abs()\n      .times(symbol.indexPrice)\n      .times(symbol.multiplier)\n      .times(symbol.feeRatio)\n      .toString();\n  }\n\n  async getFundingRate(symbolId) {\n    await this.init();\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = pool.symbols[symbolIndex];\n\n    const liquidity = pool.state.liquidity;\n    return {\n      funding0: bg(symbol.funding).div(symbol.multiplier).toString(),\n      fundingPerSecond: bg(symbol.fundingPerSecond)\n        .div(symbol.multiplier)\n        .toString(),\n      liquidity: liquidity,\n      volume: '-',\n      tradersNetVolume: bg(symbol.tradersNetVolume)\n        .times(symbol.multiplier)\n        .toString(),\n    };\n  }\n\n  async getEstimatedFundingRate(newVolume, symbolId) {\n    await this.init(true);\n    const pool = this.pool;\n\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = { ...pool.symbols[symbolIndex] };\n    symbol.dpmmPrice = calculateDpmmPrice(\n      symbol.indexPrice,\n      symbol.K,\n      bg(symbol.tradersNetVolume).plus(newVolume).toString(),\n      symbol.multiplier\n    ).toString();\n    symbol.fundingPerSecond = bg(symbol.dpmmPrice)\n      .minus(symbol.indexPrice)\n      //.times(symbol.multiplier)\n      .div(pool.fundingPeriod)\n      .toString();\n    return {\n      funding1: bg(symbol.fundingPerSecond).times(SECONDS_IN_A_DAY).toString(),\n    };\n  }\n\n  async getLiquidityUsed() {\n    await this.init();\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const { poolMarginRatio } = pool.parameters;\n    return pool.symbols\n      .reduce(\n        (acc, s) =>\n          acc.plus(\n            bg(s.tradersNetVolume)\n              .abs()\n              .times(s.indexPrice)\n              .times(s.multiplier)\n              .times(poolMarginRatio)\n          ),\n        bg(0)\n      )\n      .div(pool.state.liquidity)\n      .toString();\n  }\n\n  async getEstimatedLiquidityUsed(newVolume, symbolId) {\n    await this.init(true);\n    const pool = this.pool;\n\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n\n    const { poolMarginRatio } = pool.parameters;\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    //console.log(pool.symbols, poolMarginRatio, pool.state)\n    return pool.symbols\n      .reduce(\n        (acc, s, index) =>\n          index === symbolIndex\n            ? acc.plus(\n                bg(s.tradersNetVolume)\n                  .plus(newVolume)\n                  .abs()\n                  .times(s.indexPrice)\n                  .times(s.multiplier)\n                  .times(poolMarginRatio)\n              )\n            : acc.plus(\n                bg(s.tradersNetVolume)\n                  .abs()\n                  .times(s.indexPrice)\n                  .times(s.multiplier)\n                  .times(poolMarginRatio)\n              ),\n        bg(0)\n      )\n      .div(pool.state.liquidity)\n      .toString();\n  }\n\n  // =================\n  // static method\n  // =================\n}\n\nexport const poolApiFactory = contractFactory(PoolApi);\n","import { checkApiInput, checkApiInputWithoutAccount, checkSymbolId, checkTokenId } from '../../shared/utils/derijsnext';\nimport { catchApiError } from '../../shared/utils/api';\nimport { bg } from '../../shared/utils';\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory';\nimport { poolApiFactory } from '../contract/PoolApi';\nimport { calculateDpmmCost } from '../calc';\n\nexport const getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getLiquidityInfo(accountAddress);\n    },\n    args,\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n};\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(chainId, poolAddress);\n      symbolId = checkTokenId(symbolId)\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getSpecification(symbolId);\n    },\n    args,\n    'getSpecification',\n    {\n      symbol: '',\n      bTokenSymbol: '',\n      multiplier: '',\n      feeRatio: '',\n      fundingRateCoefficient: '',\n      minPoolMarginRatio: '',\n      minInitialMarginRatio: '',\n      minMaintenanceMarginRatio: '',\n      minLiquidationReward: '',\n      maxLiquidationReward: '',\n      liquidationCutRatio: '',\n      protocolFeeCollectRatio: '',\n      indexConstituents: { tokens: [], url: '' },\n    }\n  );\n};\n\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getPositionInfo(accountAddress, symbolId);\n    },\n    args,\n    'getPositionInfo',\n    {}\n  );\n}\n\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getPositionInfos(accountAddress);\n    },\n    args,\n    'getPositionInfos',\n    []\n  );\n}\n\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\n  const args =  [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress)\n      await pool.init()\n      return await pool.bToken.balanceOf(accountAddress)\n  }, args, 'getWalletBalance', '')\n}\n\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.bToken.isUnlocked(accountAddress, poolAddress);\n    },\n    args,\n    'isUnlocked',\n    false,\n  );\n}\n\nexport const getEstimatedMargin = async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\n  const args = [chainId, poolAddress,accountAddress, volume, leverage, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress,\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getEstimatedMargin(accountAddress, volume, leverage, symbolId);\n  }, args, 'getEstimatedMargin', '')\n}\n\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\n  const args = [chainId, poolAddress, volume, symbolId]\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getEstimatedFee(volume, symbolId);\n  }, args, 'getEstimatedFee', '')\n}\n\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getFundingRate(symbolId);\n    },\n    args,\n    'getFundingRate',\n    ''\n  );\n}\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newVolume, symbolId) => {\n  const args = [chainId, poolAddress, newVolume, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, newVolume, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getEstimatedFundingRate(newVolume, symbolId);\n    },\n    args,\n    'getEstimatedFundingRate',\n    ''\n  );\n}\n\nexport const getLiquidityUsed = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getLiquidityUsed(symbolId);\n    },\n    args,\n    'getLiquidityUsed',\n    ''\n  );\n}\n\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newVolume, symbolId) => {\n  const args = [chainId, poolAddress, newVolume, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, newVolume, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getEstimatedLiquidityUsed(newVolume, symbolId);\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    ''\n  );\n}\n\nexport const getEstimatedTimePrice = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress,\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      const pool = api.pool;\n      const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n      if (!pool.isSymbolsUpdated()) {\n        await pool.getSymbols();\n      }\n      const symbol = pool.symbols[symbolIndex];\n      //console.log('dpmmPrice', symbol.dpmmPrice.toString(), symbol.indexPrice)\n      const cost = calculateDpmmCost(\n        symbol.indexPrice,\n        symbol.K,\n        symbol.tradersNetVolume,\n        symbol.multiplier,\n        newNetVolume\n      );\n      return bg(cost).div(symbol.multiplier).div(newNetVolume).toString();\n    },\n    [],\n    'getEstimatedTimePrice',\n    ''\n  );\n};\n","import {\n  deriToNatural,\n  getBlockInfo,\n  getPastEvents,\n  getHttpBase,\n  fetchJson,\n  bg,\n} from '../../shared/utils';\nimport {\n  getPoolConfig,\n} from '../../shared/config';\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory';\n\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  //console.log('bTokenSymbol', bTokenSymbol)\n  const perpetualPool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n  await perpetualPool.init()\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  const filters = { account: accountAddress };\n  let events = await getPastEvents(\n    chainId,\n    perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  //events = events.filter((i) => i.returnValues.symbolId === symbolId);\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await perpetualPool.formatTradeEvent(item);\n    if (res) {\n      const symbolIndex = perpetualPool.activeSymbolIds.indexOf(res.symbolId);\n      result.unshift({\n        baseToken: perpetualPool.bTokenSymbol,\n        direction: res.direction,\n        volume: bg(res.volume)\n          .times(perpetualPool.symbols[symbolIndex].multiplier)\n          .toString(),\n        price: res.price,\n        indexPrice: res.indexPrice,\n        notional: res.notional,\n        symbol: res.symbol,\n        symbolId: res.symbolId,\n        time: res.time,\n        transactionFee: res.transactionFee,\n        transactionHash: res.transactionHash,\n      });\n    }\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock,\n      tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const perpetualPool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await perpetualPool.init()\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .map((i) => {\n          const symbolIndex = perpetualPool.activeSymbolIds.indexOf(i.symbolId)\n          if (symbolIndex > -1) {\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              volume: deriToNatural(i.volume).times(perpetualPool.symbols[symbolIndex].multiplier).toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else if (i.direction === 'LIQUIDATION') {\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken ? i.baseToken.trim() : '',\n              symbolId: i.symbolId ? i.symbolId : '',\n              symbol: i.symbol ? i.symbol : '',\n              price: i.price ? deriToNatural(i.price).toString() : '',\n              notional: i.notional ? deriToNatural(i.notional).toString() : '',\n              volume: i.volume ? deriToNatural(i.volume).times(perpetualPool.symbols[symbolIndex].multiplier).toString() : '',\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            }\n          } else {\n            return null\n          }\n        }).filter((i) => i != null)\n    }\n    //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      const { initialBlock } = getPoolConfig(poolAddress);\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch (err) {\n    console.log(\n      `getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`\n    );\n  }\n  return [];\n};\n","import { bg, catchTxApiError, checkAddress, checkApiInput, checkChainId, deriToNatural, MAX_INT256 } from \"../../shared\"\nimport { checkAmount } from \"../../shared/utils/derijsnext\";\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory.js'\n\n// mining\nexport const addLiquidity = async(...args) => {\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, amount) => {\n      chainId = checkChainId(chainId);\n      poolAddress = checkAddress(poolAddress);\n      accountAddress = checkAddress(accountAddress);\n      amount = checkAmount(amount)\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.addLiquidity(accountAddress, amount)\n  }, args )\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    amount = checkAmount(amount);\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.removeLiquidity(accountAddress, amount);\n  }, []);\n};\n\n//trading\nexport const unlock = async (...args) => {\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (...args) => {\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    amount = checkAmount(amount)\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.addMargin(accountAddress, amount);\n  }, args);\n};\n\nexport const withdrawMargin = async (...args) => {\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    amount = checkAmount(amount)\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.removeMargin(accountAddress, amount);\n  }, args);\n};\n\nexport const tradeWithMargin = async(...args) => {\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    newVolume = checkAmount(newVolume)\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.trade(accountAddress, symbolId, newVolume);\n  }, args)\n}\n\nexport const closePosition = async(...args) => {\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    const {volume} = await pool.pToken.getPosition(accountAddress, symbolId)\n    if (!bg(volume).eq(0)) {\n      const newVolume = bg(volume).negated().toString()\n      return await pool.trade(accountAddress, symbolId, newVolume);\n    } else {\n      throw new Error('no position to close')\n    }\n  }, args)\n}","import {\n  getPoolInfoApy,\n  getPoolLiquidity,\n} from '../../shared/api/database_api';\nimport {\n  getEstimatedFee,\n  getEstimatedFundingRate,\n  getEstimatedLiquidityUsed,\n  getEstimatedMargin,\n  getFundingRate,\n  getLiquidityInfo,\n  getLiquidityUsed,\n  getPositionInfo,\n  getPositionInfos,\n  getSpecification,\n  getWalletBalance,\n  isUnlocked,\n  getEstimatedTimePrice,\n} from './query_api';\nimport { getTradeHistory } from './trade_history_api';\nimport {\n  addLiquidity,\n  closePosition,\n  depositMargin,\n  removeLiquidity,\n  tradeWithMargin,\n  unlock,\n  withdrawMargin,\n} from './transaction_api';\n\nexport const api = {\n  // mining\n  getLiquidityInfo,\n  getPoolLiquidity,\n  getPoolInfoApy,\n  addLiquidity,\n  removeLiquidity,\n  // trading\n  getSpecification,\n  getPositionInfo,\n  getPositionInfos,\n  getWalletBalance,\n  isUnlocked,\n  getEstimatedFee,\n  getEstimatedMargin,\n  getFundingRate,\n  getEstimatedFundingRate,\n  getLiquidityUsed,\n  getEstimatedLiquidityUsed,\n  getEstimatedTimePrice,\n  getFundingRateCache: () => {},\n  unlock,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n  // tradeHistory\n  getTradeHistory,\n};\n","// this file is generated by script, don't modify it !!!\n// import { processMethod } from \"../../shared/utils/index.js\";\n\nimport { bg, toWei, fromWei, deriToNatural, processResult, getBlockInfo } from \"../../shared/utils/index.js\";\nimport { normalizeSymbolUnit, SECONDS_IN_A_DAY } from \"../../shared/config\";\n// import {\n//   processResult,\n// } from \"../../shared/utils/contract.js\";\n//import { range } from '../../shared/utils/lang.js'\nimport { bTokenOracle1Factory, ERC20Factory, offChainOracleFactory } from \"../../shared/contract/factory.js\";\nimport { lTokenFactory, perpetualPoolRouterDpmmFactory, pTokenFactory } from \"./factory.js\";\n\n\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\nimport { calculateDpmmCost, calculateDpmmPrice, calculateK } from \"../../v2_lite_dpmm/calc.js\";\n\nconst range = (n) => {\n  if (typeof n === 'string' && /^\\d+$/.test(n) ) {\n    n = parseInt(n)\n  }\n  return [...Array(n).keys()]\n}\n\nconst addMethods = (klass, fns = []) => {\n  if (fns.length > 0) {\n    for (let i = 0; i < fns.length; i++) {\n      klass = fns[i](klass);\n    }\n    return klass;\n  } else {\n    return klass;\n  }\n};\nconst overrideMethods = (klass, fns = []) => {\n  if (fns.length > 0) {\n    for (let i = 0; i < fns.length; i++) {\n      const fn = fns[i][0]\n      const args = fns[i].slice(1)\n      // console.log(fn, args)\n      klass = fn(klass)(...args);\n    }\n    return klass;\n  } else {\n    return klass;\n  }\n};\nconst processMethod = (klass) => (methodName, propList = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const res = await originMethod.apply(this, args);\n    return processResult(res, propList);\n  };\n  return klass;\n};\n\nconst processTxMethod = (klass) => (methodName, toWeiArgPositions = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    //const prices = await this._getSymbolPrices()\n    let newArgs = args.map((arg, index) =>\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\n    );\n    //newArgs.push(prices)\n    return await originMethod.apply(this, newArgs);\n  };\n  return klass;\n};\n\n\nconst init = (klass) => {\n  klass.prototype.init = async function (isEstimatedApi = false) {\n    await this._init();\n    if (!this.addresses || !this.parameters) {\n      [this.addresses, this.parameters, this.state, this.lengths] =\n        await Promise.all([\n          this.getAddresses(),\n          this.getParameters(),\n          this.getPoolStateValues(),\n          this.getLengths(),\n        ]);\n      this.fundingPeriod = (3 * 24 * 3600).toString();\n      const { pTokenAddress, lTokenAddress, routerAddress } = this.addresses;\n      this.lToken = lTokenFactory(this.chainId, lTokenAddress);\n      this.pToken = pTokenFactory(this.chainId, pTokenAddress);\n      this.router = perpetualPoolRouterDpmmFactory(this.chainId, routerAddress)\n    }\n    if (!isEstimatedApi) {\n      const lengths = await this.getLengths();\n      if (\n        !this.symbols ||\n        !this.bTokens ||\n        this.lengths.toString() !== lengths.toString()\n      ) {\n        this.bTokenIds = range(lengths[0]).map((i) => i.toString());\n        this.activeSymbolIds = range(lengths[1]).map((i) => i.toString());\n        this.bTokens = await Promise.all(\n          this.bTokenIds.reduce(\n            (acc, bTokenId) => [...acc, this.getBToken(bTokenId)],\n            []\n          )\n        );\n        // update bToken price\n        for (let i = 0; i < this.bTokenIds.length; i++) {\n          if (i === 0) {\n            this.bTokens[i].price = \"1\";\n          } else {\n            // this.bTokens[i].price = await offChainOracleFactory(\n            //   this.chainId,\n            //   this.bTokens[i].oracleAddress\n            // ).getPrice();\n            this.bTokens[i].price = await bTokenOracle1Factory(\n              this.chainId,\n              this.bTokens[i].oracleAddress\n            ).getPrice();\n          }\n          this.bTokens[i].equity = bg(this.bTokens[i].liquidity)\n            .times(this.bTokens[i].price)\n            .times(this.bTokens[i].discount)\n            .plus(this.bTokens[i].pnl)\n            .toString();\n        }\n        this.bTokenSymbols = await Promise.all(\n          this.bTokens.reduce(\n            (acc, bToken) => [\n              ...acc,\n              ERC20Factory(this.chainId, bToken.bTokenAddress).symbol(),\n            ],\n            []\n          )\n        );\n        this.symbols = await Promise.all(\n          this.activeSymbolIds.reduce(\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n            []\n          )\n        );\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\n\n        // init\n        this.positions = [];\n        this.userState = {};\n        this.offChainOracleSymbolIds = [];\n        this.offChainOracleSymbolNames = [];\n\n        await this.getLiquidity()\n      }\n    }\n  };\n  return klass;\n};\nconst getConfig = (klass) => {\n  klass.prototype.getConfig = async function () {\n    return {\n      pool: this.contractAddress,\n      pToken: this.addresses.pTokenAddress,\n      lToken: this.addresses.lTokenAddress,\n      router: this.addresses.routerAddress,\n      bTokenSymbols: this.bTokenSymbols,\n      bTokens: this.bTokens.map((b, index) => ({\n        bTokenId: index.toString(),\n        bTokenSymbol: this.bTokenSymbols[index].toUpperCase(),\n        bToken: b.bTokenAddress,\n      })),\n      symbols: this.symbols.map((s, index) => ({\n        symbolId: index.toString(),\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      initialBlock: this.initialBlock,\n      type: \"perpetual\",\n      version: 'v2',\n      versionId: \"v2_dpmm\",\n      chainId: this.chainId,\n    };\n  };\n  return klass;\n};\n\nconst getLiquidity = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype.getLiquidity = async function () {\n    await this._init()\n    const res = this.bTokens.reduce((acc, b) => acc.plus(b.equity), bg(0)).toString()\n    this.state = this.state || {}\n    this.state.liquidity = res\n    return res\n  }\n  return klass\n}\n\nexport const getLastTimestamp = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype.getLastTimestamp = async function () {\n    const res = await this._call('getPoolStateValues', []);\n      return res[0]\n    }\n  return klass\n}\nexport const getProtocolFeeAccrued = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype.getProtocolFeeAccrued = async function () {\n    const res = await this._call('getPoolStateValues', []);\n      return fromWei(res[1])\n    }\n  return klass\n}\n\n// getStateValues\nconst getStateValues = (klass) => {\n  klass.prototype.getStateValues = async function () {\n    const res = await this.getPoolStateValues()\n    // update\n    this.state= { ...this.state, ...res}\n    return this.state\n  }\n  return klass\n}\n\nconst getBTokens = (klass) => {\n  klass.prototype.getBTokens = async function (bTokenId) {\n    const bTokenIds = bTokenId ? [bTokenId] : this.bTokenIds\n    const bTokens = await Promise.all(\n      bTokenIds.reduce(\n        (acc, bTokenId) => [...acc, this.getBToken(bTokenId)],\n        []\n      )\n    );\n    // update bToken price\n    for (let i = 0; i < this.bTokenIds.length; i++) {\n      if (i === 0) {\n        bTokens[i].price = \"1\";\n      } else {\n        bTokens[i].price = await offChainOracleFactory(\n          this.chainId,\n          this.bTokens[i].oracleAddress\n        ).getPrice();\n      }\n      bTokens[i].equity = bg(this.bTokens[i].liquidity)\n        .times(this.bTokens[i].price)\n        .times(this.bTokens[i].discount)\n        .plus(this.bTokens[i].pnl)\n        .toString();\n    }\n\n    // update\n    if (bTokenId) {\n      const bTokenIndex = this.bTokenIds.indexOf(bTokenId)\n      if (bTokenIndex > -1) {\n        this.bTokens[bTokenIndex] = bTokens[0]\n      }\n    } else {\n      this.bTokens = bTokens\n    }\n    return bTokens\n  };\n  return klass\n};\n\n// getSymbols()\nconst getSymbols = (klass) => {\n  klass.prototype.getSymbols = async function (symbolId) {\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\n    const symbols = await Promise.all(\n      symbolIds.reduce(\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n        []\n      )\n    );\n\n    const indexPrices = await Promise.all(\n      symbols.map((s) => {\n        const oracleAddress = this.offChainOracleSymbolIds.includes(s.symbolId)\n          ? ''\n          : s.oracleAddress;\n        return getOraclePriceFromCache2.get(\n          this.chainId,\n          s.symbol,\n          oracleAddress\n        );\n      })\n    );\n    symbols.forEach((s, index) => {\n      s.indexPrice = indexPrices[index];\n      s.tradersNetPosition = bg(s.tradersNetVolume).times(s.multiplier).toString();\n      s.notional = bg(s.tradersNetPosition).abs().times(s.indexPrice).toString(),\n      s.K = calculateK(s.indexPrice, this.state.liquidity, s.alpha).toString();\n      s.dpmmPrice = calculateDpmmPrice(\n        s.indexPrice,\n        s.K,\n        s.tradersNetVolume,\n        s.multiplier\n      );\n\n      const pnl = calculateDpmmCost(\n        s.indexPrice,\n        s.K,\n        s.tradersNetVolume,\n        s.multiplier,\n        bg(s.tradersNetVolume).negated().toString()\n      )\n        .negated()\n        .minus(s.tradersNetCost);\n      const ratePerSecond = bg(s.dpmmPrice)\n        .minus(s.indexPrice)\n        .times(s.multiplier)\n        .div(this.fundingPeriod)\n        .toString();\n      const diff = bg(Math.floor(Date.now() / 1000)).minus(\n        this.state.lastTimestamp\n      );\n      s.fundingPerSecond = ratePerSecond\n      s.funding = bg(ratePerSecond).times(SECONDS_IN_A_DAY).toString()\n      s.pnl = pnl.toString()\n      s.undistributedPnl = bg(s.distributedUnrealizedPnl)\n        .minus(pnl)\n        .plus(bg(ratePerSecond).times(diff).times(s.tradersNetVolume))\n        .toString();\n    });\n\n    // update\n    if (symbolId) {\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\n      this.symbols[symbolIndex] = symbols[0]\n    } else {\n      this.symbols = symbols\n    }\n    \n    return symbols\n  };\n  return klass\n};\n\n// get traders positions\nconst getPositions = (klass) => {\n  klass.prototype.getPositions = async function (account, symbolId) {\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\n    const positions = await Promise.all(\n      symbolIds.reduce(\n        (acc, symbolId) => [...acc, this.pToken.getPosition(account, symbolId)],\n        []\n      )\n    );\n    const timeDiff = bg(Math.floor(Date.now() / 1000)).minus(\n      this.state.lastTimestamp\n    );\n    positions.forEach((p, index) => {\n      const symbol = this.symbols[index];\n      p.fundingAccrued = bg(p.volume)\n        .times(\n          bg(symbol.cumulativeFundingRate)\n            .plus(bg(timeDiff).times(this.symbols[index].fundingPerSecond))\n            .minus(p.lastCumulativeFundingRate)\n        )\n        .toString();\n      p.traderPnl = calculateDpmmCost(\n        symbol.indexPrice,\n        symbol.K,\n        symbol.tradersNetVolume,\n        symbol.multiplier,\n        bg(p.volume).negated().toString()\n      )\n        .negated()\n        .minus(p.cost).toString();\n\n      p.notional = bg(p.volume).abs().times(symbol.indexPrice).times(symbol.multiplier).toString()\n    });\n\n    // update\n    if (symbolId) {\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\n      if (symbolIndex > -1) {\n        this.positions[symbolIndex] = positions[0]\n      }\n    } else {\n      this.positions = positions\n    }\n\n    return positions\n  };\n  return klass\n};\n\nconst isBTokensUpdated = (klass) => {\n  klass.prototype.isBTokensUpdated = function() {\n    return Array.isArray(this.bTokens) && this.bTokens.length > 0 && this.bTokens[0].price != null\n  }\n  return klass\n}\nconst isSymbolsUpdated = (klass) => {\n  klass.prototype.isSymbolsUpdated = function() {\n    return Array.isArray(this.symbols) && this.symbols.length > 0 && this.symbols[0].indexPrice != null\n  }\n  return klass\n}\nconst isPositionsUpdated = (klass) => {\n  klass.prototype.isPositionsUpdated = function() {\n    return Array.isArray(this.positions) && this.positions.length > 0 && this.positions[0].fundingAccrued != null\n  }\n  return klass\n}\n\nconst getDynamicEquity = (klass) => {\n  klass.prototype['getDynamicEquity'] = async function() {\n    if (!this.isSymbolsUpdated()) {\n      await this.getSymbols();\n    }\n    //console.log(this.symbols)\n    const res = bg(this.state.liquidity)\n      .plus(\n        this.symbols.reduce((acc, s) => acc.plus(s.undistributedPnl), bg(0))\n      )\n      .toString();\n    this.state.dynamicEquity = res;\n    return res;\n  }\n  return klass\n}\n\nconst getTraderLiquidity = (klass) => {\n  klass.prototype[\"getTraderLiquidity\"] = async function(account) {\n    return await this.lToken.balanceOf(account)\n  }\n  return klass\n}\n\nconst getPoolRequiredMargin = (klass) => {\n  klass.prototype['getPoolRequiredMargin'] = async function () {\n    if (!this.isSymbolsUpdated()) {\n      await this.getSymbols()\n    }\n    const { minPoolMarginRatio } = this.parameters;\n    return this.symbols\n      .reduce(\n        (acc, s) =>\n          acc.plus(\n            bg(s.notional)\n          ),\n        bg(0)\n      )\n      .times(minPoolMarginRatio).toString()\n  };\n  return klass\n}\n\nconst getTraderMarginStatus = (klass) => {\n  klass.prototype['getTraderMarginStatus'] = async function (account) {\n    if (!this.isBTokensUpdated()) {\n      await this.getSymbols()\n    }\n    if (!this.isSymbolsUpdated()) {\n      await this.getSymbols()\n    }\n    if (!this.isPositionsUpdated()) {\n      await this.getPositions(account)\n    }\n    if (!this.userState.margins) {\n      this.userState.margins = await this.pToken.getMargins(account);\n    }\n\n    this.userState.totapPnl = this.positions.reduce((acc, p) => acc.plus(p.traderPnl), bg(0)).toString()\n    //this.userState.totalEquity = bg(this.userState.totalPnl).plus(this.userState.margins[0])\n    this.userState.totalEquity = this.userState.margins.reduce(\n      (acc, m, i) =>\n        acc.plus(\n          bg(m).times(this.bTokens[i].price).times(this.bTokens[i].discount)\n        ),\n      bg(this.userState.totalPnl)\n    );\n\n    this.userState.totalNotional = this.positions.reduce(\n      (acc, p) => acc.plus(p.notional),\n      bg(0)\n    );\n\n    return [this.userState.totalEquity, this.userState.totalNotional];\n  };\n  return klass\n}\n\nconst formatTradeEvent = (klass) => {\n  klass.prototype['formatTradeEvent'] = async function (event) {\n    const info = event.returnValues;\n    const tradeVolume = deriToNatural(info.tradeVolume);\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\n    const symbolId = info.symbolId;\n    const index = this.activeSymbolIds.indexOf(symbolId);\n    const symbol = this.symbols[index];\n    const tradeFee = info.tradeFee;\n\n    const direction =\n      tradeFee !== '-1'\n        ? bg(tradeVolume).gt(0)\n          ? 'LONG'\n          : 'SHORT'\n        : 'LIQUIDATION';\n    const price = bg(info.tradeCost)\n      .div(info.tradeVolume)\n      .div(symbol.multiplier)\n      .toString();\n    const notional = bg(tradeVolume)\n      .abs()\n      .times(price)\n      .times(symbol.multiplier)\n      .toString();\n\n    const res = {\n      symbolId: info.symbolId,\n      symbol: symbol.symbol,\n      trader: info.trader,\n      direction,\n      volume: bg(tradeVolume).abs().toString(),\n      price: price,\n      indexPrice: deriToNatural(info.indexPrice).toString(),\n      notional: notional,\n      transactionFee:\n        tradeFee === '-1' ? '0' : deriToNatural(tradeFee).toString(),\n      transactionHash: event.transactionHash,\n      time: block.timestamp * 1000,\n      extra: {},\n    };\n    return res;\n  };\n  return klass;\n};\n\n\nexport const perpetualPoolDpmmAdapter = (klass) => {\n    // klass = processMethod(klass, 'symbol', []);\n    klass = addMethods(klass, [\n        init,\n        getConfig,\n        getLiquidity,\n        getLastTimestamp,\n        getProtocolFeeAccrued,\n        getStateValues,\n        getBTokens,\n        getSymbols,\n        getPositions,\n        isBTokensUpdated,\n        isSymbolsUpdated,\n        isPositionsUpdated,\n        getDynamicEquity,\n        getTraderLiquidity,\n        getTraderMarginStatus,\n        getPoolRequiredMargin,\n        formatTradeEvent,\n    ])\n    klass = overrideMethods(klass, [\n      [\n        processMethod,\n        \"getParameters\",\n        [\n          \"initialMarginRatio\",\n          \"liquidationCutRatio\",\n          \"maintenanceMarginRatio\",\n          \"maxLiquidationReward\",\n          \"minBToken0Ratio\",\n          \"minPoolMarginRatio\",\n          \"protocolFeeCollectRatio\",\n        ],\n      ],\n      [\n        processMethod,\n        \"getBToken\",\n        [\"discount\", \"price\", \"liquidity\", \"pnl\", \"cumulativePnl\"],\n      ],\n      [\n        processMethod,\n        \"getSymbol\",\n        [\n          \"multiplier\",\n          \"feeRatio\",\n          //\"fundingRateCoefficient\",\n          \"alpha\",\n          \"distributedUnrealizedPnl\",\n          //\"price\",\n          \"cumulativeFundingRate\",\n          \"tradersNetVolume\",\n          \"tradersNetCost\",\n        ],\n      ],\n      [processMethod, \"getPoolStateValues\", [\"protocolFeeAccrued\"]],\n    ]);\n    return klass\n}\nexport const perpetualPoolRouterDpmmAdapter = (klass) => {\n  // klass = processMethod(klass, 'symbol', []);\n  klass = overrideMethods(klass, [\n    [processTxMethod, 'addLiquidity', ['2']],\n    //[processTxMethod, 'addLiquidityWithPrices', ['2']],\n    [processTxMethod, 'removeLiquidity', ['2']],\n    //[processTxMethod, 'removeLiquidityWithPrices', ['2']],\n    [processTxMethod, 'addMargin', ['2']],\n    //[processTxMethod, 'addMarginWithPrices', ['2']],\n    [processTxMethod, 'removeMargin', ['2']],\n    //[processTxMethod, 'removeMarginWithPrices', ['2']],\n    [processTxMethod, 'trade', ['2']],\n    //[processTxMethod, 'tradeWithPrices', ['2']],\n  ]);\n  return klass;\n};\n\nexport const lTokenAdapter = (klass) => {\n  // klass = processMethod(klass, 'symbol', []);\n  klass = overrideMethods(klass, [\n    [processMethod, 'getAsset', ['liquidity', 'pnl', 'lastCumulativePnl']],\n    [processMethod, 'getAssets', ['liquidity', 'pnl', 'lastCumulativePnl']],\n  ]);\n  return klass;\n};\n\nexport const pTokenAdapter = (klass) => {\n  klass = overrideMethods(klass, [\n    [processMethod, 'getMargins'],\n    [\n      processMethod,\n      'getPosition',\n      ['cost', 'volume', 'lastCumulativeFundingRate'],\n    ],\n    [\n      processMethod,\n      'getPositions',\n      ['cost', 'volume', 'lastCumulativeFundingRate'],\n    ],\n  ]);\n  return klass;\n};","// this file is generated by script, don't modify it !!!\nexport const lTokenAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"numBTokens_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"ApprovalForAll\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"liquidity\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"pnl\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"lastCumulativePnl\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdateAsset\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"exists\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getApproved\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getAsset\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct ILToken.Asset\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getAssets\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct ILToken.Asset[]\",\n                \"name\": \"\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getTokenId\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isApprovedForAll\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"numBTokens\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ownerOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bytes\",\n                \"name\": \"data\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"setApprovalForAll\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"num\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setNumBTokens\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes4\",\n                \"name\": \"interfaceId\",\n                \"type\": \"bytes4\"\n            }\n        ],\n        \"name\": \"supportsInterface\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalMinted\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct ILToken.Asset\",\n                \"name\": \"asset\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"updateAsset\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { lTokenAbi } from '../abi/lTokenAbi.js'\n\nexport class LToken extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, lTokenAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return deleteIndexedKey(res)\n  }\n  //  async exists(owner) {\n  //    const res = await this._call('exists', [owner])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async getApproved(tokenId) {\n  //    const res = await this._call('getApproved', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getAsset(owner, bTokenId) {\n    const res = await this._call('getAsset', [owner, bTokenId])\n    return deleteIndexedKey(res)\n  }\n  async getAssets(owner) {\n    const res = await this._call('getAssets', [owner])\n    return deleteIndexedKey(res)\n  }\n  //  async getTokenId(owner) {\n  //    const res = await this._call('getTokenId', [owner])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async isApprovedForAll(owner, operator) {\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async name() {\n  //    const res = await this._call('name', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async numBTokens() {\n  //    const res = await this._call('numBTokens', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async ownerOf(tokenId) {\n  //    const res = await this._call('ownerOf', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async pool() {\n  //    const res = await this._call('pool', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async supportsInterface(interfaceId) {\n  //    const res = await this._call('supportsInterface', [interfaceId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  //  async totalMinted() {\n  //    const res = await this._call('totalMinted', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async approve(accountAddress, operator, tokenId) {\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\n  //  }\n  //  async burn(accountAddress, owner) {\n  //    return await this._transact('burn', [owner], accountAddress)\n  //  }\n  //  async mint(accountAddress, owner) {\n  //    return await this._transact('mint', [owner], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  //  }\n  //  async setApprovalForAll(accountAddress, operator, approved) {\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  //  }\n  //  async setNumBTokens(accountAddress, num) {\n  //    return await this._transact('setNumBTokens', [num], accountAddress)\n  //  }\n  //  async setPool(accountAddress, newPool) {\n  //    return await this._transact('setPool', [newPool], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async updateAsset(accountAddress, owner, bTokenId, asset) {\n  //    return await this._transact('updateAsset', [owner, bTokenId, asset], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const pTokenAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"numSymbols_\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"numBTokens_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"ApprovalForAll\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"amount\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdateMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"volume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"cost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"lastCumulativeFundingRate\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdatePosition\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"exists\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getApproved\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getMargin\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getMargins\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256[]\",\n                \"name\": \"\",\n                \"type\": \"int256[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getPosition\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPToken.Position\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getPositions\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPToken.Position[]\",\n                \"name\": \"\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getTokenId\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isApprovedForAll\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"numBTokens\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"numSymbols\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ownerOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bytes\",\n                \"name\": \"data\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"setApprovalForAll\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"num\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setNumBTokens\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"num\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setNumSymbols\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes4\",\n                \"name\": \"interfaceId\",\n                \"type\": \"bytes4\"\n            }\n        ],\n        \"name\": \"supportsInterface\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalMinted\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"amount\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"updateMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"int256[]\",\n                \"name\": \"margins\",\n                \"type\": \"int256[]\"\n            }\n        ],\n        \"name\": \"updateMargins\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPToken.Position\",\n                \"name\": \"position\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"updatePosition\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { pTokenAbi } from '../abi/pTokenAbi.js'\n\nexport class PToken extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, pTokenAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return deleteIndexedKey(res)\n  }\n  async exists(owner) {\n    const res = await this._call('exists', [owner])\n    return deleteIndexedKey(res)\n  }\n  //  async getApproved(tokenId) {\n  //    const res = await this._call('getApproved', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getMargin(owner, bTokenId) {\n    const res = await this._call('getMargin', [owner, bTokenId])\n    return deleteIndexedKey(res)\n  }\n  async getMargins(owner) {\n    const res = await this._call('getMargins', [owner])\n    return deleteIndexedKey(res)\n  }\n  async getPosition(owner, symbolId) {\n    const res = await this._call('getPosition', [owner, symbolId])\n    return deleteIndexedKey(res)\n  }\n  async getPositions(owner) {\n    const res = await this._call('getPositions', [owner])\n    return deleteIndexedKey(res)\n  }\n  //  async getTokenId(owner) {\n  //    const res = await this._call('getTokenId', [owner])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async isApprovedForAll(owner, operator) {\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\n  //    return deleteIndexedKey(res)\n  //  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  async numBTokens() {\n    const res = await this._call('numBTokens', [])\n    return deleteIndexedKey(res)\n  }\n  async numSymbols() {\n    const res = await this._call('numSymbols', [])\n    return deleteIndexedKey(res)\n  }\n  //  async ownerOf(tokenId) {\n  //    const res = await this._call('ownerOf', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return deleteIndexedKey(res)\n  }\n  //  async supportsInterface(interfaceId) {\n  //    const res = await this._call('supportsInterface', [interfaceId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalMinted() {\n    const res = await this._call('totalMinted', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async approve(accountAddress, operator, tokenId) {\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\n  //  }\n  //  async burn(accountAddress, owner) {\n  //    return await this._transact('burn', [owner], accountAddress)\n  //  }\n  //  async mint(accountAddress, owner) {\n  //    return await this._transact('mint', [owner], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  //  }\n  //  async setApprovalForAll(accountAddress, operator, approved) {\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  //  }\n  //  async setNumBTokens(accountAddress, num) {\n  //    return await this._transact('setNumBTokens', [num], accountAddress)\n  //  }\n  //  async setNumSymbols(accountAddress, num) {\n  //    return await this._transact('setNumSymbols', [num], accountAddress)\n  //  }\n  //  async setPool(accountAddress, newPool) {\n  //    return await this._transact('setPool', [newPool], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async updateMargin(accountAddress, owner, bTokenId, amount) {\n  //    return await this._transact('updateMargin', [owner, bTokenId, amount], accountAddress)\n  //  }\n  //  async updateMargins(accountAddress, owner, margins) {\n  //    return await this._transact('updateMargins', [owner, margins], accountAddress)\n  //  }\n  //  async updatePosition(accountAddress, owner, symbolId, position) {\n  //    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const perpetualPoolAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256[9]\",\n                \"name\": \"parameters\",\n                \"type\": \"uint256[9]\"\n            },\n            {\n                \"internalType\": \"address[4]\",\n                \"name\": \"addresses\",\n                \"type\": \"address[4]\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AddLiquidity\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AddMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"liquidator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"reward\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Liquidate\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"collector\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ProtocolFeeCollection\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"RemoveLiquidity\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"RemoveMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"indexPrice\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeCost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeFee\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"Trade\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"bTokenAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"swapperAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"decimals\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"discount\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\n                \"name\": \"info\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"addBToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"string\",\n                        \"name\": \"symbol\",\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"multiplier\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"feeRatio\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"alpha\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"distributedUnrealizedPnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetVolume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetCost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\n                \"name\": \"info\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"addSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"approveBTokenForTargetPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"collectProtocolFee\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getAddresses\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"pTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"routerAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"protocolFeeCollector\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getBToken\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"bTokenAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"swapperAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"decimals\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"discount\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getLengths\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getParameters\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"decimals0\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"minBToken0Ratio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"minPoolMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"initialMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"maintenanceMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"minLiquidationReward\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"maxLiquidationReward\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"liquidationCutRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeCollectRatio\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPoolStateValues\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeAccrued\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getSymbol\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"string\",\n                        \"name\": \"symbol\",\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"multiplier\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"feeRatio\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"alpha\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"distributedUnrealizedPnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetVolume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetCost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getSymbolOracle\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"liquidator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sourcePool\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"balance\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"bTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"swapperAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"decimals\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"discount\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"liquidity\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"pnl\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"cumulativePnl\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"migrateBToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeAccrued\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"migratePoolStateValues\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"multiplier\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"alpha\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"distributedUnrealizedPnl\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradersNetVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradersNetCost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"cumulativeFundingRate\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"migrateSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"swapperAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"discount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setBTokenParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPoolForLTokenAndPToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setSymbolParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"trade\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { perpetualPoolAbi } from '../abi/perpetualPoolAbi.js'\n\nexport class PerpetualPool extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, perpetualPoolAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async getAddresses() {\n    const res = await this._call('getAddresses', [])\n    return deleteIndexedKey(res)\n  }\n  async getBToken(bTokenId) {\n    const res = await this._call('getBToken', [bTokenId])\n    return deleteIndexedKey(res)\n  }\n  async getLengths() {\n    const res = await this._call('getLengths', [])\n    return deleteIndexedKey(res)\n  }\n  async getParameters() {\n    const res = await this._call('getParameters', [])\n    return deleteIndexedKey(res)\n  }\n  async getPoolStateValues() {\n    const res = await this._call('getPoolStateValues', [])\n    return deleteIndexedKey(res)\n  }\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId])\n    return deleteIndexedKey(res)\n  }\n  //  async getSymbolOracle(symbolId) {\n  //    const res = await this._call('getSymbolOracle', [symbolId])\n  //    return deleteIndexedKey(res)\n  //  }\n\n  // tx\n  //  async addBToken(accountAddress, info) {\n  //    return await this._transact('addBToken', [info], accountAddress)\n  //  }\n  //  async addLiquidity(accountAddress, lp, bTokenId, bAmount) {\n  //    return await this._transact('addLiquidity', [lp, bTokenId, bAmount], accountAddress)\n  //  }\n  //  async addMargin(accountAddress, trader, bTokenId, bAmount) {\n  //    return await this._transact('addMargin', [trader, bTokenId, bAmount], accountAddress)\n  //  }\n  //  async addSymbol(accountAddress, info) {\n  //    return await this._transact('addSymbol', [info], accountAddress)\n  //  }\n  //  async approveBTokenForTargetPool(accountAddress, bTokenId, targetPool) {\n  //    return await this._transact('approveBTokenForTargetPool', [bTokenId, targetPool], accountAddress)\n  //  }\n  //  async collectProtocolFee(accountAddress) {\n  //    return await this._transact('collectProtocolFee', [], accountAddress)\n  //  }\n  //  async liquidate(accountAddress, liquidator, trader) {\n  //    return await this._transact('liquidate', [liquidator, trader], accountAddress)\n  //  }\n  //  async migrateBToken(accountAddress, sourcePool, balance, bTokenAddress, swapperAddress, oracleAddress, decimals, discount, liquidity, pnl, cumulativePnl) {\n  //    return await this._transact('migrateBToken', [sourcePool, balance, bTokenAddress, swapperAddress, oracleAddress, decimals, discount, liquidity, pnl, cumulativePnl], accountAddress)\n  //  }\n  //  async migratePoolStateValues(accountAddress, lastTimestamp, protocolFeeAccrued) {\n  //    return await this._transact('migratePoolStateValues', [lastTimestamp, protocolFeeAccrued], accountAddress)\n  //  }\n  //  async migrateSymbol(accountAddress, symbol, oracleAddress, multiplier, feeRatio, alpha, distributedUnrealizedPnl, tradersNetVolume, tradersNetCost, cumulativeFundingRate) {\n  //    return await this._transact('migrateSymbol', [symbol, oracleAddress, multiplier, feeRatio, alpha, distributedUnrealizedPnl, tradersNetVolume, tradersNetCost, cumulativeFundingRate], accountAddress)\n  //  }\n  //  async removeLiquidity(accountAddress, lp, bTokenId, bAmount) {\n  //    return await this._transact('removeLiquidity', [lp, bTokenId, bAmount], accountAddress)\n  //  }\n  //  async removeMargin(accountAddress, trader, bTokenId, bAmount) {\n  //    return await this._transact('removeMargin', [trader, bTokenId, bAmount], accountAddress)\n  //  }\n  //  async setBTokenParameters(accountAddress, bTokenId, swapperAddress, oracleAddress, discount) {\n  //    return await this._transact('setBTokenParameters', [bTokenId, swapperAddress, oracleAddress, discount], accountAddress)\n  //  }\n  //  async setPoolForLTokenAndPToken(accountAddress, targetPool) {\n  //    return await this._transact('setPoolForLTokenAndPToken', [targetPool], accountAddress)\n  //  }\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\n  //  }\n  //  async trade(accountAddress, trader, symbolId, tradeVolume) {\n  //    return await this._transact('trade', [trader, symbolId, tradeVolume], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const perpetualPoolRouterAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"pTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"liquidatorQualifierAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"oldController\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"newController\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ChangeController\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"migrationTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ExecuteMigration\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"migrationTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"PrepareMigration\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"bTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"swapperAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"discount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addBToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"addLiquidityWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"addMarginWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"multiplier\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"approveMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimNewController\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"controller\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sourceRouter\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"executeMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sourceRouter\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"executeMigrationWithTimestamp\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"pTokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"pTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"liquidateWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"liquidateWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"liquidatorQualifier\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"migrationDestination\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"migrationTimestamp\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"graceDays\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"prepareMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"removeLiquidityWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"removeMarginWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"swapperAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"discount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setBTokenParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"qualifierAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setLiquidatorQualifier\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newController\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setNewController\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"poolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setSymbolParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"trade\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"tradeWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { perpetualPoolRouterAbi } from '../abi/perpetualPoolRouterAbi.js'\n\nexport class PerpetualPoolRouter extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async controller() {\n    const res = await this._call('controller', [])\n    return deleteIndexedKey(res)\n  }\n  //  async liquidatorQualifier() {\n  //    const res = await this._call('liquidatorQualifier', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async migrationDestination() {\n  //    const res = await this._call('migrationDestination', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async migrationTimestamp() {\n  //    const res = await this._call('migrationTimestamp', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async addBToken(accountAddress, bTokenAddress, swapperAddress, oracleAddress, discount) {\n  //    return await this._transact('addBToken', [bTokenAddress, swapperAddress, oracleAddress, discount], accountAddress)\n  //  }\n  async addLiquidity(accountAddress, bTokenId, bAmount) {\n    return await this._transact('addLiquidity', [bTokenId, bAmount], accountAddress)\n  }\n  async addLiquidityWithPrices(accountAddress, bTokenId, bAmount, infos) {\n    return await this._transact('addLiquidityWithPrices', [bTokenId, bAmount, infos], accountAddress)\n  }\n  async addMargin(accountAddress, bTokenId, bAmount) {\n    return await this._transact('addMargin', [bTokenId, bAmount], accountAddress)\n  }\n  async addMarginWithPrices(accountAddress, bTokenId, bAmount, infos) {\n    return await this._transact('addMarginWithPrices', [bTokenId, bAmount, infos], accountAddress)\n  }\n  //  async addSymbol(accountAddress, symbol, oracleAddress, multiplier, feeRatio, alpha) {\n  //    return await this._transact('addSymbol', [symbol, oracleAddress, multiplier, feeRatio, alpha], accountAddress)\n  //  }\n  //  async approveMigration(accountAddress) {\n  //    return await this._transact('approveMigration', [], accountAddress)\n  //  }\n  //  async claimNewController(accountAddress) {\n  //    return await this._transact('claimNewController', [], accountAddress)\n  //  }\n  //  async executeMigration(accountAddress, sourceRouter) {\n  //    return await this._transact('executeMigration', [sourceRouter], accountAddress)\n  //  }\n  //  async executeMigrationWithTimestamp(accountAddress, sourceRouter, lastTimestamp) {\n  //    return await this._transact('executeMigrationWithTimestamp', [sourceRouter, lastTimestamp], accountAddress)\n  //  }\n  async liquidate(accountAddress, trader) {\n    return await this._transact('liquidate', [trader], accountAddress)\n  }\n  async liquidateWithPrices(accountAddress, trader, infos) {\n    return await this._transact('liquidateWithPrices', [trader, infos], accountAddress)\n  }\n  //  async prepareMigration(accountAddress, target, graceDays) {\n  //    return await this._transact('prepareMigration', [target, graceDays], accountAddress)\n  //  }\n  async removeLiquidity(accountAddress, bTokenId, bAmount) {\n    return await this._transact('removeLiquidity', [bTokenId, bAmount], accountAddress)\n  }\n  async removeLiquidityWithPrices(accountAddress, bTokenId, bAmount, infos) {\n    return await this._transact('removeLiquidityWithPrices', [bTokenId, bAmount, infos], accountAddress)\n  }\n  async removeMargin(accountAddress, bTokenId, bAmount) {\n    return await this._transact('removeMargin', [bTokenId, bAmount], accountAddress)\n  }\n  async removeMarginWithPrices(accountAddress, bTokenId, bAmount, infos) {\n    return await this._transact('removeMarginWithPrices', [bTokenId, bAmount, infos], accountAddress)\n  }\n  //  async setBTokenParameters(accountAddress, bTokenId, swapperAddress, oracleAddress, discount) {\n  //    return await this._transact('setBTokenParameters', [bTokenId, swapperAddress, oracleAddress, discount], accountAddress)\n  //  }\n  //  async setLiquidatorQualifier(accountAddress, qualifierAddress) {\n  //    return await this._transact('setLiquidatorQualifier', [qualifierAddress], accountAddress)\n  //  }\n  //  async setNewController(accountAddress, newController) {\n  //    return await this._transact('setNewController', [newController], accountAddress)\n  //  }\n  //  async setPool(accountAddress, poolAddress) {\n  //    return await this._transact('setPool', [poolAddress], accountAddress)\n  //  }\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\n  //  }\n  async trade(accountAddress, symbolId, tradeVolume) {\n    return await this._transact('trade', [symbolId, tradeVolume], accountAddress)\n  }\n  async tradeWithPrices(accountAddress, symbolId, tradeVolume, infos) {\n    return await this._transact('tradeWithPrices', [symbolId, tradeVolume, infos], accountAddress)\n  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { contractFactory } from '../../shared/utils/index.js';\nimport { perpetualPoolDpmmAdapter, perpetualPoolRouterDpmmAdapter, lTokenAdapter, pTokenAdapter } from './adapter.js';\n\nimport { LToken } from './gen/LToken.js';\nimport { PToken } from './gen/PToken.js';\nimport { PerpetualPool} from './gen/PerpetualPool';\nimport { PerpetualPoolRouter} from './gen/PerpetualPoolRouter';\n\nexport const lTokenFactory = contractFactory(lTokenAdapter(LToken));\nexport const pTokenFactory = contractFactory(pTokenAdapter(PToken));\n\n// dpmm\nexport const perpetualPoolDpmmFactory = contractFactory(perpetualPoolDpmmAdapter(PerpetualPool));\nexport const perpetualPoolRouterDpmmFactory = contractFactory(perpetualPoolRouterDpmmAdapter(PerpetualPoolRouter));\n","import { contractFactory } from \"../../activity/utils\"\nimport { bg, max, min } from \"../../shared\"\nimport { SECONDS_IN_A_DAY } from \"../../shared/config\";\nimport { getIndexInfo } from \"../../shared/config/token\"\nimport { checkSymbolId, getLiquidity } from \"../../shared/utils/derijsnext\"\nimport {\n  calculateLiquidationPrice,\n  calculateMaxRemovableLiquidity,\n} from '../../v2/calculation';\nimport { perpetualPoolDpmmFactory } from './factory';\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\nimport { calculateDpmmPrice } from \"../../v2_lite_dpmm/calc\";\nimport { ERC20Factory } from \"../../shared/contract/factory\";\nimport { liquidatePriceCache } from \"../../shared/api/api_globals\";\n\n// PoolApi \nexport class PoolApi {\n  constructor(chainId, poolAddress) {\n    this.chainId = chainId;\n    this.poolAddress = poolAddress;\n    this.pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n  }\n\n  async init(usedByEstimatedApi) {\n    await this.pool.init(usedByEstimatedApi);\n  }\n\n  // API\n  async getLiquidityInfo(accountAddress, bTokenId) {\n    const pool = this.pool;\n    const [lTokenAsset, bTokens, symbols] = await Promise.all([\n      pool.lToken.getAsset(accountAddress, bTokenId),\n      pool.getBTokens(),\n      pool.getSymbols(),\n    ]);\n    const { minPoolMarginRatio } = pool.parameters;\n    const bTokenIndex = pool.bTokenIds.indexOf(bTokenId.toString());\n    const { liquidity: poolLiquidity } = bTokens[bTokenIndex];\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\n    const cost = symbols.reduce((acc, s) => acc.plus(s.notional), bg(0));\n    const totalPnl = symbols.reduce((acc, s) => acc.plus(s.pnl), bg(0));\n\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\n      if (index === parseInt(bTokenId)) {\n        return accum.plus(b.pnl);\n      } else {\n        return accum.plus(\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n        );\n      }\n    }, bg(0));\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\n      bTokens[bTokenIndex],\n      liquidity,\n      cost,\n      totalPnl,\n      restLiquidity,\n      minPoolMarginRatio\n    ).toString();\n    const approximatePnl = bg(pnl)\n      .plus(\n        bg(bTokens[bTokenIndex].cumulativePnl)\n          .minus(lastCumulativePnl)\n          .times(liquidity)\n      )\n      .toString();\n\n    return {\n      poolLiquidity,\n      shares: liquidity,\n      maxRemovableShares,\n      pnl: approximatePnl,\n      bToken0Symbol: pool.bTokenSymbols[0],\n      swappedPnl: !!bTokens[bTokenIndex].price ? bg(approximatePnl).div(bTokens[bTokenIndex].price).toString() : '',\n    };\n  }\n\n  async getSpecification(symbolId) {\n    await this.init();\n    const pool = this.pool\n    const {\n      minPoolMarginRatio,\n      initialMarginRatio,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      maintenanceMarginRatio,\n      minBToken0Ratio,\n    } = pool.parameters;\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbolInfo = pool.symbols[symbolIndex];\n\n    const { symbol, multiplier, feeRatio } = symbolInfo;\n\n    return {\n      symbol,\n      bTokenSymbol: pool.bTokenSymbols,\n      bTokenMultiplier: pool.bTokens.map((b) => b.discount),\n      multiplier,\n      feeRatio,\n      fundingRateCoefficient: bg(1).div(pool.fundingPeriod).toString(),\n      minPoolMarginRatio,\n      minInitialMarginRatio: initialMarginRatio,\n      minMaintenanceMarginRatio: maintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n      indexConstituents: getIndexInfo(symbol),\n    };\n  }\n\n  async getPositionInfo(accountAddress, symbolId) {\n    const pool = this.pool;\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const oracleAddress =\n      pool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n        ? ''\n        : pool.symbols[symbolIndex].oracleAddress;\n    const [\n      bTokens,\n      symbols,\n      lastTimestamp,\n      margins,\n      price,\n    ] = await Promise.all([\n      pool.getBTokens(),\n      pool.getSymbols(),\n      pool.getLastTimestamp(),\n      pool.pToken.getMargins(accountAddress),\n      getOraclePriceFromCache2.get(\n        this.chainId,\n        pool.symbols[symbolIndex].symbol,\n        oracleAddress\n      ),\n    ]);\n    const positions = await pool.getPositions(accountAddress)\n\n    const symbol = symbols[symbolIndex];\n    const position = positions[symbolIndex];\n    // const { volume } = position\n    // const { multiplier, indexPrice } = symbol\n    const margin = bTokens\n      .reduce(\n        (acc, b, index) =>\n          acc.plus(bg(b.price).times(b.discount).times(margins[index])),\n        bg(0)\n      )\n      .toString();\n    const marginHeld = symbols.reduce((acc, s, index) => {\n      return acc.plus(\n        bg(s.indexPrice)\n          .times(s.multiplier)\n          .times(positions[index].volume)\n          .times(initialMarginRatio)\n          .abs()\n      );\n    }, bg(0));\n    const marginHeldBySymbol = bg(position.volume)\n      .times(symbol.multiplier)\n      .times(symbol.indexPrice)\n      .times(initialMarginRatio)\n      .abs();\n\n    const unrealizedPnl = positions.reduce(\n      (acc, p) => acc.plus(p.traderPnl),\n      bg(0)\n    );\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, positions[index].traderPnl];\n    });\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\n    const dynamicCost = symbols.reduce((acc, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return acc.plus(\n          bg(positions[index].volume).times(s.dpmmPrice).times(s.multiplier)\n        );\n      } else {\n        return acc;\n      }\n    }, bg(0));\n    const fundingFee = bg(symbol.cumulativeFundingRate)\n      .minus(position.lastCumulativeFundingRate)\n      .plus(\n        bg(symbol.dpmmPrice)\n          .minus(symbol.indexPrice)\n          .times(symbol.multiplier)\n          .div(pool.fundingPeriod)\n          .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\n      )\n      .times(position.volume)\n      .toString();\n\n    // set liquidatePrice cache\n    liquidatePriceCache.set(this.poolAddress, {\n      volume: position.volume,\n      margin,\n      totalCost,\n      dynamicCost,\n      price,\n      multiplier: symbol.multiplier,\n      minMaintenanceMarginRatio: maintenanceMarginRatio,\n    });\n\n    return {\n      symbol: symbol.symbol,\n      price: price,\n      markPrice: symbol.dpmmPrice.toString(),\n      volume: bg(position.volume).times(symbol.multiplier).toString(),\n      averageEntryPrice: bg(position.volume).eq(0)\n        ? '0'\n        : bg(position.cost)\n            .div(position.volume)\n            .div(symbol.multiplier)\n            .toString(),\n      margin: margin,\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      fundingFee,\n      liquidationPrice: calculateLiquidationPrice(\n        position.volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        symbol.multiplier,\n        maintenanceMarginRatio\n      ).toString(),\n    };\n  }\n\n  async getPositionInfos(accountAddress) {\n    const pool = this.pool;\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\n    const [\n      bTokens,\n      symbols,\n      lastTimestamp,\n      margins,\n    ] = await Promise.all([\n      pool.getBTokens(),\n      pool.getSymbols(),\n      //pool.getPositions(accountAddress),\n      pool.getLastTimestamp(),\n      pool.pToken.getMargins(accountAddress),\n    ]);\n    const positions = await pool.getPositions(accountAddress)\n\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\n\n    return positions\n      .map((p, index) => {\n        const symbolIndex = index;\n        const symbol = symbols[symbolIndex];\n        const position = positions[symbolIndex];\n        const margin = bTokens\n          .reduce(\n            (acc, b, index) =>\n              acc.plus(bg(b.price).times(b.discount).times(margins[index])),\n            bg(0)\n          )\n          .toString();\n        const marginHeld = symbols.reduce((acc, s, index) => {\n          return acc.plus(\n            bg(s.indexPrice)\n              .times(s.multiplier)\n              .times(positions[index].volume)\n              .times(initialMarginRatio)\n              .abs()\n          );\n        }, bg(0));\n        const marginHeldBySymbol = bg(position.volume)\n          .times(symbol.multiplier)\n          .times(symbol.indexPrice)\n          .times(initialMarginRatio)\n          .abs();\n        const unrealizedPnl = p.traderPnl\n        const dynamicCost = symbols.reduce((acc, s, idx) => {\n          if (idx !== index) {\n            return acc.plus(\n              bg(positions[idx].volume).times(s.dpmmPrice).times(s.multiplier)\n            );\n          } else {\n            return acc;\n          }\n        }, bg(0));\n        const fundingFee = bg(symbol.cumulativeFundingRate)\n          .minus(position.lastCumulativeFundingRate)\n          .plus(\n            bg(symbol.dpmmPrice)\n              .minus(symbol.indexPrice)\n              .times(symbol.multiplier)\n              .div(pool.fundingPeriod)\n              .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\n          )\n          .times(position.volume)\n          .toString();\n        return {\n          symbolId: symbolIndex.toString(),\n          symbol: symbol.symbol,\n          price: symbol.indexPrice,\n          volume: bg(position.volume).times(symbol.multiplier).toString(),\n          averageEntryPrice: bg(position.volume).eq(0)\n            ? '0'\n            : bg(position.cost)\n                .div(position.volume)\n                .div(symbol.multiplier)\n                .toString(),\n          margin: margin,\n          marginHeld: marginHeld.toString(),\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\n          unrealizedPnl: unrealizedPnl.toString(),\n          fundingFee,\n          liquidationPrice: calculateLiquidationPrice(\n            position.volume,\n            margin,\n            totalCost,\n            dynamicCost,\n            symbol.multiplier,\n            maintenanceMarginRatio\n          ).toString(),\n        };\n      })\n      .filter((p) => p.volume !== '0');\n  }\n\n  async getEstimatedMargin(accountAddress, volume, leverage, symbolId) {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const { multiplier, indexPrice } = pool.symbols[symbolIndex];\n    return bg(volume)\n      .abs()\n      .times(multiplier)\n      .times(indexPrice)\n      .div(leverage)\n      .toString();\n  }\n\n  async getEstimatedFee(volume, symbolId) {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const { multiplier, indexPrice, feeRatio } = pool.symbols[symbolIndex];\n    return bg(volume)\n      .abs()\n      .times(multiplier)\n      .times(indexPrice)\n      .times(feeRatio)\n      .toString();\n  }\n\n  async getFundingRate(symbolId) {\n    await this.init()\n    const pool = this.pool\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const {funding, fundingPerSecond, tradersNetVolume, multiplier } = pool.symbols[symbolIndex]\n    const liquidity = pool.state.liquidity\n    return {\n      funding0: bg(funding).div(multiplier).toString(),\n      fundingPerSecond: bg(fundingPerSecond).div(multiplier).toString(),\n      liquidity: liquidity,\n      volume: '-',\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\n    };\n  }\n\n\n  async getEstimatedFundingRate(newVolume, symbolId) {\n    const pool = this.pool\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = { ...pool.symbols[symbolIndex] };\n    symbol.dpmmPrice = calculateDpmmPrice(\n      symbol.indexPrice,\n      symbol.K,\n      bg(symbol.tradersNetVolume).plus(newVolume).toString(),\n      symbol.multiplier\n    ).toString();\n    symbol.fundingPerSecond = bg(symbol.dpmmPrice)\n      .minus(symbol.indexPrice)\n      //.times(symbol.multiplier)\n      .div(pool.fundingPeriod)\n      .toString();\n    return {\n      funding1: bg(symbol.fundingPerSecond).times(SECONDS_IN_A_DAY).toString(),\n    };\n  }\n\n  async getLiquidityUsed() {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const { minPoolMarginRatio } = pool.parameters;\n    return pool.symbols\n      .reduce(\n        (acc, s) =>\n          acc.plus(\n            bg(s.tradersNetVolume)\n              .abs()\n              .times(s.indexPrice)\n              .times(s.multiplier)\n              .times(minPoolMarginRatio)\n          ),\n        bg(0)\n      )\n      .div(pool.state.liquidity)\n      .toString();\n  }\n\n  async getEstimatedLiquidityUsed(newVolume, symbolId) {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n\n    const { minPoolMarginRatio } = pool.parameters;\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    //console.log(pool.symbols, poolMarginRatio, pool.stateValues)\n    return pool.symbols\n      .reduce(\n        (acc, s, index) =>\n          index === symbolIndex\n            ? acc.plus(\n                bg(s.tradersNetVolume)\n                  .plus(newVolume)\n                  .abs()\n                  .times(s.indexPrice)\n                  .times(s.multiplier)\n                  .times(minPoolMarginRatio)\n              )\n            : acc.plus(\n                bg(s.tradersNetVolume)\n                  .abs()\n                  .times(s.indexPrice)\n                  .times(s.multiplier)\n                  .times(minPoolMarginRatio)\n              ),\n        bg(0)\n      )\n      .div(pool.state.liquidity)\n      .toString();\n  }\n\n  async getPoolBTokensBySymbolId(accountAddress, symbolId) {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    if (!pool.isPositionsUpdated()) {\n      await pool.getPositions(accountAddress);\n    }\n    const { initialMarginRatio } = pool.parameters\n    const margins = await pool.pToken.getMargins(accountAddress);\n    const balances = await Promise.all(\n      pool.bTokens.reduce(\n        (acc, i) => [\n          ...acc,\n          ERC20Factory(this.chainId, i.bTokenAddress).balanceOf(accountAddress),\n        ],\n        []\n      )\n    );\n\n    const margin = pool.bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0)).toString()\n    const marginHeld = pool.symbols.reduce((acc, s, index) => {\n      return acc.plus(\n        bg(s.indexPrice)\n          .times(s.multiplier)\n          .times(pool.positions[index].volume)\n          .times(initialMarginRatio)\n          .abs()\n      );\n    }, bg(0)).toString();\n    const pnl = pool.positions.reduce((acc, p) => acc.plus(p.traderPnl), bg(0)).toString();\n\n    for (let i = 0; i < pool.bTokenIds.length; i++) {\n      const bToken = pool.bTokens[i]\n      bToken.walletBalance = balances[i]\n      bToken.availableBalance = max(\n        min(\n          bg(margin)\n            .minus(marginHeld)\n            .plus(pnl)\n            .div(pool.bTokens[i].price)\n            .div(pool.bTokens[i].discount),\n          bg(margins[i])\n        ),\n        bg(0)\n      ).toString();\n    }\n    return pool.bTokens.map((b, index) => {\n      return {\n        bTokenId: index.toString(),\n        bTokenAddress: b.bTokenAddress,\n        bTokenSymbol: pool.bTokenSymbols[index],\n        availableBalance: b.availableBalance,\n        walletBalance: b.walletBalance,\n      }\n    })\n  }\n\n  async getFundingFee(accountAddress, symbolId) {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    if (!pool.isPositionsUpdated()) {\n      await pool.getPositions(accountAddress);\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    return pool.positions[symbolIndex].fundingAccrued;\n  }\n}\n\n\n\n\nexport const poolApiFactory = contractFactory(PoolApi);","import { checkApiInput, checkApiInputWithoutAccount, checkSymbolId, checkTokenId } from '../../shared/utils/derijsnext';\nimport { catchApiError } from '../../shared/utils/api';\nimport { poolApiFactory } from '../contract/PoolApi';\nimport { ERC20Factory } from '../../shared/contract/factory';\nimport { calculateDpmmCost } from '../../v2_lite_dpmm/calc';\nimport { bg } from '../../shared';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      bTokenId = checkTokenId(bTokenId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getLiquidityInfo(accountAddress, bTokenId);\n    },\n    [],\n    'getLiquidityInfo',\n    {\n      maxRemovableShares: '',\n      pnl: '',\n      poolLiquidity: '',\n      shares: '',\n    }\n  );\n};\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getSpecification(symbolId);\n    },\n    [],\n    'getSpecification',\n    {\n      symbol: '',\n      bTokenSymbol: [],\n      bTokenMultiplier: [],\n      multiplier: '',\n      feeRatio: '',\n      fundingRateCoefficient: '',\n      minPoolMarginRatio: '',\n      minInitialMarginRatio: '',\n      minMaintenanceMarginRatio: '',\n      liquidationCutRatio: '',\n      protocolFeeCollectRatio: '',\n      indexConstituents: { tokens: [], url: '' },\n    }\n  );\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getPositionInfo(accountAddress, symbolId);\n    },\n    [],\n    'getPositionInfo',\n    {}\n  );\n};\n\nexport const getPositionInfos = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getPositionInfos(accountAddress);\n    },\n    [],\n    'getPositionInfos',\n    []\n  );\n};\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      bTokenId = checkTokenId(bTokenId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      const bTokenIndex = checkSymbolId(bTokenId, api.pool.bTokenIds);\n      const bTokenAddress = api.pool.bTokens[bTokenIndex].bTokenAddress;\n      const bToken = ERC20Factory(chainId, bTokenAddress);\n      return await bToken.balanceOf(accountAddress);\n    },\n    [],\n    'getWalletBalance',\n    ''\n  );\n};\n\nexport const isUnlocked = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      bTokenId = checkTokenId(bTokenId);\n      const bTokenAddress = api.pool.bTokens[parseInt(bTokenId)].bTokenAddress;\n      const bToken = ERC20Factory(chainId, bTokenAddress);\n      return await bToken.isUnlocked(accountAddress, poolAddress);\n    },\n    [],\n    'isUnlocked',\n    ''\n  );\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init(true);\n      return await api.getEstimatedMargin(accountAddress, volume, leverage, symbolId);\n    },\n    [],\n    'getEstimatedMargin',\n    ''\n  );\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId,\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress,\n      );\n      symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init(true);\n      return await api.getEstimatedFee(volume, symbolId);\n    },\n    [],\n    'getEstimatedFee',\n    ''\n  );\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getFundingRate(symbolId);\n    },\n    [],\n    'getFundingRate',\n    ''\n  );\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newVolume,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init(true);\n      return await api.getEstimatedFundingRate(newVolume, symbolId);\n    },\n    [],\n    'getFundingRate',\n    ''\n  );\n};\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getLiquidityUsed();\n    },\n    [],\n    'getLiquidityUsed',\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newVolume,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init(true);\n      return await api.getEstimatedLiquidityUsed(newVolume, symbolId);\n    },\n    [],\n    'getEstimatedLiquidityUsed',\n    ''\n  );\n};\n\nexport const getPoolBTokensBySymbolId = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      //symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getPoolBTokensBySymbolId(accountAddress, symbolId);\n    },\n    [],\n    'getPoolBTokensBySymbolId',\n    []\n  );\n};\n\n\nexport const getFundingFee = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getFundingFee(accountAddress, symbolId);\n    },\n    [],\n    'getFundingFee',\n    []\n  );\n};\n\nexport const getEstimatedTimePrice = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress,\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      const pool = api.pool;\n      const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n      if (!pool.isSymbolsUpdated()) {\n        await pool.getSymbols();\n      }\n      const symbol = pool.symbols[symbolIndex];\n      const cost = calculateDpmmCost(\n        symbol.indexPrice,\n        symbol.K,\n        symbol.tradersNetVolume,\n        symbol.multiplier,\n        newNetVolume\n      );\n      return bg(cost).div(symbol.multiplier).div(newNetVolume).toString();\n    },\n    [],\n    'getEstimatedTimePrice',\n    ''\n  );\n};\n","import { catchApiError } from '../../shared/utils/api';\n\nimport {\n  deriToNatural,\n  getBlockInfo,\n  getPastEvents,\n  getHttpBase,\n  fetchJson,\n  bg,\n} from '../../shared/utils';\nimport {\n  getPoolConfig,\n} from '../../shared/config';\nimport { perpetualPoolDpmmFactory, } from '../contract/factory';\n\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const perpetualPool = perpetualPoolDpmmFactory(chainId, poolAddress);\n  await perpetualPool.init()\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  const filters = { account: accountAddress };\n  let events = await getPastEvents(\n    chainId,\n    perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  //events = events.filter((i) => i.returnValues.symbolId === symbolId);\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await perpetualPool.formatTradeEvent(item);\n    if (res) {\n      const symbolIndex = perpetualPool.activeSymbolIds.indexOf(res.symbolId);\n      result.unshift({\n        baseToken: '',\n        direction: res.direction,\n        volume: bg(res.volume)\n          .times(perpetualPool.symbols[symbolIndex].multiplier)\n          .toString(),\n        price: res.price,\n        indexPrice: res.indexPrice,\n        notional: res.notional,\n        symbol: res.symbol,\n        symbolId: res.symbolId,\n        time: res.time,\n        transactionFee: res.transactionFee,\n        transactionHash: res.transactionHash,\n      });\n    }\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock,\n      tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const perpetualPool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await perpetualPool.init()\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .map((i) => {\n          const symbolIndex = perpetualPool.activeSymbolIds.indexOf(i.symbolId)\n          if (symbolIndex > -1) {\n            return {\n              direction: i.direction.trim(),\n              baseToken: '',\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              volume: deriToNatural(i.volume).times(perpetualPool.symbols[symbolIndex].multiplier).toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else if (i.direction === 'LIQUIDATION') {\n            return {\n              direction: i.direction.trim(),\n              baseToken: '',\n              symbolId: i.symbolId ? i.symbolId : '',\n              symbol: i.symbol ? i.symbol : '',\n              price: i.price ? deriToNatural(i.price).toString() : '',\n              notional: i.notional ? deriToNatural(i.notional).toString() : '',\n              volume: i.volume ? deriToNatural(i.volume).times(perpetualPool.symbols[symbolIndex].multiplier).toString() : '',\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            }\n          } else {\n            return null\n          }\n        }).filter((i) => i != null)\n    }\n    //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      const { initialBlock } = getPoolConfig(poolAddress);\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch (err) {\n    console.log(\n      `getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`\n    );\n  }\n  return [];\n};\n","import {\n  getPoolInfoApy,\n  getPoolLiquidity,\n} from '../../v2/api/mining_query_api';\nimport {\n  getEstimatedFee,\n  getEstimatedFundingRate,\n  getEstimatedLiquidityUsed,\n  getEstimatedMargin,\n  getFundingRate,\n  getLiquidityInfo,\n  getLiquidityUsed,\n  getPositionInfo,\n  getPositionInfos,\n  getSpecification,\n  getWalletBalance,\n  isUnlocked,\n  getPoolBTokensBySymbolId,\n  getFundingFee,\n  getEstimatedTimePrice,\n} from './query_api';\nimport { getTradeHistory } from './trade_history_api';\nimport {\n  addLiquidity,\n  closePosition,\n  depositMargin,\n  removeLiquidity,\n  tradeWithMargin,\n  unlock,\n  withdrawMargin,\n} from './transaction_api';\n\nexport const api = {\n  // mining\n  getLiquidityInfo,\n  getPoolLiquidity,\n  getPoolInfoApy,\n  addLiquidity,\n  removeLiquidity,\n  // trading\n  getSpecification,\n  getPositionInfo,\n  getPositionInfos,\n  getWalletBalance,\n  isUnlocked,\n  getEstimatedFee,\n  getEstimatedMargin,\n  getFundingRate,\n  getEstimatedFundingRate,\n  getLiquidityUsed,\n  getEstimatedLiquidityUsed,\n  getEstimatedTimePrice,\n  getFundingRateCache: () => {},\n  unlock,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n  // tradeHistory\n  getTradeHistory,\n  // extra for v2\n  getPoolBTokensBySymbolId,\n  getFundingFee,\n};\n","import {\n  bg,\n  checkApiInput,\n  deriToNatural,\n  MAX_INT256,\n} from '../../shared';\nimport { ERC20Factory } from '../../shared/contract/factory';\nimport { catchTxApiError } from '../../shared/utils/api';\nimport { checkAmount, checkSymbolId, checkTokenId } from '../../shared/utils/derijsnext';\nimport { perpetualPoolDpmmFactory } from '../contract/factory.js';\n\n// mining\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    amount = checkAmount(amount);\n    bTokenId = checkTokenId(bTokenId);\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.router.addLiquidity(accountAddress, bTokenId, amount);\n  }, []);\n};\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    amount = checkAmount(amount);\n    bTokenId = checkTokenId(bTokenId);\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    if (isMaximum) {\n      amount = deriToNatural(MAX_INT256).toString()\n    }\n    return await pool.router.removeLiquidity(accountAddress, bTokenId, amount);\n  }, []);\n};\n\n//trading\nexport const unlock = async (chainId, poolAddress, accountAddress, bTokenId) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    bTokenId = checkTokenId(bTokenId)\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    const bTokenIndex = checkSymbolId(bTokenId, pool.bTokenIds)\n    const bTokenAddress = pool.bTokens[bTokenIndex].bTokenAddress;\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  }, []);\n};\n\nexport const depositMargin = async (chainId, poolAddress, accountAddress, amount, bTokenId) => {\n  return catchTxApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      amount = checkAmount(amount)\n      bTokenId = checkTokenId(bTokenId)\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.router.addMargin(accountAddress, bTokenId, amount);\n    },\n    []\n  );\n};\n\nexport const withdrawMargin = async (chainId, poolAddress, accountAddress, amount, bTokenId) => {\n  return catchTxApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      amount = checkAmount(amount)\n      bTokenId = checkTokenId(bTokenId)\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.router.removeMargin(accountAddress, bTokenId, amount);\n    },\n    []\n  );\n};\n\nexport const tradeWithMargin = async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n  return catchTxApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      newVolume = checkAmount(newVolume)\n      symbolId = checkTokenId(symbolId)\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.router.trade(accountAddress, symbolId, newVolume);\n    },\n    []\n  );\n};\n\nexport const closePosition = async (chainId, poolAddress, accountAddress, symbolId) => {\n  return catchTxApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      const { volume } = await pool.pToken.getPosition(\n        accountAddress,\n        symbolId\n      );\n      if (!bg(volume).eq(0)) {\n        const newVolume = bg(volume).negated().toString();\n        return await pool.router.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    []\n  );\n};\n","//import { getLiquidityInfo2 } from '../v1/api/rest_api';\nimport {\n  getPoolVersionId,\n  LITE_VERSIONS,\n} from '../shared/config';\nimport {\n  getPoolLiquidity as getPoolLiquidity1,\n  getPoolInfoApy as getPoolInfoApy1,\n} from '../shared/api/database_api';\nimport { getLiquidityInfo2 } from '../v1/api';\nimport {\n  getLiquidityInfoV2,\n  getPoolInfoApyV2,\n  getPoolLiquidityV2,\n} from '../v2/api';\nimport {\n  getLiquidityInfoV2l,\n} from '../v2_lite/api';\nimport {\n  getLiquidityInfoOption,\n} from '../option/api';\n\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(versionId)) {\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\n  } else if (versionId === 'option') {\n    return getLiquidityInfoOption(chainId, poolAddress, accountAddress)\n  } else if (versionId === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getLiquidityInfo(chainId, poolAddress, accountAddress)\n  } else if (versionId === 'v2_dpmm') {\n    return apiV2Dpmm.getLiquidityInfo(chainId, poolAddress, accountAddress, bTokenId)\n  }\n  if (bTokenId === undefined) {\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n};\n\nexport const getPoolLiquidity = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n) => {\n  if (bTokenId != null) {\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\n  } else {\n    return getPoolLiquidity1(chainId, poolAddress)\n  }\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  if (bTokenId != null) {\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\n  } else {\n    return getPoolInfoApy1(chainId, poolAddress)\n  }\n};\n","//import {addLiquidity2, removeLiquidity2 } from '../v1/api/contract_transaction_api_v2';\nimport { getPoolVersionId, LITE_VERSIONS } from '../shared'\nimport { addLiquidity2, removeLiquidity2 } from '../v1/api';\nimport { addLiquidityV2, removeLiquidityV2 } from '../v2/api';\nimport { addLiquidityV2l, removeLiquidityV2l } from '../v2_lite/api';\nimport { addLiquidityOption, removeLiquidityOption } from '../option/api';\n\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(versionId)) {\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\n  } else if (versionId === 'option') {\n    return addLiquidityOption(chainId, poolAddress, accountAddress, amount);\n  } else if (versionId === 'v2_lite_dpmm') {\n    return apiV2lDpmm.addLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (versionId === 'v2_dpmm') {\n    return apiV2Dpmm.addLiquidity(chainId, poolAddress, accountAddress, amount, bTokenId);\n  }\n  if (bTokenId === undefined) {\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return addLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum,\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\n  } else if (version === 'option') {\n    return removeLiquidityOption(chainId, poolAddress, accountAddress, amount, isMaximum)\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.removeLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.removeLiquidity(chainId, poolAddress, accountAddress, amount, bTokenId);\n  }\n  if (bTokenId === undefined) {\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return removeLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum,\n    );\n  }\n}\n","import { catchTxApiError } from '../../shared/utils';\nimport { everlastingOptionFactory } from '../factory/pool.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    return await optionPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    return await optionPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import { getPriceInfo } from '../../shared/utils/oracle';\nimport {\n  getPoolBTokenIdList,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport {\n  perpetualPoolRouterFactory,\n  perpetualPoolFactory,\n  lTokenFactory,\n} from '../factory';\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../calculation';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\n  const validation = isBToken0RatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    minBToken0Ratio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.addLiquidity(\n        accountAddress,\n        bTokenId,\n        amount\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\n  const { liquidity: userLiquidity } = lTokenAsset;\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\n  const validation = isPoolMarginRatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    userLiquidity,\n    symbols,\n    minPoolMarginRatio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.removeLiquidity(\n        accountAddress,\n        bTokenId,\n        amount,\n        isMaximum\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const addLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\n  const validation = isBToken0RatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    minBToken0Ratio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(\n        accountAddress,\n        bTokenId,\n        amount,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const removeLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\n  const { liquidity: userLiquidity } = lTokenAsset;\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  promises = [];\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\n\n  const validation = isPoolMarginRatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    userLiquidity,\n    symbols,\n    minPoolMarginRatio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.removeLiquidityWithPrices(\n        accountAddress,\n        bTokenId,\n        amount,\n        priceInfos,\n        isMaximum\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n","import {\n  getEstimatedFundingRateOption,\n  getFundingRateCacheOption,\n  getFundingRateOption,\n  getLiquidityUsedOption,\n  getPositionInfoOption,\n  getPositionInfosOption,\n  getSpecificationOption,\n  getWalletBalanceOption,\n  getEstimatedFeeOption,\n  getEstimatedMarginOption,\n  getEstimatedLiquidityUsedOption,\n  getEstimatedTimePriceOption,\n  isUnlockedOption,\n} from '../option/api';\nimport { getPoolVersionId, isDeriUnlocked, LITE_VERSIONS } from '../shared';\nimport {\n  getPositionInfo2,\n  isUnlocked2,\n  getEstimatedMargin2,\n  getEstimatedFee2,\n  getEstimatedFundingRate2,\n  getEstimatedLiquidityUsed2,\n  getWalletBalance2,\n  getSpecification2,\n  getFundingRate2,\n  getLiquidityUsed2,\n  getFundingRateCache2,\n} from '../v1/api';\n\nimport {\n  getPositionInfoV2,\n  getPositionInfosV2,\n  isUnlockedV2,\n  getEstimatedMarginV2,\n  getEstimatedFeeV2,\n  getEstimatedFundingRateV2,\n  getEstimatedLiquidityUsedV2,\n  getSpecificationV2,\n  getWalletBalanceV2,\n  getFundingRateV2,\n  getLiquidityUsedV2,\n  getFundingRateCacheV2,\n  getEstimatedLiquidatePriceV2,\n  getPoolBTokensBySymbolId as getPoolBTokensBySymbolIdV2\n} from '../v2/api';\n\nimport {\n  getPositionInfoV2l,\n  getPositionInfosV2l,\n  isUnlockedV2l,\n  getEstimatedMarginV2l,\n  getEstimatedFeeV2l,\n  getEstimatedFundingRateV2l,\n  getEstimatedLiquidityUsedV2l,\n  getSpecificationV2l,\n  getWalletBalanceV2l,\n  getFundingRateV2l,\n  getLiquidityUsedV2l,\n  getFundingRateCacheV2l,\n} from '../v2_lite/api';\n\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getSpecificationV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getSpecificationOption(chainId, poolAddress, symbolId);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getSpecification(chainId, poolAddress, symbolId);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getSpecification(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getSpecification2(chainId, poolAddress);\n  } else {\n    return getSpecificationV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return getPositionInfoOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId\n    );\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getPositionInfo(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getPositionInfo(chainId, poolAddress, accountAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getPositionInfo2(chainId, poolAddress, accountAddress);\n  } else {\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\n  const version = getPoolVersionId(poolAddress);\n  if (LITE_VERSIONS.includes(version)) {\n    return getPositionInfosV2l(chainId, poolAddress, accountAddress)\n  } else if (version === 'option') {\n    return getPositionInfosOption(chainId, poolAddress, accountAddress)\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getPositionInfos(chainId, poolAddress, accountAddress);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getPositionInfos(chainId, poolAddress, accountAddress);\n  } else if (version === 'v1') {\n    return [\n      await getPositionInfo2(chainId, poolAddress, accountAddress),\n    ].filter((p) => p.volume !== '0');\n  } else if (version === 'v2') {\n    return getPositionInfosV2(chainId, poolAddress, accountAddress)\n  } else {\n    // return empty array for v1, v2, v2_lite\n    return []\n  }\n}\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return getWalletBalanceOption(chainId, poolAddress, accountAddress);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getWalletBalance(chainId, poolAddress, accountAddress, bTokenId);\n  }\n  if (bTokenId === undefined) {\n    return getWalletBalance2(chainId, poolAddress, accountAddress);\n  } else {\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const isUnlocked = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return isUnlockedV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return isUnlockedOption(chainId, poolAddress, accountAddress);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.isUnlocked(chainId, poolAddress, accountAddress);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.isUnlocked(chainId, poolAddress, accountAddress, bTokenId);\n  }\n  if (accountAddress === undefined) {\n    return isDeriUnlocked(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return isUnlocked2(chainId, poolAddress, accountAddress);\n  } else {\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const getEstimatedLiquidatePrice = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\n  } else if (version === 'option') {\n    // place holder\n    return ''\n  }\n  if (symbolId === undefined) {\n    // place holder\n    return ''\n  } else {\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\n  }\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId);\n  } else if (version === 'option') {\n    return getEstimatedFeeOption(chainId, poolAddress, volume, symbolId);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getEstimatedFee(chainId, poolAddress, volume, symbolId);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getEstimatedFee(chainId, poolAddress, volume, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFee2(chainId, poolAddress, volume);\n  } else {\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId);\n  }\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getEstimatedMargin(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getEstimatedMargin(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedMargin2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage\n    );\n  } else {\n    return getEstimatedMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  }\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getFundingRateV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getFundingRateOption(chainId, poolAddress, symbolId);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getFundingRate(chainId, poolAddress, symbolId);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getFundingRate(\n      chainId,\n      poolAddress,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getFundingRate2(chainId, poolAddress);\n  } else {\n    return getFundingRateV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedFundingRateV2l(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedFundingRateOption(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getEstimatedFundingRate(chainId, poolAddress, newNetVolume, symbolId);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getEstimatedFundingRate(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume);\n  } else {\n    return getEstimatedFundingRateV2(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getLiquidityUsedOption(chainId, poolAddress, symbolId);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getLiquidityUsed(chainId, poolAddress, symbolId);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getLiquidityUsed(\n      chainId,\n      poolAddress,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getLiquidityUsed2(chainId, poolAddress);\n  } else {\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedLiquidityUsedV2l(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedLiquidityUsedOption(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getEstimatedLiquidityUsed(chainId, poolAddress, newNetVolume, symbolId);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getEstimatedLiquidityUsed(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume);\n  } else {\n    return getEstimatedLiquidityUsedV2(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n};\n\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getFundingRateCacheOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getFundingRateCache2(chainId, poolAddress);\n  } else {\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getPoolBTokensBySymbolId = async (chainId, poolAddress, accountAddress) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (['v2', 'v2_dpmm'].includes(versionId)) {\n    if (versionId === 'v2') {\n      return await getPoolBTokensBySymbolIdV2(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n    } else {\n      return await apiV2Dpmm.getPoolBTokensBySymbolId(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n    }\n  } else {\n    return []\n  }\n}\n\nexport const getEstimatedTimePrice = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n  ) => {\n  const version = getPoolVersionId(poolAddress)\n  if (version === 'option') {\n    return getEstimatedTimePriceOption(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getEstimatedTimePrice(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getEstimatedTimePrice(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else {\n    return '';\n  }\n};","import { closePositionOption, depositMarginOption, tradeWithMarginOption, unlockOption, withdrawMarginOption } from '../option/api';\nimport { getPoolVersionId, LITE_VERSIONS, unlockDeri } from '../shared';\nimport {\n  unlock2,\n  tradeWithMargin2,\n  closePosition2,\n  depositMargin2,\n  withdrawMargin2,\n} from '../v1/api';\nimport {\n  unlockV2,\n  tradeWithMarginV2,\n  closePositionV2,\n  depositMarginV2,\n  withdrawMarginV2,\n} from '../v2/api';\nimport {\n  unlockV2l,\n  tradeWithMarginV2l,\n  closePositionV2l,\n  depositMarginV2l,\n  withdrawMarginV2l,\n} from '../v2_lite/api';\n\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return unlockV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return unlockOption(chainId, poolAddress, accountAddress);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.unlock(chainId, poolAddress, accountAddress);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.unlock(chainId, poolAddress, accountAddress, bTokenId);\n  }\n  if (accountAddress === undefined) {\n    return unlockDeri(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return unlock2(chainId, poolAddress, accountAddress);\n  } else {\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount);\n  } else if (version === 'option') {\n    return depositMarginOption(chainId, poolAddress, accountAddress, amount);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.depositMargin(chainId, poolAddress, accountAddress, amount);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.depositMargin(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n  if (bTokenId === undefined) {\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return depositMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return withdrawMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      isMaximum\n    );\n  } else if (version === 'option') {\n    return withdrawMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      isMaximum\n    );\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.withdrawMargin(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.withdrawMargin(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n    );\n  }\n  if (bTokenId === undefined) {\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return withdrawMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum\n    );\n  }\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return tradeWithMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return tradeWithMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.tradeWithMargin(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    )\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.tradeWithMargin(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\n  } else {\n    return tradeWithMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return closePositionOption(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.closePosition(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.closePosition(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId,\n    );\n  }\n  if (symbolId === undefined) {\n    return closePosition2(chainId, poolAddress, accountAddress);\n  } else {\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","import { getPoolConfig } from '../../shared/config';\nimport { bTokenFactory } from '../../shared/factory';\nimport { catchTxApiError, bg } from '../../shared/utils';\n//import { isOrderValid } from '../../v2/calculation';\nimport { everlastingOptionFactory } from '../factory/pool.js';\nimport { pTokenOptionFactory} from '../factory/tokens';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const { bToken: bTokenAddress } = getPoolConfig(\n      poolAddress,\n      '0',\n      '0',\n      'option'\n    );\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      return await optionPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      return await optionPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'option'\n      // );\n      // const pToken = pTokenOptionFactory(chainId, pTokenAddress);\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      // const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\n      //   optionPool.getParameters(),\n      //   optionPool.getLiquidity(),\n      //   pToken.getMargin(accountAddress),\n      //   pToken.getActiveSymbolIds(),\n      // ]);\n      // no minInitialMarginRatio in option\n      // const { initialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      // let promises = [];\n\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(optionPool.getSymbol(symbolIds[i]));\n      // }\n      // const symbols = await Promise.all(promises);\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      // }\n      // const positions = await Promise.all(promises);\n\n      // let marginHeld = symbols.reduce((acc, s, index) => {\n      //   if (index === parseInt(symbolId)) {\n      //     return acc.plus(\n      //       bg(s.price)\n      //         .times(s.multiplier)\n      //         .times(bg(positions[index]).volume.plus(newVolume))\n      //         .abs()\n      //     );\n      //   } else {\n      //     return acc.plus(\n      //       bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n      //     );\n      //   }\n      // }, bg(0));\n      // marginHeld = marginHeld.times(initialMarginRatio);\n\n      // let liquidityUsed = symbols.reduce((acc, s, index) => {\n      //   if (index === parseInt(symbolId)) {\n      //     return acc.plus(\n      //       bg(s.tradersNetVolume)\n      //         .plus(newVolume)\n      //         .times(s.price)\n      //         .times(s.multiplier)\n      //         .abs()\n      //     );\n      //   } else {\n      //     return acc.plus(\n      //       bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n      //     );\n      //   }\n      // }, bg(0));\n      // liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      // const orderValidation = isOrderValid(\n      //   margin,\n      //   marginHeld,\n      //   liquidity,\n      //   liquidityUsed\n      // );\n      // if (orderValidation.success) {\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\n      // } else {\n      //   throw new Error(orderValidation.error);\n      // }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      const pToken = pTokenOptionFactory(chainId, pTokenAddress);\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!bg(volume).eq(0)) {\n        const newVolume = bg(volume).negated().toString();\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import { getPoolVersionId, LITE_VERSIONS } from '../shared';\nimport { getTradeHistoryOption } from '../option/api';\nimport { getTradeHistory2 } from '../v1/api';\nimport { getTradeHistoryV2 } from '../v2/api';\nimport { getTradeHistoryV2l } from '../v2_lite/api';\n\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getTradeHistoryV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return getTradeHistoryOption(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'v2_lite_dpmm') {\n    return apiV2lDpmm.getTradeHistory(chainId, poolAddress, accountAddress, symbolId)\n  } else if (version === 'v2_dpmm') {\n    return apiV2Dpmm.getTradeHistory(chainId, poolAddress, accountAddress, symbolId)\n  }\n  if (symbolId === undefined) {\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\n  } else {\n    return getTradeHistoryV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","import { makeObservable, observable, action, computed } from \"mobx\";\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\nimport supportedCatalog from '../locales/lang.json'\n\n\nconst cache = {}\n\nfunction importAll(r){\n  return r.keys().forEach(key => {\n    const path = key.split('/')\n    const lang = path[1]\n    const page = path[2].split('.')[0].toLowerCase()\n    if(!cache[lang]) {\n      cache[lang] = {}\n    }\n    \n    if(/mobile-/.test(page)){\n      const pageName= page.split('-')[1]\n      if(!cache[lang][pageName]){ \n        cache[lang][pageName] = {}\n      }\n      cache[lang][pageName]['mobile'] = r(key)\n    } else {\n      cache[lang][page] = r(key)\n    }\n  });\n}\n//lang.json 是语言包目录，需要排除在外\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\n\nclass Intl {\n  locale = 'en'\n  constructor(){\n    makeObservable(this,{\n      locale : observable,\n      setLocale : action,\n      dict : computed,\n      localeLabel: computed\n    })\n    const language = navigator.language\n    const prefix = language && language.split('-')[0]\n    const locale = restoreLocale()\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\n      this.locale = locale\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\n      this.locale = prefix\n    }\n  }\n\n  setLocale(locale){\n    if(locale && supportedCatalog[locale]){\n      this.locale = locale;\n      storeLocale(locale)\n    }\n  }\n\n  get(page,key){\n    return cache[this.locale][page][key]\n  }\n\n  get dict(){         \n    return cache[this.locale]\n  }\n\n  get localeLabel(){\n    const label = supportedCatalog[this.locale];\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \n  }\n}\n\nexport default new Intl();","export { web3Factory } from './web3.js'\nexport { oracleFactory, wrappedOracleFactory } from './oracle.js'\nexport {\n  databaseFactory,\n  databaseWormholeFactory,\n  databaseAirdropFactory,\n  databaseActivityFactory,\n} from './database';\nexport {\n  bTokenFactory,\n  TERC20Factory,\n\n  brokerManagerFactory,\n  pTokenAirdropFactory,\n\n  deriFactory,\n  wormholeFactory,\n  miningVaultRouterFactory,\n  miningVaultPoolFactory,\n} from './contract';","import { getOracleConfig } from '../config/oracle';\nimport { normalizeChainId } from './validate';\nimport { DeriEnv } from '../config/env';\nimport { oracleFactory, wrappedOracleFactory } from '../factory/oracle';\nimport { deriToNatural } from './convert';\nimport {\n  mapToSymbolInternal,\n  mapToBTokenInternal,\n  normalizeOptionSymbol,\n} from '../config/token';\nimport { PRESERVED_SYMBOLS } from '../config/version';\nimport { offChainOracleFactory } from '../contract/factory';\n\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n\nexport const getPriceInfoForV1 = async(symbol) => {\n  const env = DeriEnv.get();\n  let method = 'get_signed_price'\n  let url\n  let baseUrl =\n    env === 'prod'\n      ? `https://oracle4.deri.finance/${method}`\n      : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) =>\n    `${url}?symbol=${symbol}`;\n  if (symbol) {\n    url = addSymbolParam(baseUrl, symbol);\n  } else {\n    url = baseUrl;\n  }\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n        //return deriToNatural(priceInfo.data.price).toString()\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`getPriceFromV1 exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\n  }\n}\n\n\nexport const getOracleUrl = (symbol, type='futures') => {\n  const env = DeriEnv.get();\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\n  let method = 'get_signed_price'\n  if (type === 'option') {\n    method = 'get_signed_volatility'\n  }\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\n    method = 'get_price'\n    symbol = `${symbol}_v2_bsc`\n  }\n  let baseUrl =\n    env === 'prod'\n      ? `https://oracle4.deri.finance/${method}`\n      : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) =>\n    `${url}?symbol=${symbol}`;\n\n  if (symbol) {\n    return addSymbolParam(baseUrl, symbol);\n  } else {\n    return baseUrl;\n  }\n};\n\nexport const getPriceFromRest = async(symbol, type='futures') => {\n  const res = await getPriceInfo(symbol, type)\n  if (type === 'futures' && res.price) {\n    return PRESERVED_SYMBOLS.includes(symbol) ? res.price : deriToNatural(res.price).toString()\n  } else if (type === 'option' && res.volatility) {\n    return deriToNatural(res.volatility).toString()\n  } else {\n    throw new Error(`getPrice() invalid format: ${JSON.stringify(res)}`)\n  }\n}\n\n// from oracle rest api\nexport const getPriceInfo = async (symbol, type='futures') => {\n  symbol = mapToBTokenInternal(symbol)\n  let url = getOracleUrl(symbol, type);\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    try {\n      res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n      if (res.ok) {\n        priceInfo = await res.json();\n        if (priceInfo.status.toString() === '200' && priceInfo.data) {\n          return priceInfo.data\n        }\n      }\n    } catch(err) {\n      //console.log(err.toString())\n      retry -= 1;\n    }\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle info exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\n  }\n};\n\nexport const getOracleInfosFromRest = async (symbolList, type = 'future') => {\n  let url = getOracleUrl(null, type);\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    try {\n      res = await fetch(url, {\n        mode: \"cors\",\n        cache: \"no-cache\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(symbolList),\n      });\n      if (res.ok) {\n        priceInfo = await res.json();\n        if (priceInfo.status.toString() === \"200\" && priceInfo.data) {\n          return priceInfo.data;\n        }\n      }\n    } catch (err) {}\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`getOracleInfosFromRest exceed max retry(3): ${symbolList}`);\n  }\n};\n\n// cache\n// export const getOraclePriceFromCache = (function () {\n//   console.log('-- getOraclePriceFromCache will remove in next version ' )\n//   let cache = {};\n//   return {\n//     async get(chainId, symbol = '_', version = 'v2') {\n//       const key = `${chainId}_${symbol}_${version}`\n//       if (\n//         Object.keys(cache).includes(key) &&\n//         Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\n//       ) {\n//         return cache[key].data;\n//       } else {\n//         const data = await getOraclePrice(chainId, symbol, version);\n//         cache[key] = {\n//           data,\n//           timestamp: Math.floor(Date.now() / 1000),\n//         };\n//         return cache[key].data;\n//       }\n//     },\n//   };\n// })();\n\nexport const getPriceInfos = async (symbolList) => {\n  let url = getOracleUrl();\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, {\n      mode: 'cors',\n      cache: 'no-cache',\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(symbolList),\n    });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle infos exceed max retry(3): ${symbolList} ${JSON.stringify(priceInfo)}`);\n  }\n};\n\nexport const oraclePricesCache = (function(){\n  const cache = {}\n  const pending = {}\n  return {\n    async get(symbols=[]) {\n      const key = symbols.join('_')\n      if (\n        !Object.keys(cache).includes(key) ||\n        Math.floor(Date.now() / 1000) - cache[key].timestamp > 3\n      ) {\n        const timestamp = Math.floor(Date.now() / 1000);\n        // pending is exit\n        if (Object.keys(pending).includes(key)) {\n          let retry = 10;\n          while (retry > 0) {\n            await delay(390);\n            if (!Object.keys(pending).includes(key)) {\n              //console.log('hit pending with cache');\n              return cache[key].data;\n            }\n          }\n          if (retry === 0) {\n            //console.log('hit pending expired');\n            const data = await getPriceInfos(symbols);\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          }\n        } else {\n          pending[key] = true;\n          try {\n            //console.log('hit new');\n            const data = await getPriceInfos(symbols);\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          } catch (err) {\n          } finally {\n            delete pending[key];\n          }\n        }\n      } else {\n        //console.log('hit cache');\n        return cache[key].data;\n      }\n    }\n  }\n})()\n\nexport const RestOracle = (symbol) => {\n  return {\n    getPrice: async function () {\n      return getPriceFromRest(symbol)\n    }\n  }\n};\n\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\n  chainId = normalizeChainId(chainId);\n  symbol = mapToSymbolInternal(symbol)\n  const config = getOracleConfig(version, chainId, symbol);\n  if (config && config.address) {\n    const oracle = oracleFactory(\n      chainId,\n      config.address,\n      symbol,\n      config.decimal,\n    );\n    return await oracle.getPrice();\n  } else {\n    // for new added symbol and not updated to config yet\n    const priceInfo = await getPriceInfo(symbol, version);\n    return deriToNatural(priceInfo.price).toString();\n  }\n};\n\nexport const getOraclePrice2 = async (chainId, symbol, oracleAddress, version='v2_lite') => {\n  chainId = normalizeChainId(chainId);\n  symbol = mapToSymbolInternal(symbol)\n  if (oracleAddress !== '') {\n    const oracle = wrappedOracleFactory(chainId, oracleAddress)\n    return await oracle.getPrice();\n  } else {\n    // for new added symbol and not updated to config yet\n    const priceInfo = await getPriceInfo(symbol, version);\n    return deriToNatural(priceInfo.price).toString();\n  }\n};\n\n// cache\nexport const getOraclePriceFromCache2 = (function () {\n  let cache = {};\n  return {\n    async get(chainId, symbol = '_', oracleAddress, version = 'v2_lite') {\n      const key = `${chainId}_${symbol}_${oracleAddress}`\n      if (\n        Object.keys(cache).includes(key) &&\n        Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\n      ) {\n        return cache[key].data;\n      } else {\n        const data = await getOraclePrice2(chainId, symbol, oracleAddress, version);\n        cache[key] = {\n          data,\n          timestamp: Math.floor(Date.now() / 1000),\n        };\n        return cache[key].data;\n      }\n    },\n  };\n})();\n\n// export const getOraclePriceForOption = async (chainId, symbol) => {\n//   return await getOraclePrice(chainId, normalizeOptionSymbol(symbol), 'option');\n// };\n\n// for viewer use\n// export const getOraclePricesForOption = async (chainId, symbols) => {\n//   const oracleSymbols = symbols\n//     .map((i) => normalizeOptionSymbol(i))\n//     .filter((value, index, self) => self.indexOf(value) === index);\n//   const oracleSymbolPrices = await Promise.all(\n//     oracleSymbols.reduce(\n//       (acc, i) => acc.concat([getOraclePrice(chainId, i, 'option')]),\n//       []\n//     )\n//   );\n//   return symbols.map((s) => {\n//     return toWei(oracleSymbolPrices[oracleSymbols.indexOf(normalizeOptionSymbol(s))]);\n//   });\n// };\n\n// // for tx use\n// export const getOracleVolatilityForOption = async (symbols) => {\n//   const volSymbols = getVolatilitySymbols(symbols)\n//   //volSymbols.map((s) => `VOL-${s.toUpperCase()}`)\n\n//   const volatilities = await Promise.all(\n//     volSymbols.reduce((acc, i) => acc.concat([getPriceInfo(i, 'option')]), [])\n//   );\n//   //return volatilities;\n//   return symbols.map((s) => {\n//     return volatilities[volSymbols.indexOf(`VOL-${normalizeOptionSymbol(s)}`)];\n//   });\n// };\n\n// for viewer use\nexport const getOracleVolatilitiesForOption = async (symbols) => {\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n  const res = await getOracleInfosFromRest(oracleSymbols.map((os) => `VOL-${os}`), 'option')\n  const volatilities = oracleSymbols.map((s) => res[`VOL-${s}`])\n  return symbols.map((s) => {\n    return volatilities[oracleSymbols.indexOf(normalizeOptionSymbol(s))];\n  });\n};\n\n// check symbol is used offchain oracle\nexport const checkOffChainOracleSymbol = async (chainId, oracleAddress, symbol) => {\n  try {\n    await offChainOracleFactory(chainId, oracleAddress).signer()\n    return symbol\n  } catch (err) {\n  }\n  try {\n    await offChainOracleFactory(chainId, oracleAddress).signatory()\n    return symbol\n  } catch (err) {\n  }\n  return \"\"\n};","import {\n  getRestServerConfig,\n  DeriEnv,\n} from '../config'\n//import fetch from 'node-fetch'\n\n// get REST HTTP Base url\nexport const getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nexport const fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\n};\n\n// query api wrapper\nexport const catchApiError = async (func, args, methodName, defaultValue) => {\n  try {\n    const res = await func(...args)\n    return res\n  } catch (err) {\n    //console.log(`${methodName}: `, err.toString())\n    console.log(`${methodName}: `, err)\n  }\n  return defaultValue\n}\n\n// tx api wrapper\nexport const catchTxApiError = async (func, args) => {\n  let res;\n  try {\n    const result = await func(...args);\n    res = { success: true, transaction: result };\n  } catch (err) {\n    const message = err.errorMessage || err.message || 'Transaction failed';\n    res = { success: false, error: message};\n  }\n  return res;\n};\n\n","\n/* eslint-disable */\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-disable */","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural, hexToNumber, bg } from '../../shared/utils'\nimport { perpetualPoolAbi } from './abis';\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolAbi)\n\n    this.bTokenCount= 0\n    this.symbolCount= 0\n\n    this.lTokenAddress = ''\n    this.pTokenAddress = ''\n    this.routerAddress = ''\n    this.protocolFeeCollector = ''\n\n    this.protocolFeeAccrued = 0\n  }\n\n  async _update() {\n    await Promise.all([\n      this.getLengths(),\n      this.getAddresses(),\n      this.getParameters(),\n    ]);\n  }\n\n  async getLengths() {\n    try {\n      const res = await this._call('getLengths')\n      //console.log(res[0])\n      if (res[0] && res[1]) {\n        this.bTokenCount= parseInt(res[0])\n        this.symbolCount= parseInt(res[1])\n      }\n    } catch(err) {\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\n    }\n  }\n  async getAddresses() {\n    try {\n      const res = await this._call('getAddresses')\n      this.lTokenAddress = res.lTokenAddress\n      this.pTokenAddress = res.pTokenAddress\n      this.routerAddress = res.routerAddress\n      this.protocolFeeCollector = res.protocolFeeCollector\n    } catch (err) {\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\n    }\n  }\n  async getParameters() {\n    const res = await this._call('getParameters')\n    return {\n      decimals0: res.decimals0,\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res =  await this._call('getProtocolFeeAccrued')\n    this.protocolFeeAccrued = deriToNatural(res)\n  }\n  async getBToken(bTokenId) {\n    try {\n      //bTokenId = parseInt(bTokenId)\n      const res = await this._call('getBToken', [bTokenId]);\n      return {\n        bTokenAddress: res.bTokenAddress,\n        swapperAddress: res.bTokenAddress,\n        oracleAddress: res.oracleAddress,\n        decimals: res.decimals,\n        discount: deriToNatural(res.discount),\n        price: deriToNatural(res.price),\n        liquidity: deriToNatural(res.liquidity),\n        pnl: deriToNatural(res.pnl),\n        cumulativePnl: deriToNatural(res.cumulativePnl),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\n    }\n  }\n  async getBTokenOracle(bTokenId) {\n    //bTokenId = parseInt(bTokenId)\n    return await this._call('getBTokenOracle', [bTokenId])\n  }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res =  await this._call('getSymbol', [symbolId])\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  async getSymbolOracle(symbolId) {\n    //symbolId = parseInt(symbolId)\n    return await this._call('getSymbolOracle', [symbolId])\n  }\n\n  // trade history query methods\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  // get block number when last updated\n  async getLastUpdatedBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  async getLatestBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    let amount\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { naturalToDeri } from '../../shared/utils'\nimport { MAX_INT256 } from '../../shared/config';\nimport { perpetualPoolRouterAbi} from './abis';\n\nexport class PerpetualPoolRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\n    this.poolAddress = ''\n  }\n\n  // === query ===\n  async pool() {\n    this.poolAddress = await this._call('pool');\n    return this.poolAddress\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidity',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async addMargin(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMargin',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      //console.log('->', MAX_INT256)\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async trade(accountAddress, symbolId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  // with prices\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidityWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMarginWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'tradeWithPrices',\n      [symbolId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  // async liquidate(acountAddress) {\n  //   if (!this.poolAddress) {\n  //     await this.pool()\n  //   }\n  //   return await this._transact(\n  //     'liquidate',\n  //     [accountAddress],\n  //     accountAddress\n  //   );\n  // }\n\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural } from '../../shared/utils'\nimport { lTokenAbi } from './abis';\n\nconst processAsset = (res) => {\n  return {\n    liquidity: deriToNatural(res[0]),\n    pnl: deriToNatural(res[1]),\n    lastCumulativePnl: deriToNatural(res[2]),\n  }\n}\nexport class LToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getAsset(accountAddress, bTokenId) {\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\n    if (Array.isArray(res)) {\n      return processAsset(res)\n    } else {\n      console.log('address', this.contractAddress)\n      console.log('res', res)\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\n    }\n  }\n  async getAssets(accountAddress) {\n    const res = await this._call('getAssets', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map(i => processAsset(i))\n    } else {\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\n    }\n  }\n\n  // === transaction ===\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getMargin(accountAddress, bTokenId) {\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\n    return deriToNatural(res)\n  }\n  async getMargins(accountAddress) {\n    const res = await this._call('getMargins', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => deriToNatural(i))\n    }\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getPositions(accountAddress) {\n    const res = await this._call('getPositions', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => processPosition(i))\n    }\n  }\n\n  // === transaction ===\n}","import {\n  PerpetualPool,\n  PerpetualPoolRouter,\n  LToken,\n  PToken,\n} from './contract';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolFactory = factory(PerpetualPool)\n\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\n\nexport const lTokenFactory = factory(LToken)\n\nexport const pTokenFactory = factory(PToken)","const bTokenPairs = {\n  AMUSDC: 'amUSDC',\n};\n\nconst offchainSymbolPairs = {\n  AXSUSDT: 'AXSUSDT',\n  MANAUSDT: 'MANAUSDT',\n  MBOXUSDT: 'MBOXUSDT',\n  IBSCDEFI: 'iBSCDEFI',\n  IGAME: 'iGAME',\n  ALICEUSDT: 'ALICEUSDT',\n  SANDUSDT: 'SANDUSDT',\n  QUICKUSDT: 'QUICKUSDT',\n  GHSTUSDT: 'GHSTUSDT',\n  AGLDUSDT: 'AGLDUSDT',\n};\n\nexport const normalizeOptionSymbol = (optionSymbol) => {\n  const res = optionSymbol.split('-')\n  if (res.length >= 2) {\n    return res[0]\n  } else {\n    throw new Error(`invalid option symbol:${optionSymbol}`)\n  }\n};\n\nexport const getNormalizedOptionSymbols = (symbols) => {\n  let res = []\n  symbols.forEach((s) => {\n    const volSymbol = normalizeOptionSymbol(s)\n    if (!res.includes(volSymbol)) {\n      res.push(volSymbol)\n    }\n  })\n  return res\n}\n\nexport const getVolatilitySymbols = (symbols) => {\n  return getNormalizedOptionSymbols(symbols).map((s) => `VOL-${s}`)\n}\n\nexport const isUsedRestOracle = (symbol) => {\n  return Object.keys(offchainSymbolPairs).includes(symbol);\n};\n\nexport const mapToSymbol = (symbol) => {\n  if (Object.keys(offchainSymbolPairs).includes(symbol)) {\n    return offchainSymbolPairs[symbol]\n  } else {\n    return symbol\n  }\n}\n\nexport const mapToSymbolInternal = (symbol) => {\n  const index = Object.values(offchainSymbolPairs).indexOf(symbol)\n  if (index > -1) {\n    return Object.keys(offchainSymbolPairs)[index]\n  } else {\n    return symbol\n  }\n}\n\nexport const mapToBToken = (bToken) => {\n  if (Object.keys(bTokenPairs).includes(bToken)) {\n    return bTokenPairs[bToken]\n  } else {\n    return bToken\n  }\n}\n\nexport const mapToBTokenInternal = (bToken) => {\n  const index = Object.values(bTokenPairs).indexOf(bToken)\n  if (index !== -1) {\n    return Object.keys(bTokenPairs)[index]\n  } else {\n    return bToken\n  }\n}\n\nexport const normalizeSymbolUnit = (symbol) => {\n  const prefix = ['USD', 'USDT'];\n  const re = new RegExp(`(${prefix.join('|')})$`);\n  if (typeof symbol === 'string') {\n    return mapToSymbol(symbol).replace(re, '');\n  }\n  console.log(`symbol(${symbol}) is not a string type`);\n  return symbol;\n};\n\nexport const getIndexInfo = (symbol) => {\n  const internalSymbol = mapToSymbolInternal(symbol);\n  const customIndexs = {\n    IGAME: {\n      tokens: ['AXS', 'MANA', 'SAND', 'ALICE', 'TLM', 'DPET', 'SKILL'],\n      url: 'https://docs.deri.finance/products/index/game-index',\n    },\n    IBSCDEFI: {\n      tokens: ['CAKE', 'XVS', 'MDX', 'AUTO', 'BAKE', 'BUNNY'],\n      url: 'https://docs.deri.finance/products/index/bsc-defi-index',\n    },\n    IMEME: {\n      tokens: ['DOGE', 'SHIB', 'ELON', 'LOWB', 'PIG', 'SAFEMOON', 'MONA'],\n      url: 'https://docs.deri.finance/products/index/meme-index',\n    },\n  };\n  if (Object.keys(customIndexs).includes(internalSymbol)) {\n    return customIndexs[internalSymbol];\n  } else {\n    return { tokens: [], url: '' };\n  }\n};","import {\n  validateArgs,\n  deriToNatural,\n  numberToHex,\n  bg,\n} from '../../shared/utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  processFundingRate,\n} from '../calculation';\nimport { ContractBase } from '../../shared/contract/contract_base';\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle';\n\n/* eslint-disable */\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, POOL_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async getStateValues() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getStateValues');\n      //console.log(\"getStateValues() raw:\", res)\n      result = {\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\n        liquidity: deriToNatural(res.liquidity),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      result = {\n        cumuFundingRate: defaultValue,\n        cumuFundingRateBlock: defaultValue,\n        liquidity: defaultValue,\n        tradersNetCost: defaultValue,\n        tradersNetVolume: defaultValue,\n      };\n      console.log(`getStateValues: ${err}`);\n    }\n    return result;\n  }\n\n  async getParameters() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getParameters');\n      // console.log(\"getParameters() raw: \", res)\n      result = {\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n        priceDelayAllowance: bg(res.priceDelayAllowance),\n      };\n    } catch (err) {\n      result = {\n        multiplier: defaultValue,\n        feeRatio: defaultValue,\n        minPoolMarginRatio: defaultValue,\n        minInitialMarginRatio: defaultValue,\n        minMaintenanceMarginRatio: defaultValue,\n        minAddLiquidity: defaultValue,\n        redemptionFeeRatio: defaultValue,\n        fundingRateCoefficient: defaultValue,\n        minLiquidationReward: defaultValue,\n        maxLiquidationReward: defaultValue,\n        liquidationCutRatio: defaultValue,\n        priceDelayAllowance: defaultValue,\n      };\n      console.log(`getParameters: ${err}`);\n    }\n    return result;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt == null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _estimatedGas(method, args, accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    const MAX_GAS_AMOUNT = 582731\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  // overwrite to use signed price to tx\n  async _transact(method, args = [], accountAddress) {\n    await this._init()\n    const symbol = await this.symbol()\n    const oracle = await getPriceInfoForV1(symbol);\n    let signed = [oracle.timestamp, oracle.price, parseInt(oracle.v).toString(), oracle.r, oracle.s];\n\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\n\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n\n  async getFundingRate() {\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\n    const symbol = await this.symbol()\n    price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n    try {\n      const stateValues = await this.getStateValues();\n      const parameters = await this.getParameters();\n      const { tradersNetVolume, liquidity } = stateValues;\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        minPoolMarginRatio,\n      } = parameters;\n      const args1 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        fundingRateCoefficient,\n      ];\n      if (!validateArgs(...args1)) {\n        fundingRate = '0';\n        fundingRatePerBlock = '0';\n      } else {\n        fundingRatePerBlock = calculateFundingRate(...args1);\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\n      }\n      const args2 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        minPoolMarginRatio,\n      ];\n      if (!validateArgs(...args2)) {\n        liquidityUsed = '0';\n      } else {\n        liquidityUsed = calculateLiquidityUsed(...args2);\n      }\n      return {\n        price,\n        multiplier: multiplier.toString(),\n        fundingRate: fundingRate,\n        fundingRatePerBlock: fundingRatePerBlock,\n        tradersNetVolume: tradersNetVolume.toString(),\n        liquidity: liquidity.toString(),\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\n        liquidityUsed: liquidityUsed,\n        poolMarginRatio: minPoolMarginRatio.toString(),\n      };\n    } catch (err) {\n      console.log('PerpetualPool#gerFundingRate():', err);\n      throw err;\n    }\n  }\n\n  async depositMargin(accountAddress, amount) {\n    let res;\n    try {\n      let tx = await this._transact(\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [amount],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      console.log('here');\n      res = { success: false, error: err };\n    }\n    return res;\n  }\n\n  // util methods, it's extract shared/utils now\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    //toBlock = toBlock.number;\n    let amount;\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\n      amount = 999;\n    } else {\n      amount = 4999;\n    }\n    if (fromBlock + amount > to) {\n      amount = to - fromBlock;\n    }\n    while (fromBlock <= to) {\n      //console.log('tick')\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if (fromBlock + amount > to) {\n        amount = to - fromBlock;\n      }\n    }\n    return events;\n  }\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { deriToNatural, bg } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async getPositionInfo(accountAddress) {\n    let result = {};\n    try {\n      const res = await this._call('getPosition(address)', [accountAddress]);\n      //console.log(\"getPositionInfo() raw:\", res)\n      result = {\n        volume: deriToNatural(res[0]),\n        cost: deriToNatural(res[1]),\n        lastCumuFundingRate: deriToNatural(res[2]),\n        margin: deriToNatural(res[3]),\n        lastUpdateTimestamp: bg(res[4]),\n      };\n    } catch (err) {\n      result = {\n        volume: bg(0),\n        cost: bg(0),\n        lastCumuFundingRate: bg(0),\n        margin: bg(0),\n        lastUpdateTimestamp: bg(0),\n      };\n      //console.log(`getPositionInfo: ${err}`);\n    }\n    return result;\n  }\n\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { deriToNatural } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class LTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async balance(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async balanceOf(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async totalSupply() {\n    const res = deriToNatural(await this._call('totalSupply'));\n    //console.log(\"> lToken totalSupply\", res.toString())\n    return res;\n  }\n}\n","import { PerpetualPool } from './contract/perpetual_pool';\n//import { BTokenContract } from './contract/bToken';\nimport { PTokenContract } from './contract/p_token';\nimport { LTokenContract } from './contract/l_token';\n\nexport const perpetualPoolFactory = (() => {\n  const perpetualPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\n      return perpetualPoolInstanceMap[key];\n    }\n    const perpetualPool = new PerpetualPool(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PerpetualPoolContract\");\n    perpetualPoolInstanceMap[key] = perpetualPool;\n    return perpetualPool;\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const pTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\n      return pTokenInstanceMap[key];\n    }\n    const pToken = new PTokenContract(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PTokenContract\")\n    pTokenInstanceMap[key] = pToken;\n    return pToken;\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const lTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\n      return lTokenInstanceMap[key];\n    }\n    const lToken = new LTokenContract(\n      chainId,\n      contractAddress,\n    );\n    lTokenInstanceMap[key] = lToken;\n    return lToken;\n  };\n})();\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from './contract_base'\nimport { deleteIndexedKey } from '../utils'\nimport { TERC20Abi } from './abis'\n\nexport class TERC20 extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, TERC20Abi)\n  }\n\n  // query\n  async allowance(owner, spender) {\n    const res = await this._call('allowance', [owner, spender])\n    return deleteIndexedKey(res)\n  }\n  async balanceOf(account) {\n    const res = await this._call('balanceOf', [account])\n    return deleteIndexedKey(res)\n  }\n  //  async decimals() {\n  //    const res = await this._call('decimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async name() {\n  //    const res = await this._call('name', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async approve(accountAddress, spender, amount) {\n    return await this._transact('approve', [spender, amount], accountAddress)\n  }\n  // only for testnet\n  async mint(accountAddress) {\n    return await this._transact('mint', [], accountAddress)\n  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","import { factory } from '../../utils/factory';\nimport { BToken } from '../../contract/b_token';\nimport { TERC20 } from '../../contract/TERC20';\n\nexport const bTokenFactory = factory(BToken);\nexport const TERC20Factory = factory(TERC20)","import { deriToNatural, bg } from '../../utils';\nimport { MAX_UINT256 } from '../../config';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DeriContract extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return deriToNatural(allowance).gt(0);\n  }\n  async unlock(accountAddress, poolAddress) {\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\n/* eslint-enable */\n\nexport class MiningVaultPool extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI['abi']);\n  }\n  async mintDToken(accountAddress, ...args) {\n    await this._init()\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class MiningVaultRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async mint(accountAddress, ...args) {\n    await this._init()\n    //console.log(accountAddress, args)\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    //console.log('txRaw', txRaw)\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { getDeriConfig } from '../../config';\nimport { naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class WormholeContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI );\n  }\n  async freeze(accountAddress, amount, toChainId) {\n    const { wormholeAddress: toWormholeAddress } = getDeriConfig(\n      toChainId\n    );\n    return this._transact(\n      'freeze',\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\n      accountAddress\n    );\n  }\n\n  async mintDeri(\n    accountAddress,\n    amount,\n    fromChainId,\n    fromWormhole,\n    fromNonce,\n    v,\n    r,\n    s\n  ) {\n    return this._transact(\n      'claim',\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\n      accountAddress\n    );\n  }\n}\n","import { DeriContract } from \"../../contract/deri/deri\";\nimport { MiningVaultPool } from \"../../contract/deri/mining_vault_pool\";\nimport { MiningVaultRouter } from \"../../contract/deri/mining_vault_router\";\nimport { WormholeContract } from \"../../contract/deri/wormhole\";\nimport { factory } from \"../../utils\"\n\n\nexport const deriFactory = factory(DeriContract)\n\nexport const wormholeFactory = factory(WormholeContract)\n\nexport const miningVaultRouterFactory = factory(MiningVaultRouter)\n\nexport const miningVaultPoolFactory = factory(MiningVaultPool)","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class SlpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    const res = await this._call('userInfo', [152, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class ClpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('addLiquidity', args, accountAddress);\n  }\n\n  async removeLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('removeLiquidity', args, accountAddress);\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n    };\n  }\n\n  async getStateValues() {\n    const res = await this._call('getStateValues');\n    return {\n      liquidity: deriToNatural(res),\n    };\n  }\n\n  async getLiquidity() {\n    const res = await this._call('getStateValues');\n    if (res && res.liquidity) {\n      return deriToNatural(res.liquidity);\n    }\n    throw new Error(\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\n    );\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class Clp2Pool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    //console.log('hit clp2')\n    const res = await this._call('userInfo', [391, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}","import { SlpPool } from '../../contract/lp_pool/slp_pool'\nimport { ClpPool } from '../../contract/lp_pool/clp_pool'\nimport { Clp2Pool } from '../../contract/lp_pool/clp2_pool'\n\nexport const slpPoolFactory = (function () {\n  const slpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\n      return slpPoolInstanceMap[key];\n    }\n    const slpPool = new SlpPool(chainId, contractAddress);\n    slpPoolInstanceMap[key] = slpPool;\n    return slpPool;\n  };\n})();\n\nexport const clpPoolFactory = (function () {\n  const clpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\n      return clpPoolInstanceMap[key];\n    }\n    const clpPool = new ClpPool(chainId, contractAddress);\n    clpPoolInstanceMap[key] = clpPool;\n    return clpPool;\n  };\n})();\n\nexport const clp2PoolFactory = (function () {\n  const clp2PoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\n      return clp2PoolInstanceMap[key];\n    }\n    const clp2Pool = new Clp2Pool(chainId, contractAddress);\n    clp2PoolInstanceMap[key] = clp2Pool;\n    return clp2Pool;\n  };\n})();\n\n// export const lpPoolFactory = (function () {\n//   const lpPoolInstanceMap = {};\n//   return (chainId, contractAddress, isProvider = false) => {\n//     let key;\n//     if (isProvider) {\n//       key = `${chainId}.${contractAddress}.isProvider`;\n//     } else {\n//       key = `${chainId}.${contractAddress}`;\n//     }\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\n//       return lpPoolInstanceMap[key];\n//     } else {\n//       let lpPool;\n//       const { type } = getLpContractAddress(chainId, contractAddress);\n//       console.log(`lp type: ${type}`);\n//       if (type === 'slp') {\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\n//       } else if (type === 'clp') {\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\n//       }\n//       lpPoolInstanceMap[key] = lpPool;\n//       return lpPool;\n//     }\n//   };\n// })();","import { factory } from '../../utils/factory';\nimport { BrokerManager } from '../../contract/activity/broker_manager';\nimport { PTokenAirdrop } from '../../contract/activity/ptoken_airdrop';\n\nexport const brokerManagerFactory = factory(BrokerManager);\nexport const pTokenAirdropFactory = factory(PTokenAirdrop);\n","\n\nimport BigNumber from 'bignumber.js'\nimport version from '../model/Version';\nimport type from '../model/Type';\nimport config from '../config.json'\n\nimport {\n  DeriEnv,\n  getPoolLiquidity,\n  getPoolInfoApy,\n  getUserInfoAll,\n  getLiquidityInfo\n} from '../lib/web3js/indexV2'\nimport Type from '../model/Type';\nconst versionKey = 'deri-current-version'\n\n\nconst env = DeriEnv.get();\nconst { chainInfo } = config[env]\n\nexport function bg(value, base = 0) {\n  if (base === 0) {\n    return BigNumber(value);\n  } else if (base > 0) {\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\n  } else {\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\n  }\n}\n\nexport function deriNatural(value) {\n  return bg(value, -18);\n}\n\nexport function formatAddress(address){\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\n}\n\nexport function formatBalance(balance){\n  return balance && (+balance).toFixed(4)\n}\n\nexport function eqInNumber(str1,str2){\n  return (+str1) === (+str2)\n}\n\nexport function isLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\nexport function isSushiLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\n}\nexport function isCakeLP(address){\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\n\nexport function sessionStorageKey(version){\n  return `${version}-current-trading-pool`\n}\n\nexport function convertToInternationalCurrencySystem (labelValue) {\n  \n  // Nine Zeroes for Billions\n  return Number.isNaN(labelValue) ? ''\n  : Math.abs(Number(labelValue)) >= 1.0e+9\n\n  ? (Math.abs(Number(labelValue)) / 1.0e+9).toFixed(2) + \"B\"\n  // Six Zeroes for Millions \n  : Math.abs(Number(labelValue)) >= 1.0e+6\n\n  ? (Math.abs(Number(labelValue)) / 1.0e+6).toFixed(2) + \"M\"\n  // Three Zeroes for Thousands\n  : Math.abs(Number(labelValue)) >= 1.0e+3\n\n  ? (Math.abs(Number(labelValue)) / 1.0e+3).toFixed(2) + \"K\"\n\n  : Math.abs(Number(labelValue).toFixed(2));\n\n}\n\n\n// export function storeVersion(version){\n//   sessionStorage.setItem(versionKey,version)\n// }\n\n// export function restoreVersion(){\n//   return sessionStorage.getItem(versionKey)\n// }\n\nexport function storeConfig(version,config){\n  if(config){\n    const key = sessionStorageKey(version);\n    sessionStorage.setItem(key,JSON.stringify(config))\n  }\n}\n\nexport function getConfigFromStore(version){\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\n}\n\nexport function storeChain(chainInfo){\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\n}\nexport function restoreChain(){\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\n}\n\nexport function storeLocale(locale){\n  sessionStorage.setItem('current-locale',locale)\n}\n\nexport function restoreLocale(){\n  return sessionStorage.getItem('current-locale')\n}\n\nexport function addParam(param,value,urlString = window.location.href){\n  const url = new URL(urlString);\n  if(url.searchParams.has(param)){\n    url.searchParams.set(param,value);\n  } else {\n    url.searchParams.append(param,value);\n  }\n  return  url.toString();\n}\n\nexport function hasParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.has(param);\n}\n\nexport function getParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.get(param);\n}\n\nexport function getFormatSymbol(symbol){\n  const curChain = restoreChain();\n  const chain = curChain ? curChain.code.toUpperCase() : 'BSC'\n  if(type.isOption){\n    if(symbol.indexOf('-MARKPRICE') !== -1) {\n      symbol = symbol.substr(0,symbol.indexOf('-MARKPRICE'))\n    } else {\n      symbol = symbol.split('-')[0]\n    }\n    return  `${symbol}_V2_${chain}`\n  } else {\n    if(version.isV1){\n      return symbol\n    } else {\n      if(symbol.indexOf('MARKPRICE') !== -1) {\n        return symbol;\n      } else {\n        return `${symbol}_V2_${chain}`\n      }\n    }\n  }\n}\n\nexport function getDefaultNw(env){\n  return getNetworkList(env).find(network => network.isDefault) || {}\n}\n\nexport function getNetworkList(env){\n  const chainInfo = config[env]['chainInfo']\n  const ids = Object.keys(chainInfo);\n  return ids.map(id => Object.assign(chainInfo[id],{id}))\n}\n\n\n//\n// export function formatSymbolInputParam(symbol,spec){\n//   const curChain = restoreChain();\n//   const chain = curChain ? curChain.code.toUpperCase() : 'BSC'\n//   const baseToken = Array.isArray(spec.bTokenSymbol) ? spec.bTokenSymbol[0] : spec.bTokenSymbol\n//   if(type.isFuture){\n//     return {\n//       indexPrice : version.isV1 ? symbol : `${symbol}_V2_${chain}`,\n//       markPrice : `MARKPRICE_${symbol}_${chain}_FUTURE_${version.zone}_${baseToken}`\n//     }\n//   } else {\n//     return {\n//       indexPrice : `${symbol}_V2_${chain}`,\n//       markPrice : `MARKPRICE_${symbol}_V2_${chain}`\n//     }\n//   }\n// }\n\nexport function getMarkpriceSymbol(config){\n  const curChain = restoreChain();\n  const chain = curChain ? curChain.code.toUpperCase() : 'BSC'\n  const baseToken = Array.isArray(config.bTokenSymbol) ? config.bTokenSymbol[0] : config.bTokenSymbol\n  return `MARKPRICE_${config.symbol}_${chain}_${Type.current.toUpperCase()}_${version.zone}_${baseToken}`\n}\n\n\n\nexport function equalIgnoreCase(str1,str2){\n  return str1 && str1.toUpperCase() === str2 && str2.toUpperCase()\n}\n\nexport function stripSymbol(symbol){\n  if(!symbol){\n    return symbol;\n  }\n  if(/-/.test(symbol)){\n    symbol = symbol.split('-')[0]\n  }\n  return symbol\n}\n\n\nexport const  secondsInRange = {\n  '1' : 60,\n  '5' : 300,\n  '15' : 900,\n  '30' : 1800,\n  '60' : 3600,\n  '1D' : 3600 * 24,\n  '1W' : 3600 * 24 * 7\n}\nexport const intervalRange = {\n  '1' : 'min',\n  '5' : '5min',\n  '15' : '15min',\n  '30' : '30min',\n  '60' : 'hour',\n  '1D' : 'day',\n  '1W' : 'week'\n}\n\n \nexport function calcRange(interval){\n  const timestamp = new Date().getTime() /1000 ;\n  let from,to;\n  if(interval !== '1W') {\n    to = Math.floor(timestamp / secondsInRange[interval] ) * secondsInRange[interval]\n    from  = to - secondsInRange[interval] * 200\n  } else {\n    to = Math.floor((timestamp - 345600) /secondsInRange[interval]) * secondsInRange[interval] + 345600\n    from = to - secondsInRange[interval] * 200\n  }\n  return [from,to]\n \n}\n\nexport function groupByNetwork(pools){\n  const all = []\n  pools.reduce((total, pool) => {\n    const find = total.find(item => eqInNumber(item['pool']['address'], pool['address']))\n    if (find && find.list.length < 5) {\n      find['list'].push(pool)\n    } else {\n      const poolInfo = {\n        pool: {\n          network: pool.network,\n          symbol: pool.symbol,\n          address: pool.address,\n          formatAdd: pool.formatAdd,\n          version: pool.version,\n          // innoDisplay : pool.version=== 'v2_lite' ? Intl.get('mining','v2_lite') : pool.version,\n          chainId: pool.chainId,\n          airdrop: pool.airdrop,\n          type: pool.type,\n          bTokenSymbol: pool.bTokenSymbol,\n          bTokenId: pool.bTokenId,\n          symbolId: pool.symbolId\n        },\n        list: [pool]\n      }\n      total.push(poolInfo)\n    }\n    return total;\n  }, all)\n  return all;\n}\n\nexport function combineSymbolfromPoolConfig(configs){\n  return configs.reduce((total,config) => {\n    const pos = total.findIndex(item => item.chainId === config.chainId && (item.pool === config.pool) && config.version === item.version)\n    if((config.version === 'v2' || config.version === 'v2_lite' || config.version === 'option' || config.version === 'v2_lite_open' || config.version === 'v2_lite_dpmm')  \n        && pos > -1) {\n      if(total[pos].symbol.indexOf(config.symbol) === -1){\n        total[pos].symbol += `,${config.symbol}` \n      } else if(total.findIndex(item => item.bTokenSymbol === config.bTokenSymbol) === -1) {\n        total.push(config)\n      }\n    } else{\n      total.push(config)\n    }\n    return total;\n  },[]);\n}\n\nexport async function mapPoolInfo(config,wallet,chainInfo){\n  // const liqPool = await getPoolLiquidity(config.chainId,config.pool,config.bTokenId) || {}\n  // const apyPool = await getPoolInfoApy(config.chainId,config.pool,config.bTokenId) || {}\n  const pool = config.pool || ''\n  const item = { \n    network : chainInfo[config.chainId] && chainInfo[config.chainId].name,\n    // liquidity : liqPool.liquidity,\n    // apy :  ((+apyPool.apy) * 100).toFixed(2),\n    formatAdd : formatAddress(pool),\n    address : pool,\n    type : 'perpetual',\n    buttonText : 'STAKING',\n    multiplier : 1\n  }\n  // if(wallet && wallet.isConnected()){\n  //   const info = await getLiquidityInfo(config.chainId,config.pool,wallet.detail.account,config.bTokenId).catch(e => console.log(e));\n  //   const claimInfo = await getUserInfoAll(wallet.detail.account);\n  //   if(info){\n  //     item['pnl'] = info.pnl\n  //   }\n  //   if(claimInfo){\n  //     item['claimed'] = claimInfo.total;\n  //     item['unclaimed'] = claimInfo.amount\n  //   }\n  // }\n\n  return Object.assign(config,item)\n}\n\n\n\n","import { bg, getDailyBlockNumber } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  return bg(\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\n  ).abs();\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\n  fundingRateCoefficient;\n}\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import { bg, max, min } from '../../shared/utils';\n\nexport * from './fundingRate';\n\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  tradersNetVolume,\n  tradersNetCost,\n  multiplier,\n  minPoolMarginRatio,\n  price\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const value = bg(tradersNetVolume).times(price).times(multiplier);\n  const removable = bg(liquidity)\n    .plus(tradersNetCost)\n    .minus(value)\n    .minus(value.abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  bg(volume).eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return bg(volume).abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return bg(volume).times(price).times(multiplier).minus(cost);\n}\n\nexport const calculateMaxWithdrawMargin = (\n  price,\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  if (volume.eq(0)) {\n    return margin;\n  }\n  const held = calculateMarginHeld(\n    price,\n    volume,\n    multiplier,\n    minInitialMarginRatio\n  );\n  const pnl = calculatePnl(price, volume, multiplier, cost);\n  const withdrawable = max(bg(margin).plus(pnl).minus(held.times(1.02)), bg(0));\n  return withdrawable;\n};\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = bg(cost).minus(margin).div(volume).div(multiplier);\n  let res = bg(volume).gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  volume,\n  liquidity,\n  tradersNetVolume,\n  multiplier,\n  minPoolMarginRatio,\n  minInitialMarginRatio,\n  newVolume,\n  amount\n) => {\n  const minMargin = bg(volume)\n    .plus(newVolume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(minInitialMarginRatio);\n  const poolMaxVolume = bg(liquidity)\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (bg(margin).plus(amount).gte(minMargin)) {\n    if (\n      bg(newVolume).lte(poolMaxVolume.minus(tradersNetVolume)) &&\n      bg(newVolume).gte(poolMaxVolume.negated().minus(tradersNetVolume))\n    ) {\n      return { success: true };\n    }\n    return { success: false, message: 'Pool insufficient liquidity' };\n  }\n  return { success: false, message: 'Trader insufficient margin' };\n};\n","// export const DERI_ENV=\"dev\"\nexport const DeriEnv = (() => {\n  let _deriEnv = 'dev';\n  return {\n    get: () => _deriEnv,\n    set: (value) => {\n      if (value === 'dev' || value === 'prod' || value === 'testnet') {\n        _deriEnv = value;\n      } else {\n        throw new Error(\"please use 'dev', 'testnet' or 'prod' for DeriEnv\");\n      }\n    },\n  };\n})();\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\n\n\nclass Type {\n  current = null;\n  \n  constructor(){\n    makeAutoObservable(this,{\n      current:observable,\n      setCurrent : action,\n      isOption : computed,\n      isFuture : computed\n    })\n  }\n\n  setCurrent(type){\n    this.current = type;\n  }\n\n  get isOption() {\n    return this.current === 'option'\n  }\n\n  get isFuture() {\n    return this.current === 'future'\n  }\n}\nexport default new Type()","import { makeAutoObservable, observable, action, computed } from \"mobx\";\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\n\nclass Version {\n  current = 'v2';\n\n  constructor(){\n    makeAutoObservable(this,{\n      current : observable,\n      setCurrent : action,\n      isV1 : computed,\n      isV2 : computed,\n      isV2Lite : computed,\n      zone : computed\n    })\n  }\n\n\n  setCurrent(version){\n    this.current = version;\n  }\n\n  switch(){\n    if(this.current === 'v1'){\n      this.setCurrent('v2')\n    } else {\n      this.setCurrent('v1')\n    }\n  }\n\n  get isV1() {\n    return this.current === 'v1'\n  }\n\n  get isV2(){\n    return this.current === 'v2'\n  }\n\n  get isV2Lite (){\n    return this.current === 'v2_lite'\n  }\n\n  get isOpen(){\n    return this.current === 'v2_lite_open'\n  }\n\n  get zone(){\n    if(this.isV2){\n      return 'MAIN'\n    } else if(this.isV2Lite) {\n      return 'INNO'\n    } else {\n      return 'OPEN'\n    }\n  }\n}\nexport default new Version()","import { getChainIds } from '../config/chain';\nimport Web3 from 'web3';\n\n// validate\nexport const normalizeChainId = (chainId) => {\n  const chainIds = getChainIds()\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`);\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (typeof address === 'string' && address.startsWith('0x') && address.length == 42 ) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`);\n  }\n};\n\nexport const validateArgs = (...args) =>\n  args.every((i) => !isNaN(parseFloat(i)));\n\nexport const validateObjectKeyExist = (keyList, val, valName) => {\n  const keys = Object.keys(val);\n  keyList.forEach((prop) => {\n    if (!keys.includes(prop)) {\n      throw new Error(\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\n      );\n    }\n  });\n};\nexport const validateIsArray = (val, valName) => {\n  if (!Array.isArray(val)) {\n    throw new Error(\n      `validateConfig(): property ${valName} is an array in the config.`\n    );\n  }\n};\n","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\n// lang\nexport const isObject = (value) => typeof value === 'object' && value !== null\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\nexport const isFunction = (value) => typeof value === 'function'\n\n// == bg\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const fromWei = (value) => bg(value, -18).toString()\n\nexport const toWei = (value) => bg(value, 18).toFixed(0).toString()\n\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\nexport const deriToString = (value) => bg(value).toString();\n\nexport const deriToBool = (value) => {\n  if (bg(value).toNumber() === 1) {\n    return true;\n  }\n  return false;\n};\n\nexport const naturalWithPercentage = (value) =>\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const formatBN = (bigNumber) =>\n  bigNumber.toFormat().replaceAll(',', '').toString();\n\n// == convert\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\n\n\n// == utils\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\n\n// == array set\nexport const isEqualSet = (set1, set2) => {\n  if (set1.size !== set2.size) return false;\n  for (let item of set1) {\n    if (!set2.has(item)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n\n// == contract gen\n// export const deleteIndexedKey = (obj) => {\n//   if (isObject(obj) && Object.keys(obj).length > 0) {\n//     const keys = Object.keys(obj);\n//     const intKeyCount = keys.reduce(\n//       (acc, k) => (intRegex.test(k) ? acc + 1 : acc),\n//       0\n//     );\n//     if (intKeyCount * 2 === keys.length) {\n//       let newObj = {};\n//       Object.keys(obj).forEach((k) => {\n//         if (!intRegex.test(k)) {\n//           newObj[k] = obj[k];\n//         }\n//       });\n//       return newObj;\n//     }\n//     return obj;\n//   } else {\n//     return obj;\n//   }\n// };\n\nexport const fromWeiForObject = (obj, keyList = []) => {\n  return Object.keys(obj).reduce((acc, i) => {\n    if (keyList.includes(i)) {\n      acc[i] = fromWei(obj[i]);\n    } else {\n      acc[i] = obj[i];\n    }\n    return acc;\n  }, {});\n};\n\nexport const toNumberForObject = (obj, keyList = []) => {\n  return Object.keys(obj).reduce((acc, i) => {\n    if (keyList.includes(i)) {\n      acc[i] = bg(obj[i]).toNumber();\n    } else {\n      acc[i] = obj[i];\n    }\n    return acc;\n  }, {});\n};\n\n\n// for frontend to display symbols\nexport const sortOptionSymbols = (symbolList) => {\n  const symbolArr = symbolList\n    .map((s) => s.symbol)\n    .map((s) => {\n      return s.split('-');\n    });\n  const unique = (value, index, self) => self.indexOf(value) === index\n  const to2 = (i) => i < 10 ? `0${i}` : i\n  const symbol = symbolArr.map((s) => s[0]).filter(unique)\n  const direction = symbolArr.map((s) => s[2]).filter(unique)\n  const price = symbolArr\n    .map((s) => s[1])\n    .filter(unique)\n    .sort((a, b) => parseInt(b) - parseInt(a));\n  return symbolList.map((i, index) => {\n    const index1 =  symbol.indexOf(symbolArr[index][0]) + 1\n    const index2 =  to2(direction.indexOf(symbolArr[index][2]) + 1)\n    const index3 =  to2(price.indexOf(symbolArr[index][1]) + 1)\n    i.index = parseInt(`${index1}${index2}${index3}`)\n    return i\n  }).sort((a, b) => a.index - b.index).map((i) => {\n    delete i.index\n    return i\n  })\n}\n\n","import { DeriEnv } from '../config'\nimport { normalizeChainId } from '../utils/validate'\n\nexport const getPoolV1ConfigList = (env = 'dev') => {\n  // production environment\n  if (env === 'prod') {\n    return [\n      {\n        pool: '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '7906919',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '56',\n        type: 'perpetual',\n        version: 'v1',\n        versionId: 'v1',\n        retired: true,\n      },\n      {\n        pool: '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '6753399',\n        bTokenSymbol: 'BUSD',\n        symbol: 'COIN',\n        unit: 'COIN',\n        chainId: '56',\n        type: 'perpetual',\n        version: 'v1',\n        versionId: 'v1',\n        retired: true,\n      },\n      {\n        pool: '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '8005906',\n        bTokenSymbol: 'DERI',\n        symbol: 'iMEME',\n        unit: 'iMEME',\n        chainId: '56',\n        type: 'perpetual',\n        version: 'v1',\n        versionId: 'v1',\n        retired: true,\n      },\n      {\n        pool: '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548746',\n        bTokenSymbol: 'USDT',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        type: 'perpetual',\n        version: 'v1',\n        versionId: 'v1',\n        retired: true,\n      },\n      {\n        pool: '0x96a1F15676746b9339DBc185F277618359Ac6346',\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548827',\n        bTokenSymbol: 'BAC',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        type: 'perpetual',\n        version: 'v1',\n        versionId: 'v1',\n        retired: true,\n      },\n      {\n        pool: '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        initialBlock: '5220431',\n        bTokenSymbol: 'HUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '128',\n        type: 'perpetual',\n        version: 'v1',\n        versionId: 'v1',\n        retired: true,\n      },\n    ];\n  } else if (env === 'dev') {\n    return [\n      {\n        pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\n        bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n        pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\n        lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\n        initialBlock: '9378545',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '97',\n        type: 'perpetual',\n        version: 'v1',\n        versionId: 'v1',\n      },\n    ];\n  } else if (env === 'testnet') {\n    return [];\n  }\n};\n\n// export const getSlpContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n//         bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x0000000000000000000000000000000000000000',\n//         dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n//         MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n//         chainId: '1',\n//         bTokenSymbol: 'DERI-USDT SLP',\n//         symbol: '--',\n//       },\n//     ];\n//   }\n//   console.log('getSlpContractAddressConfig(): no config for dev environment');\n//   return [];\n// };\n\n// export const getClpContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n//         dToken: '0x0000000000000000000000000000000000000000',\n//         MiningVault: '0x0000000000000000000000000000000000000000',\n//         initialBlock: '6894880',\n//         chainId: '56',\n//         bTokenSymbol: 'CAKE-LP',\n//         symbol: '--',\n//         retired: true,\n//       },\n//     ];\n//   } else {\n//     return [];\n//   }\n// };\n// export const getClp2ContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x0000000000000000000000000000000000000000',\n//         dToken: '0x0000000000000000000000000000000000000000',\n//         MiningVault: '0x0000000000000000000000000000000000000000',\n//         initialBlock: '699498',\n//         chainId: '56',\n//         bTokenSymbol: 'CAKE-LP SYRUP',\n//         symbol: '--',\n//       },\n//     ];\n//   } else {\n//     return [];\n//   }\n// };\n\nexport const getLpConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n        type: 'slp',\n        isLp: true,\n      },\n      {\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        type: 'clp',\n        retired: true,\n        isLp: true,\n      },\n      {\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP SYRUP',\n        symbol: '--',\n        type: 'clp2',\n        isLp: true,\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getMiningVaultRouterConfig = (chainId) => {\n  const configs = [\n    {\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\n      chainId: '56',\n    },\n  ];\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\n  if (filteredConfig.length > 0) {\n    return filteredConfig[0].MiningVaultRouter;\n  } else {\n    throw new Error(\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\n    );\n  }\n};\n\nexport const getDeriConfigList= (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\n        bTokenSymbol: 'DERI',\n        chainId: '1',\n      },\n      {\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\n        bTokenSymbol: 'DERI',\n        chainId: '56',\n      },\n      {\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\n        bTokenSymbol: 'DERI',\n        chainId: '128',\n      },\n    ];\n  }\n  return [\n    {\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\n      bTokenSymbol: 'DERI',\n      chainId: '3',\n    },\n    {\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\n      bTokenSymbol: 'DERI',\n      chainId: '97',\n    },\n    {\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\n      bTokenSymbol: 'DERI',\n      chainId: '256',\n    },\n  ];\n};\n\nexport const getPreminingConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        bTokenSymbol: 'WBNB',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        bTokenSymbol: 'CAKE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        bTokenSymbol: 'AUTO',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        bTokenSymbol: 'WHT',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        bTokenSymbol: 'MDX',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        bTokenSymbol: 'SUSHI',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        bTokenSymbol: 'AAVE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        bTokenSymbol: 'DERI-USDT SLP',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n    ];\n  } else {\n    return []\n  }\n};\n\n\n// export const getSlpConfig = (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       pTokenAddress: pool[0].pToken,\n//       lTokenAddress: pool[0].lToken,\n//       dTokenAdress: pool[0].dToken,\n//       MinningVaultAddress: pool[0].MiningVault,\n//     };\n//   }\n//   console.log(\n//     `getSlpConfig(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\n// export const getClp2Config= (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       pTokenAddress: pool[0].pToken,\n//       lTokenAddress: pool[0].lToken,\n//       dTokenAdress: pool[0].dToken,\n//       MinningVaultAddress: pool[0].MiningVault,\n//     };\n//   }\n//   console.log(\n//     `getClp2Config(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\n// export const getClpConfig= (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       lTokenAddress: pool[0].lToken,\n//     };\n//   }\n//   console.log(\n//     `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\nexport const getLpConfig = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getLpConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n      type: pool[0].type,\n    };\n  }\n  console.log(\n    `getLpConfig(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getDeriConfig= (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pool = getDeriConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pool.length > 0) {\n    return {\n      deriAddress: pool[0].Deri,\n      wormholeAddress: pool[0].Wormhole,\n      bTokenSymbol: pool[0].bTokenSymbol,\n    };\n  }\n  console.log(\n    `getDeriConfig(): contract address is not found: ${chainId}`\n  );\n  return {};\n};\n\nexport const getMiningVaultConfig = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getPoolV1ConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pools.length > 0) {\n    if (pools[0].MiningVault) {\n      return pools[0].MiningVault;\n    }\n  }\n};\n\nexport const getPoolV1Config = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const env = DeriEnv.get()\n  const pools = getPoolV1ConfigList(env)\n    .concat(getPreminingConfigList(env))\n    .concat(getLpConfigList(env))\n    .filter((c) => c.chainId === chainId);\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n      bTokenSymbol: pool[0].bTokenSymbol,\n      symbol: pool[0].symbol,\n      unit: pool[0].unit,\n      initialBlock: pool[0].initialBlock,\n    };\n  } else {\n    throw new Error(\n      `getPoolV1Config(): contract address is not found: ${chainId} ${poolAddress}`\n    );\n  }\n}\n","export const factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}","import { databaseFactory, databaseAirdropFactory } from '../factory';\nimport {\n  toChecksumAddress,\n  getNetworkName,\n  deriToString,\n  deriToBool,\n  deriToNatural,\n  //getPoolContractAddress,\n} from '../utils';\nimport { getPoolV1Config } from '../config/pool_v1'\n// import { getLiquidityUsed } from \"./contractApi\";\n\nexport const getUserInfo = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v`,\n      `${userAddress}.claim.r`,\n      `${userAddress}.claim.s`,\n      `${userAddress}.claim.valid`,\n    ])\n    .catch((err) => console.log('getUserInfo', err));\n  if (res) {\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v: deriToString(v),\n      r,\n      s,\n      valid: deriToBool(valid),\n    };\n  }\n};\n\nexport const getUserInfoHarvest = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.harvest.lp`,\n      `${userAddress}.claim.harvest.trade`,\n    ])\n    .catch((err) => console.log('getUserInfoHarvest', err));\n  if (res) {\n    const [harvestLp, harvestTrade] = res;\n    return {\n      lp: deriToNatural(harvestLp).toString(),\n      trade: deriToNatural(harvestTrade).toString(),\n    };\n  }\n};\n\nexport const getUserInfoTotal = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([`${userAddress}.claim.total`])\n    .catch((err) => console.log('getUserInfoTotal', err));\n  if (res) {\n    const [total] = res;\n    return {\n      total: deriToNatural(total).toString(),\n    };\n  }\n};\n\n/**\n * Get user claim info from database\n * @async\n * @method\n * @param {string} userAddress - account address\n * @returns {Object} response\n * @returns {string} resposne.chainId\n * @returns {BigNumber} response.amount\n * @returns {string} response.deadline\n * @returns {string} response.nonce\n * @returns {string} response.v\n * @returns {string} response.r\n * @returns {string} response.s\n * @returns {bool} response.valid\n * @returns {BigNumber} response.lp\n * @returns {BigNumber} response.trade\n * @returns {string} response.total\n */\nexport const getUserInfoAll = async (userAddress) => {\n  const [userInfo, userInfoHarvest, userInfoTotal] = await Promise.all([\n    getUserInfo(userAddress),\n    getUserInfoHarvest(userAddress),\n    getUserInfoTotal(userAddress),\n  ]);\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\n};\n\n/**\n * Get pool liquidity\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {symbol} response.symbol\n */\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    //const { symbol } = getPoolV1Config(chainId, poolAddress)\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        //symbol,\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n  return {\n    liquidity: ''\n  }\n};\n\nexport const getPoolLiquidityAll = async (pools) => {\n  // use the dev database\n  const db = databaseFactory();\n  if (Array.isArray(pools)) {\n    const keys = pools.reduce((acc, pool) => {\n      if (pool.version === 'v2' && pool.bTokenId) {\n        return acc.concat([\n          `${pool.chainId}.${pool.pool}.liquidity${pool.bTokenId}`,\n        ]);\n      } else {\n        return acc.concat([`${pool.chainId}.${pool.pool}.liquidity`]);\n      }\n    }, []);\n    try {\n      const res = await db.getValues(keys);\n      if (res) {\n        return res.map((i) => deriToNatural(i));\n      }\n    } catch (err) {\n      console.log(err.toString());\n    }\n    return [];\n  }\n};\n\nexport const getPoolInfoApyAll = async (pools) => {\n  // use the dev database\n  const db = databaseFactory(true);\n  if (Array.isArray(pools)) {\n    const keys = pools.reduce((acc, pool) => {\n      const poolNetwork = getNetworkName(pool.chainId.toString());\n      if (pool.version === 'v2' && pool.bTokenId) {\n        return acc.concat([`${poolNetwork}.${pool.pool}.apy${pool.bTokenId}`]);\n      } else {\n        return acc.concat([`${poolNetwork}.${pool.pool}.apy`]);\n      }\n    }, []);\n    try {\n      console.log('keys', keys)\n      const res = await db.getValues(keys);\n      if (res) {\n        return res.map((i) => deriToNatural(i));\n      }\n    } catch (err) {\n      console.log(err.toString());\n    }\n    return [];\n  }\n};\n\n/**\n * Get pool apy\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.apy2`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, apy2, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        apy2: deriToNatural(apy2).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\n//   const db = databaseFactory(true);\n//   try {\n//     const poolNetwork = getNetworkName(chainId);\n//     const res = await db\n//       .getValues([\n//         `${poolNetwork}.${poolAddress}.apy`,\n//         `${poolNetwork}.${poolAddress}.apy2`,\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\n//       ])\n//       .catch((err) => console.log('getPoolInfoApy', err));\n//     if (res) {\n//       const [apy, apy2, volume1h, volume24h] = res;\n//       return {\n//         apy: deriToNatural(apy).toString(),\n//         apy2: deriToNatural(apy2).toString(),\n//         volume1h: deriToNatural(volume1h).toString(),\n//         volume24h: deriToNatural(volume24h).toString(),\n//       };\n//     }\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n/**\n * Get user info of the pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} userAddress\n * @returns {Object} response\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\n  const db = databaseFactory(true);\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\n  userAddress = toChecksumAddress(userAddress);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getUserInfoInPool', err));\n    if (res) {\n      const [volume1h, volume24h] = res;\n      return {\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\n  const db = databaseAirdropFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v1`,\n      `${userAddress}.claim.r1`,\n      `${userAddress}.claim.s1`,\n      `${userAddress}.claim.v2`,\n      `${userAddress}.claim.r2`,\n      `${userAddress}.claim.s2`,\n      `${userAddress}.claim.valid`,\n      // `${userAddress}.claim.harvest.lp`,\n      // `${userAddress}.claim.harvest.trade`,\n      // `${userAddress}.claim.total`,\n    ])\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\n  if (res) {\n    const [\n      chainId,\n      amount,\n      deadline,\n      nonce,\n      v1,\n      r1,\n      s1,\n      v2,\n      r2,\n      s2,\n      valid,\n      // harvestLp,\n      // harvestTrade,\n      // total,\n    ] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v1: deriToString(v1),\n      r1,\n      s1,\n      v2: deriToString(v2),\n      r2,\n      s2,\n      valid: deriToBool(valid),\n      // lp: deriToNatural(harvestLp),\n      // trade: deriToNatural(harvestTrade),\n      // total: deriToString(total),\n    };\n  }\n};\n","// this file is generated by script, don't modify it !!!\nexport const pancakePairAbi = [\n  {\n    \"inputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount0\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount1\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"Burn\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount0\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount1\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount0In\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount1In\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount0Out\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount1Out\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"Swap\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint112\",\n        \"name\": \"reserve0\",\n        \"type\": \"uint112\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint112\",\n        \"name\": \"reserve1\",\n        \"type\": \"uint112\"\n      }\n    ],\n    \"name\": \"Sync\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"DOMAIN_SEPARATOR\",\n    \"outputs\": [{ \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"MINIMUM_LIQUIDITY\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"PERMIT_TYPEHASH\",\n    \"outputs\": [{ \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" },\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"name\": \"balanceOf\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\n    \"name\": \"burn\",\n    \"outputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"amount0\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint256\", \"name\": \"amount1\", \"type\": \"uint256\" }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"factory\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getReserves\",\n    \"outputs\": [\n      { \"internalType\": \"uint112\", \"name\": \"_reserve0\", \"type\": \"uint112\" },\n      { \"internalType\": \"uint112\", \"name\": \"_reserve1\", \"type\": \"uint112\" },\n      {\n        \"internalType\": \"uint32\",\n        \"name\": \"_blockTimestampLast\",\n        \"type\": \"uint32\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"_token0\", \"type\": \"address\" },\n      { \"internalType\": \"address\", \"name\": \"_token1\", \"type\": \"address\" }\n    ],\n    \"name\": \"initialize\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"kLast\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\n    \"name\": \"mint\",\n    \"outputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"liquidity\", \"type\": \"uint256\" }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"name\": \"nonces\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" },\n      { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint256\", \"name\": \"deadline\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" },\n      { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" },\n      { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" }\n    ],\n    \"name\": \"permit\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"price0CumulativeLast\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"price1CumulativeLast\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\n    \"name\": \"skim\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"amount0Out\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint256\", \"name\": \"amount1Out\", \"type\": \"uint256\" },\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\n      { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }\n    ],\n    \"name\": \"swap\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"sync\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"token0\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"token1\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" },\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { pancakePairAbi } from '../abi/pancakePairAbi.js'\n\nexport class PancakePair extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, pancakePairAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async DOMAIN_SEPARATOR() {\n  //    const res = await this._call('DOMAIN_SEPARATOR', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async MINIMUM_LIQUIDITY() {\n  //    const res = await this._call('MINIMUM_LIQUIDITY', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async PERMIT_TYPEHASH() {\n  //    const res = await this._call('PERMIT_TYPEHASH', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async allowance(, ) {\n  //    const res = await this._call('allowance', [, ])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async balanceOf() {\n  //    const res = await this._call('balanceOf', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async decimals() {\n  //    const res = await this._call('decimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async factory() {\n  //    const res = await this._call('factory', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getReserves() {\n    const res = await this._call('getReserves', [])\n    return deleteIndexedKey(res)\n  }\n  //  async kLast() {\n  //    const res = await this._call('kLast', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  //  async nonces() {\n  //    const res = await this._call('nonces', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async price0CumulativeLast() {\n    const res = await this._call('price0CumulativeLast', [])\n    return deleteIndexedKey(res)\n  }\n  async price1CumulativeLast() {\n    const res = await this._call('price1CumulativeLast', [])\n    return deleteIndexedKey(res)\n  }\n  //  async symbol() {\n  //    const res = await this._call('symbol', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async token0() {\n  //    const res = await this._call('token0', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async token1() {\n  //    const res = await this._call('token1', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async approve(accountAddress, spender, value) {\n  //    return await this._transact('approve', [spender, value], accountAddress)\n  //  }\n  //  async burn(accountAddress, to) {\n  //    return await this._transact('burn', [to], accountAddress)\n  //  }\n  //  async initialize(accountAddress, _token0, _token1) {\n  //    return await this._transact('initialize', [_token0, _token1], accountAddress)\n  //  }\n  //  async mint(accountAddress, to) {\n  //    return await this._transact('mint', [to], accountAddress)\n  //  }\n  //  async permit(accountAddress, owner, spender, value, deadline, v, r, s) {\n  //    return await this._transact('permit', [owner, spender, value, deadline, v, r, s], accountAddress)\n  //  }\n  //  async skim(accountAddress, to) {\n  //    return await this._transact('skim', [to], accountAddress)\n  //  }\n  //  async swap(accountAddress, amount0Out, amount1Out, to, data) {\n  //    return await this._transact('swap', [amount0Out, amount1Out, to, data], accountAddress)\n  //  }\n  //  async sync(accountAddress) {\n  //    return await this._transact('sync', [], accountAddress)\n  //  }\n  //  async transfer(accountAddress, to, value) {\n  //    return await this._transact('transfer', [to, value], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, value) {\n  //    return await this._transact('transferFrom', [from, to, value], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { processMethod } from \"../../shared/utils/derijsnext.js\";\nimport { bg } from \"../../shared/utils/index.js\";\nimport { MAX_UINT256} from '../config'\nimport { PancakePair } from \"./gen/PancakePair.js\";\n\nconst isUnlocked = (klass) => {\n  klass.prototype[\"isUnlocked\"] = async function (accountAddress, poolAddress) {\n    const allowance = await this.allowance(accountAddress, poolAddress)\n    //console.log(accountAddress, poolAddress)\n    const res = bg(allowance).gt(0)\n    return res\n  };\n  return klass\n};\n\nconst unlock = (klass) => {\n  klass.prototype['unlock'] = async function (accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  };\n  return klass;\n};\n\nconst getPrice = (klass) => {\n  klass.prototype['getPrice'] = async function () {\n    if (this.contractAddress === '0xE1cC9FCF36f60479F21ACcB3E23Cb2B608679f4d') {\n      return '1';\n    }\n    const [\n      isQuoteToken0,\n      qDecimals,\n      bDecimals,\n      pair,\n      priceCumulativeLast1,\n      priceCumulativeLast2,\n      timestampLast1,\n      timestampLast2,\n    ] = await Promise.all([\n      this.isQuoteToken0(),\n      this.qDecimals(),\n      this.bDecimals(),\n      this.pair(),\n      this.priceCumulativeLast1(),\n      this.priceCumulativeLast2(),\n      this.timestampLast1(),\n      this.timestampLast2(),\n    ]);\n\n    const pancakePair = new PancakePair(this.chainId, pair);\n    let reserveQ, reserveB, timestamp;\n    if (isQuoteToken0) {\n      const res = await pancakePair.getReserves();\n      reserveQ = res._reserve0;\n      reserveB = res._reserve1;\n      timestamp = res._blockTimestampLast;\n    } else {\n      const res = await pancakePair.getReserves();\n      reserveB = res._reserve0;\n      reserveQ = res._reserve1;\n      timestamp = res._blockTimestampLast;\n    }\n    const [price0CumulativeLast, price1CumulativeLast] = await Promise.all([\n      pancakePair.price0CumulativeLast(),\n      pancakePair.price1CumulativeLast(),\n    ]);\n    let tmpPairState = {};\n\n    if (timestamp !== timestampLast2) {\n      tmpPairState.priceCumulativeLast1 = priceCumulativeLast2;\n      tmpPairState.timestampLast1 = timestampLast2;\n      tmpPairState.priceCumulativeLast2 = isQuoteToken0\n        ? price0CumulativeLast\n        : price1CumulativeLast;\n      tmpPairState.timestampLast2 = timestamp;\n    } else {\n      tmpPairState = {\n        priceCumulativeLast1,\n        priceCumulativeLast2,\n        timestampLast1,\n        timestampLast2,\n      };\n    }\n\n    let price;\n    const diff = bg(qDecimals).minus(bDecimals);\n    if (tmpPairState.timestampLast1 !== '0') {\n      //console.log('not equal')\n      price = bg(tmpPairState.priceCumulativeLast2)\n        .minus(tmpPairState.priceCumulativeLast1)\n        .div(bg(tmpPairState.timestampLast2).minus(tmpPairState.timestampLast1))\n        .times(bg(10).pow(diff))\n        .div(bg(2).pow(112));\n    } else {\n      //console.log('equal')\n      price = bg(reserveB).times(bg(10).pow(diff)).div(reserveQ).toString();\n    }\n    return price;\n  };\n  return klass\n}\n\nexport const ERC20Adapter = (klass) => {\n    klass = processMethod(klass, 'totalSupply');\n    //klass = processMethod(klass, 'balanceOf'); // use ERC20.decimals\n\n    klass = isUnlocked(klass);\n    klass = unlock(klass);\n    return klass\n}\n\nexport const chainlinkOracleAdapter= (klass) => {\n    klass = processMethod(klass, 'getPrice');\n    return klass\n}\n\nexport const offChainOracleAdapter= (klass) => {\n    klass = processMethod(klass, 'getPrice');\n    return klass\n}\n\nexport const offChainVolatilityOracleAdapter= (klass) => {\n    klass = processMethod(klass, 'getVolatility');\n    return klass\n}\n\nexport const bTokenOracle1Adapter = (klass) => {\n  //klass = processMethod(klass, 'getPrice');\n  klass = getPrice(klass);\n  return klass;\n};\n\n// export const bTokenSwapper1Adapter = (klass) => {\n//   //klass = processMethod(klass, 'getPrice');\n//   return klass;\n// };\n\nexport const pancakePairAdapter = (klass) => {\n  //klass = processMethod(klass, 'getPrice');\n  return klass;\n};","// this file is generated by script, don't modify it !!!\nexport const TERC20Abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_name\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"_decimals\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\nimport { TERC20Abi } from '../abi/TERC20Abi.js'\n\nexport class TERC20 extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, TERC20Abi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async allowance(owner, spender) {\n    const res = await this._call('allowance', [owner, spender])\n    return deleteIndexedKey(res)\n  }\n  async _balanceOf(account) {\n    return await this._call('balanceOf', [account])\n  }\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n  async decimals() {\n    const res = await this._call('decimals', [])\n    return deleteIndexedKey(res)\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async approve(accountAddress, spender, amount) {\n    return await this._transact('approve', [spender, amount], accountAddress)\n  }\n  //  async burn(accountAddress, account, amount) {\n  //    return await this._transact('burn', [account, amount], accountAddress)\n  //  }\n  async mint(accountAddress, account, amount) {\n    return await this._transact('mint', [account, amount], accountAddress)\n  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const ERC20Abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"pure\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\nimport { ERC20Abi } from '../abi/ERC20Abi.js'\n\nexport class ERC20 extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, ERC20Abi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async allowance(owner, spender) {\n    const res = await this._call('allowance', [owner, spender])\n    return deleteIndexedKey(res)\n  }\n  async _balanceOf(account) {\n    return await this._call('balanceOf', [account])\n  }\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals).toString();\n  }\n\n   async decimals() {\n     const res = await this._call('decimals', [])\n     return deleteIndexedKey(res)\n   }\n   async name() {\n     const res = await this._call('name', [])\n     return deleteIndexedKey(res)\n   }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async approve(accountAddress, spender, amount) {\n    return await this._transact('approve', [spender, amount], accountAddress)\n  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const chainlinkOracleAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"feed_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"feed\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"feedDecimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { chainlinkOracleAbi } from '../abi/chainlinkOracleAbi.js'\n\nexport class ChainlinkOracle extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, chainlinkOracleAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async decimals() {\n  //    const res = await this._call('decimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async feed() {\n  //    const res = await this._call('feed', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async feedDecimals() {\n  //    const res = await this._call('feedDecimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getPrice() {\n    const res = await this._call('getPrice', [])\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n\n\n}","// this file is generated by script, don't modify it !!!\nexport const offChainOracleAbi = [\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'symbol_',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'signer_',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'delayAllowance_',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    inputs: [],\n    name: 'delayAllowance',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getPrice',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'price',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'delayAllowance_',\n        type: 'uint256',\n      },\n    ],\n    name: 'setDelayAllowance',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'signer_',\n        type: 'address',\n      },\n    ],\n    name: 'setSigner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'signer',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'symbol',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'timestamp',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'timestamp_',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'price_',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint8',\n        name: 'v_',\n        type: 'uint8',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'r_',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 's_',\n        type: 'bytes32',\n      },\n    ],\n    name: 'updatePrice',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  // for old offchain oracle\n  {\n    inputs: [],\n    name: 'signatory',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { offChainOracleAbi } from '../abi/offChainOracleAbi.js'\n\nexport class OffChainOracle extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, offChainOracleAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async delayAllowance() {\n  //    const res = await this._call('delayAllowance', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getPrice() {\n    const res = await this._call('getPrice', [])\n    return deleteIndexedKey(res)\n  }\n  //  async price() {\n  //    const res = await this._call('price', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async signer() {\n    await this._init()\n    //const res = await this._call('signer', [])\n    const res = await this.contract.methods.signer().call()\n    return deleteIndexedKey(res)\n  }\n  // for old offchain oracle\n  async signatory() {\n    await this._init()\n    //const res = await this._call('signatory',[])\n    const res = await this.contract.methods.signatory().call()\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n\n  //  async timestamp() {\n  //    const res = await this._call('timestamp', [])\n  //    return deleteIndexedKey(res)\n  //  }\n\n  // tx\n  //  async setDelayAllowance(accountAddress, delayAllowance_) {\n  //    return await this._transact('setDelayAllowance', [delayAllowance_], accountAddress)\n  //  }\n  //  async setSigner(accountAddress, signer_) {\n  //    return await this._transact('setSigner', [signer_], accountAddress)\n  //  }\n  //  async updatePrice(accountAddress, timestamp_, price_, v_, r_, s_) {\n  //    return await this._transact('updatePrice', [timestamp_, price_, v_, r_, s_], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const offChainVolatilityOracleAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"signer_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"delayAllowance_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"delayAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getVolatility\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"delayAllowance_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setDelayAllowance\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"signer_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setSigner\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"signer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"timestamp\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"timestamp_\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"volatility_\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"v_\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"r_\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"s_\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"updateVolatility\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"volatility\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { offChainVolatilityOracleAbi } from '../abi/offChainVolatilityOracleAbi.js'\n\nexport class OffChainVolatilityOracle extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, offChainVolatilityOracleAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async delayAllowance() {\n  //    const res = await this._call('delayAllowance', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getVolatility() {\n    const res = await this._call('getVolatility', [])\n    return deleteIndexedKey(res)\n  }\n  async signer() {\n    const res = await this._call('signer', [])\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  //  async timestamp() {\n  //    const res = await this._call('timestamp', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async volatility() {\n  //    const res = await this._call('volatility', [])\n  //    return deleteIndexedKey(res)\n  //  }\n\n  // tx\n  //  async setDelayAllowance(accountAddress, delayAllowance_) {\n  //    return await this._transact('setDelayAllowance', [delayAllowance_], accountAddress)\n  //  }\n  //  async setSigner(accountAddress, signer_) {\n  //    return await this._transact('setSigner', [signer_], accountAddress)\n  //  }\n  //  async updateVolatility(accountAddress, timestamp_, volatility_, v_, r_, s_) {\n  //    return await this._transact('updateVolatility', [timestamp_, volatility_, v_, r_, s_], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const TERC20MintLimitAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_name\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"_decimals\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"controller\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"controllerBurn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"controllerMint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"mintAmount\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"mintPeriod\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"mintTimestamp\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMintAmount\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"period\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMintPeriod\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\nimport { TERC20MintLimitAbi } from '../abi/TERC20MintLimitAbi.js'\n\nexport class TERC20MintLimit extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, TERC20MintLimitAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async allowance(owner, spender) {\n    const res = await this._call('allowance', [owner, spender])\n    return deleteIndexedKey(res)\n  }\n  async _balanceOf() {\n    return await this._call('balanceOf', [])\n  }\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n  //  async controller() {\n  //    const res = await this._call('controller', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async decimals() {\n    const res = await this._call('decimals', [])\n    return deleteIndexedKey(res)\n  }\n  //  async mintAmount() {\n  //    const res = await this._call('mintAmount', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async mintPeriod() {\n  //    const res = await this._call('mintPeriod', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async mintTimestamp() {\n  //    const res = await this._call('mintTimestamp', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async approve(accountAddress, spender, amount) {\n    return await this._transact('approve', [spender, amount], accountAddress)\n  }\n  //  async burn(accountAddress) {\n  //    return await this._transact('burn', [], accountAddress)\n  //  }\n  //  async controllerBurn(accountAddress, account, amount) {\n  //    return await this._transact('controllerBurn', [account, amount], accountAddress)\n  //  }\n  //  async controllerMint(accountAddress, account, amount) {\n  //    return await this._transact('controllerMint', [account, amount], accountAddress)\n  //  }\n  async mint(accountAddress) {\n    return await this._transact('mint', [], accountAddress)\n  }\n  //  async setMintAmount(accountAddress, amount) {\n  //    return await this._transact('setMintAmount', [amount], accountAddress)\n  //  }\n  //  async setMintPeriod(accountAddress, period) {\n  //    return await this._transact('setMintPeriod', [period], accountAddress)\n  //  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const bTokenOracle1Abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"pair_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"quote_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"base_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"isQuoteToken0_\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"bDecimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"base\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isQuoteToken0\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pair\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceCumulativeLast1\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceCumulativeLast2\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"qDecimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"quote\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"timestampLast1\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"timestampLast2\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { bTokenOracle1Abi } from '../abi/bTokenOracle1Abi.js'\n\nexport class BTokenOracle1 extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, bTokenOracle1Abi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async bDecimals() {\n    const res = await this._call('bDecimals', [])\n    return deleteIndexedKey(res)\n  }\n  //  async base() {\n  //    const res = await this._call('base', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async isQuoteToken0() {\n    const res = await this._call('isQuoteToken0', [])\n    return deleteIndexedKey(res)\n  }\n  async pair() {\n    const res = await this._call('pair', [])\n    return deleteIndexedKey(res)\n  }\n  async priceCumulativeLast1() {\n    const res = await this._call('priceCumulativeLast1', [])\n    return deleteIndexedKey(res)\n  }\n  async priceCumulativeLast2() {\n    const res = await this._call('priceCumulativeLast2', [])\n    return deleteIndexedKey(res)\n  }\n  async qDecimals() {\n    const res = await this._call('qDecimals', [])\n    return deleteIndexedKey(res)\n  }\n  //  async quote() {\n  //    const res = await this._call('quote', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async timestampLast1() {\n    const res = await this._call('timestampLast1', [])\n    return deleteIndexedKey(res)\n  }\n  async timestampLast2() {\n    const res = await this._call('timestampLast2', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async getPrice(accountAddress) {\n  //    return await this._transact('getPrice', [], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { contractFactory } from '../../shared/utils/derijsnext.js';\nimport { ERC20Adapter, chainlinkOracleAdapter, offChainOracleAdapter, offChainVolatilityOracleAdapter, bTokenSwapper1Adapter, pancakePairAdapter, bTokenOracle1Adapter } from './adapter.js';\n\nimport { TERC20 } from './gen/TERC20.js';\nimport { ERC20 } from './gen/ERC20.js';\nimport { ChainlinkOracle} from './gen/ChainlinkOracle.js';\nimport { OffChainOracle} from './gen/OffChainOracle.js';\nimport { OffChainVolatilityOracle} from './gen/OffChainVolatilityOracle.js';\nimport { TERC20MintLimit } from './gen/TERC20MintLimit.js';\n//import { BTokenSwapper1 } from './gen/BTokenSwapper1.js';\nimport { PancakePair } from './gen/PancakePair.js';\nimport { BTokenOracle1 } from './gen/BTokenOracle1.js';\n\n// ERC20\nexport const ERC20Factory = contractFactory(ERC20Adapter(ERC20));\nexport const TERC20Factory = contractFactory(ERC20Adapter(TERC20)); // for test only\nexport const TERC20MintLimitFactory = contractFactory(ERC20Adapter(TERC20MintLimit)); // for test only\n\n\n// oracle\nexport const symbolOracleChainlinkFactory = contractFactory(chainlinkOracleAdapter(ChainlinkOracle));\nexport const offChainOracleFactory = contractFactory(offChainOracleAdapter(OffChainOracle));\nexport const volatilityOracleOffChainFactory = contractFactory(offChainVolatilityOracleAdapter(OffChainVolatilityOracle));\n\n// swapper\nexport const bTokenOracle1Factory = contractFactory(bTokenOracle1Adapter(BTokenOracle1))\n//export const bTokenSwapper1Factory = contractFactory(bTokenSwapper1Adapter(BTokenSwapper1))\nexport const pancakePairFactory = contractFactory(pancakePairAdapter(PancakePair))\n\n","// versions\n//export const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open']\nexport const LITE_VERSIONS = ['v2_lite', 'v2_lite_open'];\nexport const LITE_AND_OPTION_VERSIONS = [...LITE_VERSIONS, 'option'];\nexport const VERSIONS = ['v2', ...LITE_AND_OPTION_VERSIONS];\nexport const ALL_EXCEPT_OPEN_VERSIONS = [\n  'v2',\n  'v2_lite',\n  'option',\n];\nexport const PRESERVED_SYMBOLS = ['BTCUSD', 'ETHUSD', 'BNBUSD'];\n","/* eslint-disable */\n// base token contract abi\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const TERC20Abi = [{ \"inputs\": [{ \"internalType\": \"string\", \"name\": \"_name\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"_symbol\", \"type\": \"string\" }, { \"internalType\": \"uint8\", \"name\": \"_decimals\", \"type\": \"uint8\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n// oracle contract abis\nexport const symbolOracleOffChainAbi = [ {\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, { \"inputs\": [], \"name\": \"signer\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, {\"inputs\":[],\"name\":\"signatory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"} ]\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feed_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\n// activity contract abis\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-enable */","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\nexport const getChainIds = () => {\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\n};\n\nexport const getChainProviderUrls = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://polygon-rpc.com',\n        //'https://rpc-mainnet.matic.network',\n        'https://rpc-mainnet.maticvigil.com',\n        //'https://rpc-mainnet.matic.quiknode.pro',\n        'https://matic-mainnet.chainstacklabs.com',\n        // 'https://matic-mainnet-full-rpc.bwarelabs.com',\n        // 'https://matic-mainnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '137',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mumbai.matic.today',\n        'https://rpc-mumbai.maticvigil.com',\n        'https://matic-mumbai.chainstacklabs.com',\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '80001',\n    },\n  ];\n\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\n  }\n}\n\nexport const getDailyBlockNumberConfig = () => {\n  // let chainBlockNumberList = [\n  //   '2367422',\n  //   '2367422',\n  //   '10497304',\n  //   '10497304',\n  //   '10511369',\n  //   '10511369',\n  //   '14747860',\n  //   '14747860',\n  // ];\n\n  // compute matic aunual block number: block height(16309458, 10000000)\n  let chainBlockNumberList = [\n    '6486',\n    '6486',\n    '28759',\n    '28759',\n    '28798',\n    '28798',\n    '40405',\n    '40405',\n  ];\n  return getChainIds().reduce((accum, i, index) => {\n    accum[i] = chainBlockNumberList[index];\n    return accum;\n  }, {});\n};\n\n// MAX UINT/INT256\n// hex(2**256-1)\nexport const MAX_UINT256 =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n// hex((2**255 -1) // 10**18)\nexport const MAX_INT256 =\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\n\n","export const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\nexport const perpetualPoolLiteManagerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolTemplate_\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector_\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"protocolFeeCutRatio_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"creator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"CreatePool\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pairedTokenAddress\", \"type\": \"address\" } ], \"name\": \"createPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getNumPools\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"poolTemplate\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"pools\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCollector\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCutRatio\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const chainlinkFeedAbi = [ {\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, {\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","import { ContractBase } from '../../shared/contract/contract_base';\nimport { chainlinkFeedAbi } from './abis';\n\nexport class ChainlinkFeed extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, chainlinkFeedAbi);\n  }\n  async symbol() {\n    const res = await this._call('description');\n    return res.split('/').map((s) => s.trim()).join('')\n  }\n}\n","// this file is generated by script, don't modify it !!!\nexport const oracleFactoryChainlinkAbi = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"AddFeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"CreateOracle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"symbols\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"feeds\",\"type\":\"address[]\"}],\"name\":\"addFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { oracleFactoryChainlinkAbi } from '../abi/oracleFactoryChainlinkAbi.js'\n\nexport class OracleFactoryChainlink extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, oracleFactoryChainlinkAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async getFeed(symbol) {\n    const res = await this._call('getFeed', [symbol])\n    return deleteIndexedKey(res)\n  }\n  async getOracle(symbol) {\n    const res = await this._call('getOracle', [symbol])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async createOracle(accountAddress, symbol) {\n    return await this._transact('createOracle', [symbol], accountAddress)\n  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const oracleFactoryOffChainAbi = [\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"symbol\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"signer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"delayAllowance\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"oracle\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"CreateOracleOffChain\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"symbol\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"signer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"delayAllowance\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"oracle\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"CreateVolatilityOracleOffChain\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"createOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"createVolatilityOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\n    ],\n    \"name\": \"getOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\n    ],\n    \"name\": \"getVolatilityOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { oracleFactoryOffChainAbi } from '../abi/oracleFactoryOffChainAbi.js'\n\nexport class OracleFactoryOffChain extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, oracleFactoryOffChainAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async getOracle(symbol) {\n    const res = await this._call('getOracle', [symbol])\n    return deleteIndexedKey(res)\n  }\n  async getVolatilityOracle(symbol) {\n    const res = await this._call('getVolatilityOracle', [symbol])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async createOracle(accountAddress, symbol, signer, delayAllowance) {\n    return await this._transact('createOracle', [symbol, signer, delayAllowance], accountAddress)\n  }\n  async createVolatilityOracle(accountAddress, symbol, signer, delayAllowance) {\n    return await this._transact('createVolatilityOracle', [symbol, signer, delayAllowance], accountAddress)\n  }\n\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenLiteAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","import {\n  bTokenFactory,\n  deriToNatural,\n  fetchJson,\n  getHttpBase,\n} from '../../shared';\nimport { ContractBase } from '../../shared/contract/contract_base';\nimport { normalizeSymbolUnit } from '../../shared/config/token';\nimport { perpetualPoolLiteAbi } from './abis';\nimport { PTokenLite } from './p_token';\n\nexport class PerpetualPoolLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n  }\n\n  async init() {\n    await this._init();\n    if (!this.pTokenAddress|| !this.pToken ) {\n      await  this.updateAddresses()\n      // console.log(this.addresses, this.parameters)\n      //this.bToken = bTokenFactory(this.chainId, bTokenAddress);\n      //this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress);\n\n    }\n  }\n\n\n  async updateAddresses() {\n    if (!this.bTokenAddress || !this.pTokenAddress) {\n     const res = await this._call('getAddresses');\n    // update this state\n     this.bTokenAddress = res.bTokenAddress;\n     this.lTokenAddress= res.lTokenAddress;\n     this.pTokenAddress= res.pTokenAddress;\n    }\n  }\n\n  async controller() {\n    const res = await this._call('controller');\n    return res\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId]);\n    return {\n      symbol: res.symbol,\n      oracleAddress: res.oracleAddress,\n      multiplier: deriToNatural(res.multiplier),\n      feeRatio: deriToNatural(res.feeRatio),\n      fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n      price: deriToNatural(res.price),\n      cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n      tradersNetVolume: deriToNatural(res.tradersNetVolume),\n      tradersNetCost: deriToNatural(res.tradersNetCost),\n    };\n  }\n  async getSymbols() {\n    await this.updateAddresses()\n    if (!this.pToken) {\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\n    }\n    // update this state\n    this.symbolIds = await this.pToken.getActiveSymbolIds()\n    this.symbols = await Promise.all(\n      this.symbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\n    );\n    return this.symbols\n  }\n  async getBTokenSymbol() {\n    await this.updateAddresses()\n    if (!this.bToken) {\n      this.bToken = bTokenFactory(this.chainId, this.bTokenAddress)\n    }\n    // update this state\n    this.bTokenSymbol = await this.bToken.symbol()\n    return this.bTokenSymbol\n  }\n  async getPoolExtraInfo() {\n    const url = `${getHttpBase()}/pool_extra_info/${this.contractAddress}`\n    const res = await fetchJson(url)\n    //console.log(res)\n    if (res.success) {\n      return res.data\n    } else {\n\n      console.log(`-- getInitialBlock(): ${url} => ${res.message}`)\n      return  {\n        block_number: '1000000000',\n        version: '',\n      }\n    }\n  }\n  async getConfig() {\n    const [bToken, symbols, extraInfo] = await Promise.all([\n      this.getBTokenSymbol(),\n      this.getSymbols(),\n      this.getPoolExtraInfo(),\n    ])\n    return {\n      pool: this.contractAddress,\n      pToken: this.pTokenAddress,\n      lToken: this.lTokenAddress,\n      bToken: this.bTokenAddress,\n      bTokenSymbol: bToken,\n      symbols: symbols.map((s, index) => ({\n        symbolId: this.symbolIds[index],\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      initialBlock:extraInfo.block_number,\n      type: 'perpetual',\n      version:extraInfo.version,\n      versionId: 'v2_lite',\n      chainId: this.chainId,\n    }\n  }\n\n  // tx\n  async addSymbol(accountAddress, parameters) {\n    return await this._transact('addSymbol', parameters, accountAddress)\n  }\n\n  async removeSymbol(accountAddress, symbolId) {\n    return await this._transact('removeSymbol', [symbolId], accountAddress)\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { perpetualPoolLiteManagerAbi } from './abis.js'\n\nexport class PerpetualPoolLiteManager extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteManagerAbi)\n  }\n\n  // query\n  async getNumPools() {\n    const res = await this._call('getNumPools', [])\n    return res\n  }\n  async poolTemplate() {\n    const res = await this._call('poolTemplate', [])\n    return res\n  }\n  async pools(poolId) {\n    const res = await this._call('pools', [poolId])\n    return res\n  }\n  async protocolFeeCollector() {\n    const res = await this._call('protocolFeeCollector', [])\n    return res\n  }\n  async protocolFeeCutRatio() {\n    const res = await this._call('protocolFeeCutRatio', [])\n    return res\n  }\n\n  // tx\n  async createPool(accountAddress, parameters, bTokenAddress, pairedTokenAddress) {\n    return await this._transact('createPool', [parameters, bTokenAddress, pairedTokenAddress], accountAddress)\n  }\n\n}","import { ContractBase } from '../../shared/contract/contract_base';\nimport { perpetualPoolLiteViewerAbi } from './abis';\n\nexport class PerpetualPoolLiteViewer extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\n  }\n  async getOffChainOracleSymbols(poolAddress) {\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\n    //return res.filter((s) => s && s !== '');\n    return res\n  }\n}\n","import { factory } from '../shared/utils/factory'\nimport { OracleFactoryChainlinkAdapter, OracleFactoryOffChainAdapter } from './adapter'\nimport { ChainlinkFeed } from './contract/chainlink_feed'\nimport { OracleFactoryChainlink } from './contract/gen/OracleFactoryChainlink'\nimport { OracleFactoryOffChain } from './contract/gen/OracleFactoryOffChain'\nimport { PerpetualPoolLite } from './contract/perpetual_pool'\nimport { PerpetualPoolLiteManager } from './contract/perpetual_pool_lite_manager'\nimport { PerpetualPoolLiteViewer } from './contract/perpetual_pool_lite_viewer'\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)\nexport const perpetualPoolLiteManagerFactory = factory(PerpetualPoolLiteManager)\nexport const chainlinkFeedFactory = factory(ChainlinkFeed)\n\n\nexport const oracleFactoryChainlinkFactory = factory(OracleFactoryChainlinkAdapter(OracleFactoryChainlink))\nexport const oracleFactoryOffChainFactory = factory(OracleFactoryOffChainAdapter(OracleFactoryOffChain))","import { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI);\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray]);\n  }\n}\n","//import { DatabaseBaseContract } from './database_base'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseWormholeContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI);\n  }\n\n  async signature(accountAddress) {\n    return await this._call('signature', [accountAddress])\n  }\n}\n","//import { DatabaseBaseContract } from './database_base'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseAirdropContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","import { DeriEnv } from './env';\nimport jsonConfig from '../resources/config.json';\nimport { VERSIONS } from './version';\n\nexport const getJsonConfig = (version, env) => {\n  env = env || DeriEnv.get();\n  // for browser and nodejs\n  let configs =\n    typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\n  if (configs[version] && VERSIONS.includes(version)) {\n    configs = configs[version];\n    if (['prod', 'dev', 'testnet'].includes(env)) {\n      if (configs && configs[env]) {\n        return configs[env];\n      }\n    }\n  } else {\n    throw new Error(\n      `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\n    );\n  }\n};\n","import { ContractBase } from \"../contract_base\";\nimport { symbolOracleOffChainAbi } from '../abis';\nimport { deriToNatural } from '../../utils';\n\nexport class SymbolOracleOffChain extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, symbolOracleOffChainAbi);\n  }\n  async getPrice() {\n    const res = await this._call('getPrice', []);\n    return deriToNatural(res);\n  }\n  async signer() {\n    await this._init();\n    const res = await this.contract.methods['signer']().call();\n    return res;\n  }\n  async signatory() {\n    await this._init();\n    const res = await this.contract.methods['signatory']().call();\n    return res;\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { wooOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WooOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wooOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  async getPrice() {\n    //console.log('hit woo oracle')\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}\n","import { isUsedRestOracle } from '../config/token';\nimport { RestOracle } from '../utils/oracle';\nimport { WrappedOracle } from '../contract/oracle/wrapped_oracle';\nimport { factory } from '../utils/factory';\nimport { SymbolOracleOffChain } from '../contract/oracle/symbol_oracle_off_chain';\nimport { WooOracle } from '../contract/oracle/woo_oracle';\n\nconst wooOracleAddresses = [\n  '0xC686B6336c0F949EAdFa5D61C4aAaE5Fe0687302',\n  '0x60Dda0aD29f033d36189bCe4C818fe9Ce3a95206',\n  '0xa356c0559e0DdFF9281bF8f061035E7097a84Fa4',\n]\n\nexport const oracleFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, symbol, decimal = '18') => {\n    const key = address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      if (isUsedRestOracle(symbol)) {\n        instanceMap[key] = RestOracle(symbol);\n      } else if (wooOracleAddresses.includes(address)) {\n        instanceMap[key] = wooOracleFactory(chainId, address, symbol, decimal);\n      } else if (['56', '137', '97', '80001'].includes(chainId)) {\n        instanceMap[key] = wrappedOracleFactory(chainId, address, symbol, decimal);\n      } else {\n        throw new Error(\n          `please setup oracle contract for the chain(${chainId})`\n        );\n      }\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const wrappedOracleFactory = factory(WrappedOracle);\nexport const wooOracleFactory = factory(WooOracle);\nexport const symbolOracleOffChainFactory = factory(SymbolOracleOffChain);\n","import { catchApiError } from \"../../shared/utils/api\"\nimport { DeriEnv } from \"../../shared/config/env\"\nimport { getJsonConfig } from \"../../shared/config/config\"\nimport { normalizeChainId, toChecksumAddress, validateObjectKeyExist } from \"../../shared/utils\"\nimport { poolProcessor, poolValidator } from \"../../shared/config/config_processor\"\nimport { fetchJson, getBlockInfo, getHttpBase, getPastEvents, getPoolViewerConfig } from \"../../shared\"\nimport { expandPoolConfigV2LiteOpen, getOracleFactoryChainlinkConfig, getPoolV2LiteManagerConfig, openPoolChainIds } from \"../config\"\nimport { oracleFactoryChainlinkFactory, perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory, perpetualPoolLiteViewerFactory } from \"../factory\"\n\nexport const getPoolOpenConfigList = async (...args) => {\n  return catchApiError(\n    async () => {\n      let configs = [];\n      const chainIds = openPoolChainIds()\n      configs = await chainIds.reduce(async (acc, chainId) => {\n        //console.log('chainId', chainId)\n        const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(\n          chainId\n        );\n        const poolManager = perpetualPoolLiteManagerFactory(\n          chainId,\n          poolManagerAddress\n        );\n        // get pool numbers\n        const poolNums = parseInt(await poolManager.getNumPools());\n        const numsArray = [...Array(poolNums).keys()];\n        // get pool addresses\n        const addresses = await Promise.all(\n          numsArray.reduce(\n            (acc, id) => acc.concat([poolManager.pools(id.toString())]),\n            []\n          )\n        );\n        // get pools config\n        const res = await Promise.all(\n          addresses.reduce(\n            (acc, address) =>\n              acc.concat([\n                perpetualPoolLiteFactory(chainId, address).getConfig(),\n              ]),\n            []\n          )\n        );\n        return acc.concat(res);\n      }, []);\n      return configs.sort((a,b) => parseInt(b.initialBlock) - parseInt(a.initialBlock));\n    },\n    args,\n    'getPoolOpenConfigList',\n    []\n  );\n};\n\nexport const getPoolOpenOracleList = async(...args) => {\n  return catchApiError(\n    async (chainId, accountAddress) => {\n    chainId = normalizeChainId(chainId)\n    const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\n    const oracleFactory = oracleFactoryChainlinkFactory(\n      chainId,\n      oracleFactoryConfig.address\n    );\n    await oracleFactory._init()\n    let eventBlock, oracles= [];\n    const res = await fetchJson(\n      `${getHttpBase()}/oracle/${chainId}/${accountAddress}`\n    );\n    if (res && res.success) {\n      eventBlock = parseInt(res.data.eventBlock);\n      if (res.data.oracles && Array.isArray(res.data.oracles)) {\n        oracles = res.data.oracles;\n      }\n      if (eventBlock === 0) {\n        eventBlock = parseInt(oracleFactoryConfig.initialBlock);\n      }\n      const toBlock = await getBlockInfo(chainId, 'latest');\n      // fetch online\n      let events = await getPastEvents(\n        chainId,\n        oracleFactory.contract,\n        'CreateOracle',\n        {},\n        eventBlock,\n        toBlock.number\n      );\n      if (events.length > 0) {\n        for (let i = 0; i < events.length; i++) {\n          const event = events[i];\n          const info = event.returnValues;\n          oracles.push({\n            chainId,\n            symbol: info.symbol,\n            address: info.oracle,\n            blockNumber: event.blockNumber,\n          });\n        }\n        return oracles\n          .sort((a, b) => parseInt(b.blockNumber) - parseInt(a.blockNumber))\n          .reduce((acc, i) => {\n            return acc.find((a) => a.symbol === i.symbol) ? acc : [...acc, i];\n          }, []);\n      } else {\n        return oracles\n      }\n    } else {\n      return [];\n    }\n      //return getOracleConfigList('v2_lite_open', DeriEnv.get()).filter((o) => o.chainId === chainId);\n    },\n    args,\n    'getPoolOpenOracleInfos',\n    []\n  );\n};\n\nexport const getPoolController = async(chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      return await perpetualPoolLite.controller();\n    },\n    [chainId, poolAddress],\n    'getPoolController',\n    ''\n  );\n}\nexport const isPoolController = async (chainId, poolAddress, controller) => {\n  chainId = normalizeChainId(chainId);\n  return catchApiError(\n    async (chainId, poolAddress, controller) => {\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      const poolController = await perpetualPoolLite.controller();\n      return (\n        toChecksumAddress(controller) === toChecksumAddress(poolController)\n      );\n    },\n    [chainId, poolAddress, controller],\n    'isPoolController',\n    false\n  );\n};\n\nexport const getExpandedPoolOpenConfigList = async () => {\n  const env = DeriEnv.get()\n  const version = 'v2_lite_open'\n  let config = getJsonConfig(version, env);\n\n  config.pools =  await getPoolOpenConfigList()\n  const pools = config.pools\n  if (pools && Array.isArray(pools)) {\n    for (let i = 0; i < pools.length; i++) {\n      poolProcessor[version](pools[i])\n      poolValidator[version](pools[i])\n    }\n  }\n  validateObjectKeyExist(['oracle'], config, 'oracle');\n  return expandPoolConfigV2LiteOpen(config);\n}\n\nexport const getPoolAllSymbolNames = async (chainId, poolAddress) => {\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      const viewerAddress = getPoolViewerConfig(chainId, 'v2_lite');\n      const poolViewer = perpetualPoolLiteViewerFactory(chainId, viewerAddress);\n      return await poolViewer.getOffChainOracleSymbols(poolAddress);\n    },\n    [chainId.toString(), poolAddress],\n    'getPoolAllSymbolNames ',\n    []\n  );\n};\n\nexport const getPoolAcitveSymbolIds = async (...args) => {\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      chainId = chainId.toString()\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPoolLite.init()\n      return await perpetualPoolLite.pToken.getActiveSymbolIds()\n    },\n    args,\n    'getPoolActiveSymbolIds',\n    []\n  );\n};\n\n\n// v2lite open config list cache\nexport const openConfigListCache = (() => {\n  let cache = {\n    data: [],\n    timestamp: 0,\n  };\n  return {\n    async update() {\n      const oldData = cache.data\n      try {\n        if (Date.now()/1000 - cache.timestamp >= 10) {\n        //if (Date.now()/1000 - cache.timestamp > 60) {\n          cache.data = await getPoolOpenConfigList()\n          cache.timestamp = Date.now()/1000\n          //res = 'v2 lite open config list is updated'\n        }\n      } catch(err) {\n        console.log(err)\n        cache.data = oldData\n        //res = `v2 lite open config list updating with error: ${err}`\n      }\n      // res && console.log(res)\n      return cache.data\n    },\n    updatedAt() {\n      return cache.timestamp\n    },\n    get() {\n      return cache.data\n    }\n  }\n})()\n","import {\n  getDBAddress,\n  getDBWormholeAddress,\n  getDBAirdropAddress,\n  DeriEnv,\n} from '../config';\nimport {\n  DatabaseAirdropContract,\n  DatabaseContract,\n  DatabaseWormholeContract,\n} from '../contract';\n\nexport const databaseFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseActivityFactory = (() => {\n  const databaseInstanceMap = {};\n  return () => {\n    const address = DeriEnv.get() === 'prod' ? '0x75E04C816F206939a92AE7B23015ce3ef21aE571' : '0x7C1267188379f57d92e640E519151229E1eA5565'\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseDeriVoteFactory = (() => {\n  const databaseInstanceMap = {};\n  return () => {\n    const address =\n      DeriEnv.get() === 'prod'\n        ? '0x9Ced1529C238bD36B3A05cECF979a30c0C40b286'\n        : '0x7C1267188379f57d92e640E519151229E1eA5565';\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseWormholeFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBWormholeAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseWormholeContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseAirdropFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAirdropAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    //console.log('---airdrop key', key)\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseAirdropContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n","import Web3 from 'web3';\nimport { normalizeChainId } from '../utils/validate';\nimport { getChainProviderUrl } from '../utils/chain';\nimport { isBrowser, isJsDom } from '../utils/convert';\n\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  let pending = {}\n  let walletChainId = null\n  return {\n    async get(chainId) {\n      chainId = normalizeChainId(chainId)\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\n        //console.log('hit web3 cache')\n        return web3InstanceMap[chainId];\n      }\n      // for mining page should not depends wallet network\n      if (!walletChainId && typeof window === 'object' && window.ethereum) {\n        walletChainId = await window.ethereum.request({ method: 'net_version' })\n      }\n      // using metaMask ethereum object\n      if (\n        isBrowser() &&\n        !isJsDom() &&\n        typeof window.ethereum === 'object' &&\n        walletChainId &&\n        chainId === walletChainId.toString()\n      ) {\n        //console.log('new ethereum web3 cache')\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\n        return web3InstanceMap[chainId];\n      } else {\n        if (pending[chainId]) {\n          // wait for init\n          let retry = 8\n          while (retry > 0) {\n            await delay(500)\n            if (Object.keys(web3InstanceMap).includes(chainId)) {\n              // console.log('hit web3 cache')\n              return web3InstanceMap[chainId];\n            } else {\n              retry -= 1\n            }\n          }\n          // timeout\n          const providerUrl = await getChainProviderUrl(chainId);\n          //console.log('new web3 cache')\n          web3InstanceMap[chainId] = new Web3(\n            new Web3.providers.HttpProvider(providerUrl)\n          );\n          return web3InstanceMap[chainId];\n        } else {\n          // first init\n          pending[chainId] = true\n          try {\n            const providerUrl = await getChainProviderUrl(chainId);\n            //console.log('new web3 cache')\n            web3InstanceMap[chainId] = new Web3(\n              new Web3.providers.HttpProvider(providerUrl)\n            );\n          } catch(err) {\n            console.log(err.toString())\n          } finally {\n            delete pending[chainId]\n          }\n          return web3InstanceMap[chainId];\n        }\n      }\n    },\n  };\n})();","\n/* eslint-disable */\nexport const perpetualPoolLiteAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"indexPrice\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"lastBlockNumber\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"lastBlockTimestamp\", \"type\": \"uint256\" } ], \"name\": \"executeMigrationSwitchToTimestamp\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getFundingPeriod\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"poolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"period\", \"type\": \"uint256\" } ], \"name\": \"setFundingPeriod\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const perpetualPoolLiteOldAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLastUpdateBlock\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLiquidity\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n/* eslint-disable */","import { DeriEnv } from \"../shared/config/env\";\nimport { normalizeChainId } from \"../shared/utils/validate\";\n\nexport const openPoolChainIds = () => {\n  const configs = {\n    prod: ['56'],\n    dev: ['97'],\n    testnet: ['97'],\n  }\n  const env = DeriEnv.get()\n  if (Array.isArray(configs[env])) {\n    return configs[env]\n  } else {\n    throw new Error(`-- invalid env for openPoolChainIds: ${env}`)\n  }\n};\n\nexport const getPoolV2LiteManagerConfig = (chainId) => {\n  chainId = normalizeChainId(chainId)\n  const configs = {\n    prod: [\n      {\n        chainId: \"56\",\n        address: \"0x5e3318aeaa226dc11571f19b96240d88b64702dc\",\n        initialBlock: \"10133599\",\n      },\n    ],\n    dev: [\n      {\n        chainId: \"97\",\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\n        initialBlock: \"11034400\",\n      },\n    ],\n    testnet: [\n      {\n        chainId: \"97\",\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\n        initialBlock: \"11034400\",\n      },\n    ],\n  };\n  const env = DeriEnv.get();\n  const res = configs[env].find((c) => c.chainId === chainId);\n  if (res && res.address) {\n    return res\n  } else {\n    throw new Error(`-- getPoolV2LiteManagerConfig: cannot find config with env(${env}) and chainId(${chainId})`)\n  }\n};\n\nexport const getOracleFactoryChainlinkConfig = (chainId) => {\n  chainId = normalizeChainId(chainId)\n  const configs = {\n    prod: [\n      {\n        chainId: '56',\n        address: '0x5052fa10d68F4146B66bc15fd8cCb1674B482026',\n        initialBlock: '11017943',\n      },\n    ],\n    dev: [\n      {\n        chainId: '97',\n        address: '0xFD1f981375f95e971E8fC0756f4daAF5784e5376',\n        initialBlock: '12440610',\n      },\n    ],\n  };\n  const env = DeriEnv.get();\n  const res = configs[env].find((c) => c.chainId === chainId);\n  if (res && res.address) {\n    return res\n  } else {\n    throw new Error(`-- getOracleFactoryChainlinkConfig: cannot find config with env(${env}) and chainId(${chainId})`)\n  }\n};\n\n\nexport const expandPoolConfigV2LiteOpen = (config) => {\n  const pools = config.pools;\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: symbol.unit,\n          version: 'v2_lite_open',\n          isOpen: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};","import { validateObjectKeyExist, validateIsArray } from '../utils';\nimport {\n  isUsedRestOracle,\n  mapToBToken,\n  mapToSymbol,\n  getVolatilitySymbols,\n} from './token';\n\nconst validatePoolV2 = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'router',\n      'initialBlock',\n      'bTokens',\n      'symbols',\n      'chainId',\n      'symbolCount',\n      'bTokenCount',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['bTokens'], 'bTokens');\n  pool['bTokens'].forEach((prop) => {\n    validateObjectKeyExist(\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\n      prop,\n      'bToken'\n    );\n  });\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n};\n\nconst processPoolV2 = (pool) => {\n  // process pool \n  pool['bTokenCount'] = pool['bTokens'].length;\n  pool['symbolCount'] = pool['symbols'].length;\n  pool['bTokens'].forEach((b) => b['bTokenSymbol'] = mapToBToken(b['bTokenSymbol']))\n  pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n};\n\nconst validatePoolV2Lite = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      'offchainSymbolIds',\n      'offchainSymbols',\n      'symbolCount',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\n  validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\n};\n\nconst processPoolV2Lite = (pool) => {\n  // process pool\n  if (!pool['symbolCount']) {\n    pool['symbolCount'] = pool['symbols'].length;\n  }\n  if (!pool['offchainSymbolIds'] && !pool['offchainSymbols']) {\n    pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nconst validateConfigV2LiteOpen = (config) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      'offchainSymbolIds',\n      'offchainSymbols',\n      'symbolCount',\n    ],\n    config,\n    ''\n  );\n  validateIsArray(config['symbols'], 'symbols');\n  config['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\n};\n\nconst processConfigV2LiteOpen = (config) => {\n  // process config\n  if (!config['symbolCount']) {\n    config['symbolCount'] = config['symbols'].length;\n  }\n  if (!config['offchainSymbolIds'] && !config['offchainSymbols']) {\n    config['offchainSymbolIds'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    config['offchainSymbols'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    config['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nconst validatePoolOption = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      // 'pricer',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      // 'offchainSymbolIds',\n      // 'offchainSymbols',\n      'symbolCount',\n      'volatilitySymbols',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  // validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\n  // validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\n  validateIsArray(pool['volatilitySymbols'], 'volatilitySymbols');\n};\n\nconst processPoolOption = (pool) => {\n  // process pool \n  pool['symbolCount'] = pool['symbols'].length;\n  if (!pool['volatilitySymbols']) {\n    // pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    // pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    pool['volatilitySymbols'] = getVolatilitySymbols(\n      pool['symbols'].map((s) => s.symbol)\n    ); \n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nexport const poolProcessor = {\n  v2: processPoolV2,\n  v2_lite: processPoolV2Lite,\n  v2_lite_open: processConfigV2LiteOpen,\n  option: processPoolOption,\n};\n\nexport const poolValidator = {\n  v2: validatePoolV2,\n  v2_lite: validatePoolV2Lite,\n  v2_lite_open: validateConfigV2LiteOpen,\n  option: validatePoolOption,\n};","import { getJsonConfig } from './config';\nimport { DeriEnv } from './env';\nimport { mapToSymbolInternal } from './token';\n\nexport const getOracleConfigList = (version='v2', env) => {\n  const config = getJsonConfig(version, env || DeriEnv.get())\n  return config.oracle\n};\n\nexport const getOracleConfig = (version='v2', chainId, symbol) => {\n  symbol = mapToSymbolInternal(symbol)\n  const oracles = getOracleConfigList(version)\n  const filteredByChainId = oracles.filter((c) =>\n    symbol\n      ? c.chainId === chainId && c.symbol === symbol\n      : c.chainId === chainId\n  );\n  if (filteredByChainId.length > 0) {\n    if (symbol) {\n      return filteredByChainId[0];\n    } else {\n      return filteredByChainId;\n    }\n  }\n  //console.log(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\n};\n","import {\n  getChainProviderUrls,\n  getDailyBlockNumberConfig,\n} from '../config/chain';\nimport { normalizeChainId } from './validate';\nimport { getLatestRPCServer } from './network';\n\nexport const getChainProviderUrl = async (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrls(chainId);\n  if (urls.length > 0) {\n   const url =  await getLatestRPCServer(urls);\n   // console.log('url', url)\n   return url\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\n\nexport const getDailyBlockNumber = (chainId) => {\n  const blockNumbers = getDailyBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  } else {\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\n  }\n};\n\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    case '137':\n      poolNetwork = 'matic';\n      break;\n    case '80001':\n      poolNetwork = 'mumbai';\n      break;\n    default:\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\n  }\n  return poolNetwork;\n};","import { hexToNumber, fromWei } from '../utils';\nimport { web3Factory } from '../factory';\nimport { normalizeAddress } from '../utils';\n\n/**\n * check ethereum client status for web browser\n * @function\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const hasWallet = () => {\n  if (window.ethereum && window.ethereum.isMetaMask) {\n    return { success: true, isMetaMask: true };\n  }\n  return {\n    success: false,\n    error:\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\n  };\n};\n\n/**\n *  Connect wallet using MetaMask account\n * @async\n * @function\n * @param {function} [handleChainChanged] - Callback when chainId changed\n * @param {function} [handleAccountChanged]  - callback when account changed\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.chainId - chain Id\n * @returns {string} response.account - account address\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const connectWallet = async (\n  handleChainChanged,\n  handleAccountChanged\n) => {\n  if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n    });\n    const chainId = parseInt(\n      await window.ethereum.request({ method: 'net_version' })\n    );\n    // const chainId = hexToNumber(\n    //   await window.ethereum.request({ method: 'eth_chainId' })\n    // );\n    const account = Array.isArray(accounts) && accounts[0];\n\n    // await web3.eth.requestAccounts().then(console.log)\n    window.ethereum.on('accountsChanged', (accounts) => {\n      let account;\n      if (accounts.length > 0) {\n        account = accounts[0];\n      } else {\n        account = '';\n      }\n      if (typeof handleAccountChanged === 'function') {\n        handleAccountChanged(account);\n      } else {\n        window.location.reload();\n      }\n      //console.log('accountChanged', account);\n    });\n    window.ethereum.on('chainChanged', (chainId) => {\n      let res = hexToNumber(chainId);\n      if (typeof handleChainChanged === 'function') {\n        handleChainChanged(res);\n      } else {\n        window.location.reload();\n      }\n      //console.log('chainChanged', res);\n    });\n    return { success: true, account, chainId };\n  }\n  return {\n    success: false,\n    error: 'Cannot connect wallet, please install MetaMask.',\n  };\n};\n\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\n  //const web3 = web3Factory(chainId);\n  walletAddress = normalizeAddress(walletAddress)\n  const web3 = await web3Factory.get(chainId);\n  const balance = await web3.eth.getBalance(walletAddress);\n  return fromWei(balance);\n};\n","import { getDeriConfig } from '../config';\nimport {\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory';\n/**\n * Get user signature of the wormhole pool\n * @async\n * @method\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getUserWormholeSignature = async (accountAddress) => {\n  const databaseWormhole = databaseWormholeFactory(true);\n  return await databaseWormhole.signature(accountAddress);\n};\n\n/**\n * Check account is unlocked in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  return await deri.isUnlocked(accountAddress, wormholeAddress);\n};\n\n/**\n * Get deri balance in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string}\n */\nexport const getDeriBalance = async (chainId, accountAddress) => {\n  const { deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  return (await deri.balanceOf(accountAddress)).toString();\n};","import {\n  miningVaultPoolFactory,\n  miningVaultRouterFactory,\n  wormholeFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory';\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from '../api/database_api';\nimport {\n  getDeriConfig,\n  getMiningVaultRouterConfig,\n  getMiningVaultConfig,\n} from '../config';\nimport { naturalToDeri } from '../../shared/utils';\n\n/**\n * Mint DToken in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDToken = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAll(accountAddress);\n  const amount = naturalToDeri(userInfo.amount);\n  const { deadline } = userInfo;\n  const { nonce } = userInfo;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultConfig(chainId);\n    if (miningVaultAddress) {\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\n      //miningVault.setAccount(accountAddress);\n      try {\n        const tx = await miningVault.mintDToken(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * freeze Deri in current wormhole pool to the specified chain\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @param {string} toChainId\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\n  const { wormholeAddress } = getDeriConfig(chainId);\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\n  //wormhole.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Deri in wormhole pool\n * @async\n * @method\n * @param {string} toChainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDeri = async (toChainId, accountAddress) => {\n  let res;\n  const databaseWormhole = databaseWormholeFactory(true);\n  // const userInfo = await getUserInfoAll(accountAddress);\n  const userInfo = await databaseWormhole.signature(accountAddress);\n  // console.log(userInfo)\n  const { amount } = userInfo;\n  const { fromChainId } = userInfo;\n  const { fromWormhole } = userInfo;\n  const fromNonce = userInfo.nonce;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const { wormholeAddress } = getDeriConfig(toChainId);\n    if (wormholeAddress) {\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\n      //wormhole.setAccount(accountAddress);\n      try {\n        const tx = await wormhole.mintDeri(\n          accountAddress,\n          amount,\n          fromChainId,\n          fromWormhole,\n          fromNonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * Unlock the account in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockDeri = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  let res;\n  try {\n    const tx = await deri.unlock(accountAddress, wormholeAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Airdrop in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintAirdrop = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\n  const amount = naturalToDeri(userInfo.amount).toString();\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultRouterConfig(chainId);\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\n    // console.log(\"userInfo\", userInfo)\n    if (miningVaultAddress) {\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      try {\n        const tx = await miningVaultRouter.mint(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v1,\n          r1,\n          s1,\n          v2,\n          r2,\n          s2\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault router address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};","import { normalizeAddress, normalizeChainId } from \"../utils\"\nimport { DeriEnv, getBrokerConfig, getPoolConfig2 } from '../config';\nimport { brokerManagerFactory, pTokenAirdropFactory } from \"../factory\"\nimport { pTokenFactory } from \"../../v2/factory\"\n\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\n\n\nexport const getBroker = async(chainId, accountAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  const {address: brokerAddress} = getBrokerConfig('v2', chainId)\n  let res = ''\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\n    res = await brokerManager.getBroker(accountAddress)\n  } catch (err) {\n    console.log(err)\n  }\n  return res\n}\n\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  brokerAddress = normalizeAddress(brokerAddress);\n  const {address: brokerManagerAddress} = getBrokerConfig('v2', chainId)\n  let res\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nconst getAirdropPTokenAddress = () => {\n  const env = DeriEnv.get()\n  if (env === 'prod') {\n    return AIRDROP_PTOKEN_ADDRESS_BSC\n  } else {\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\n  }\n}\n\nexport const airdropPToken = async (chainId, accountAddress) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}\n\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\n  let res = ''\n  try {\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\n    const pToken = pTokenFactory(chainId, pTokenAddress)\n    const result = await pToken.balanceOf(accountAddress)\n    if (result === '1') {\n      res = true\n    } else if (result === '0') {\n      res = false\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}","import { getLpConfig } from '../config';\nimport { bTokenFactory, slpPoolFactory } from '../factory/contract';\n\n/**\n * Get liquidity info of SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getSlpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    //bToken.setAccount(accountAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      slpPool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no SlpPool address, please check');\n  return {};\n};\n\n/**\n * Add liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Unlock the account in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getSlpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contract';\nimport { getLpConfig } from '../config/pool_v1';\n\nexport const getClp2LiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      clp2Pool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no Clp2Pool address, please check');\n  return {};\n};\n\nexport const addClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const removeClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const getClp2WalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import {\n  bTokenFactory,\n  clpPoolFactory,\n} from '../factory/contract';\nimport { lTokenFactory } from '../../v1/factory';\nimport { bg } from '../utils';\nimport { getLpConfig } from '../config';\n\n/**\n * Get liquidity Info of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getClpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getLpConfig(chainId, poolAddress);\n  const clpPool = clpPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { liquidity } = await clpPool.getStateValues();\n  //console.log(liquidity);\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: (lTokenTotalSupply.eq(0)\n      ? bg(0)\n      : liquidity.div(lTokenTotalSupply)\n    ).toString(),\n    maxRemovableShares: lTokenBalance.toString(),\n  };\n};\n\n/**\n * Add liquidity to the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\n      console.log(tx, typeof tx);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    try {\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Unlock the account in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getClpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import {\n  getSlpLiquidityInfo,\n  getSlpWalletBalance,\n  isSlpUnlocked,\n} from './slp_pool_api';\nimport {\n  getClp2LiquidityInfo,\n  getClp2WalletBalance,\n  isClp2Unlocked,\n} from './clp2_pool_api';\nimport {\n  getClpLiquidityInfo,\n  getClpWalletBalance,\n  isClpUnlocked,\n} from './clp_pool_api';\nimport { getLpConfig } from '../config'\n\n/**\n * Get liquidity info of LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getLpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\n  }\n};\n\n\n/**\n * Check account is unlocked in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Get account balance in lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getLpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\n  }\n};\n","import { getLpConfig } from '../config';\nimport { unlockSlp, addSlpLiquidity, removeSlpLiquidity } from './slp_pool_api';\nimport { unlockClp, addClpLiquidity, removeClpLiquidity } from './clp_pool_api';\nimport {\n  unlockClp2,\n  addClp2Liquidity,\n  removeClp2Liquidity,\n} from './clp2_pool_api';\n\n/**\n * Unlock the account in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await unlockSlp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await unlockClp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await unlockClp2(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`unlockLp(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Add liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp') {\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp2') {\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\n  } else {\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Remove liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await removeSlpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp') {\n    return await removeClpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp2') {\n    return await removeClp2Liquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else {\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n","import { TERC20Factory } from \"..\"\nimport { catchTxApiError, normalizeChainId } from \"../utils\"\n\nexport const mintTERC20 = async (chainId, bTokenAddress, accountAddress) => {\n  const args = [chainId, bTokenAddress, accountAddress];\n  return catchTxApiError(async (chainId, bTokenAddress, accountAddress) => {\n    chainId = normalizeChainId(chainId);\n    const testERC20 = TERC20Factory(chainId, bTokenAddress);\n    // send tx\n    return await testERC20.mint(accountAddress);\n  }, args);\n};","import Web3 from 'web3';\n// == func\n// const np = () => {}\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n// refer to https://www.30secondsofcode.org/js/s/deep-clone\n// alternative: let clone = JSON.parse(JSON.stringify(obj))\nexport const deepClone = obj => {\n  if (obj === null) return null;\n  let clone = Object.assign({}, obj)\n  Object.keys(clone).forEach((key) => {\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\n  });\n  // need recheck\n  if (Array.isArray(obj)) {\n    clone.length = obj.length\n    return Array.from(clone)\n  }\n  return clone\n}\n\nexport const shuffleArray = (urls) => {\n  const newUrls = deepClone(urls)\n  const length = urls.length\n  let res = []\n  for (let i = 0; i < length; i++) {\n    const index = Math.floor(Math.random() * urls.length)\n    res = res.concat(newUrls.splice(index,1))\n  }\n  return res\n}\n\nconst getBlockNumber = async (url) => {\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\n  try {\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\n    const startTime = Date.now()\n    res.blockNumber = await web3.eth.getBlockNumber()\n    res.duration = Date.now() - startTime\n  } catch (err) {\n    //console.log(`getBlockNumber(${url}) error: ${err}`)\n  }\n  return res\n};\n\nexport const getLatestRPCServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  // pick 2 random urls\n  urls = urls.length >= 2 ? urls.slice(0,2) : urls\n  let promises = []\n  for (let i = 0; i < urls.length; i++) {\n    promises.push(getBlockNumber(urls[i]));\n  }\n  let blockNumbers = await Promise.all(promises)\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\n  // console.log('blockNumbers',  blockNumbers)\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\n  const res = blockNumbers[index] && blockNumbers[index].url\n  // console.log(res)\n  if (res && res.startsWith('http')) {\n    return res\n  } else {\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\n  }\n};","import { deriToNatural, bg } from '../utils'\nimport { MAX_UINT256} from '../config'\nimport { ContractBase } from './contract_base'\nimport { bTokenAbi } from './abis';\n\n\nexport class BToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, bTokenAbi);\n  }\n  // === query ===\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    const allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return bg(allowance).gt(0);\n  }\n\n  // === transaction ===\n  async unlock(accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { wrappedOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WrappedOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wrappedOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  // decimals refers https://docs.chain.link/docs/matic-addresses\n  async getPrice() {\n    // console.log('hit wrapped oracle')\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}\n","import { ContractBase } from \"../contract_base\";\nimport { brokerManagerAbi } from '../abis';\n\nexport class BrokerManager extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, brokerManagerAbi)\n  }\n  // query\n  async getBroker(accountAddress) {\n    return await this._call('getBroker', [accountAddress])\n  }\n\n  // transaction\n  async setBroker(accountAddress, brokerAddress) {\n    return await this._transact(\n      'setBroker',\n      [brokerAddress],\n      accountAddress\n    );\n  }\n}","import { ContractBase } from '../contract_base'\nimport { pTokenAirdropAbi } from '../abis'\n\nexport class PTokenAirdrop extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, pTokenAirdropAbi)\n  }\n  async getBTokenBalance() {\n    return await this._call('getBTokenBalance', [])\n  }\n  async totalWhitelistCount() {\n    return await this._call('totalWhitelistCount', [])\n  }\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n}","// v2 lite\nexport * from './perpetual_pool';\nexport * from './l_token';\nexport * from './p_token';\nexport * from './perpetual_pool_lite_viewer';\n","import React from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass LoadingPage extends React.Component {\n  //类似github页面加载的那个加载条\n  componentWillMount(){\n    NProgress.start()\n  }\n  componentWillUnmount(){\n    NProgress.done()\n  }\n  render () {\n    return (\n      <div/>\n    )\n  }\n}\n\nconst LoadableComponent = (component) => {\n  return Loadable({\n    loader: component,\n    loading: ()=><LoadingPage/>\n  })\n}\n\nexport default LoadableComponent","/**\n * Get REST server config\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {string} server url\n */\nexport const getRestServerConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    // for production\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\n    //return 'https://alphaapi.deri.finance';\n  } else {\n    // for test\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://testnetapi.deri.finance';\n  }\n};\n\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\n  if (env === \"prod\") {\n    return ['trade_tx_quene', 'trade_worker_group']\n  } else {\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\n  }\n};\n","import { io } from \"socket.io-client\";\nimport {equalIgnoreCase } from \"../utils/utils\";\n\nclass WebSocket {\n  constructor(){\n    this.socket = io(process.env.REACT_APP_WSS_URL, {\n      transports: ['websocket'],\n      withCredentials: true\n    })\n    this.events = [];\n    this.reconnectListeners = {}\n    this.reconnected = false\n    this.socket.on('connect', () => {\n      console.log('connect')\n      if(this.reconnected){\n        console.log('reconnect and emit reconnect event')\n        this.reconnected = false\n        Object.values(this.reconnectListeners).forEach(callback => callback())\n      }\n      this.events.forEach(event => {\n        this.socket.emit(event[0],event[1]);\n      })\n    })\n    this.socket.on('disconnect',event => {\n      this.reconnected = true\n      console.log('web socket disconnect,will reconnect auto')\n    })\n  }\n\n  addReconnectEvent(id,callback){\n    this.reconnectListeners[id] = callback\n  }\n\n  removeReconnectEvent(id){\n    delete this.reconnectListeners[id]\n  }\n\n\n  subscribe(event = 'get_kline_update',params = {},onMessage,listener = 'kline_update'){\n    this.socket.on(listener,data => {\n      if (data.time_type === params.time_type && equalIgnoreCase(data.symbol,params.symbol) && onMessage) {\n        onMessage(data)\n      }\n    })\n    this.socket.emit(event, params)\n    if(this.findEvent(event,params) === -1){\n      this.events.push([event,params])\n    }\n  }\n\n  findEvent(event,params){\n    return this.events.findIndex(item => item[0] === event && item[1].symbol === params.symbol && item[1].time_type === params.time_type);\n  }\n\n  unsubscribe(event,params = {}){\n    this.socket.emit(event,params)\n    const pos = this.findEvent(event,params)\n    this.events.splice(pos,1)\n  }\n}\nexport default new WebSocket()","import React from 'react'\nimport Modal from 'react-modal/lib/components/Modal';\nimport { inject, observer } from 'mobx-react';\n\nconst withModal = Component => {\n  const appElement = document.getElementById('root')\n  const customizeStyle =  {\n    overlay: {\n      position: 'fixed',\n      zIndex : 2,\n      background : 'rgb(0 0 0 / 0.5)'\n    },\n    content: {\n      position: 'absolute',\n      border : 0,\n      background : 'none',\n      inset : 0,\n      overflow : 'initial'\n    }\n  };\n\n  class WithModal extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        modalIsOpen : false\n      }\n    }\n\n    render(){\n      const {modalIsOpen,className,overlay = {}} = this.props\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\n      return (\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement} portalClassName={this.props.intl.locale}>\n          <div className={className}>\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\n          </div>\n        </Modal>\n      )\n    }\n  }\n\n  return inject('intl')(observer(WithModal)) ;\n}\nexport default withModal;","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils';\nimport { lTokenLiteAbi } from './abis';\n\nexport class LTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenLiteAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    const res = await this._call('balanceOf', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n}\n","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenLiteAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","import { ContractBase } from '../../shared';\nimport { perpetualPoolLiteViewerAbi } from './abis';\n\nexport class PerpetualPoolLiteViewer extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\n  }\n  async getOffChainOracleSymbols(poolAddress) {\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\n    //return res.filter((s) => s && s !== '');\n    return res\n  }\n}\n","import { makeObservable, observable, action } from \"mobx\";\nimport { getContractAddressConfig, DeriEnv,sortOptionSymbols,openConfigListCache } from \"../lib/web3js/indexV2\";\n\nexport default class Config {\n  all = []\n\n  constructor(){\n    makeObservable(this,{\n      all : observable,\n      setAll : action\n    })\n  }\n\n  async load(version,isOptions){\n    let current = version && version.current;\n    if(isOptions){\n      current = 'option'\n    }\n    if(current === 'v2_lite_open'){\n       await openConfigListCache.update()\n    }\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\n    if(isOptions){\n      configs = sortOptionSymbols(configs)\n    }\n    if(!isOptions && version){\n      configs = configs.filter(c => c.version === version.current && c.symbol !== '--')\n      //v2 不需要展示base token,需要合并相同的base token\n      if(version.isV2){\n        configs = configs.reduce((total,cur) => {\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\n          if(pos === -1 ){\n            total.push(cur)\n          }\n          return total;\n        },[])\n      }\n    }\n    this.setAll(configs)\n    return this.all;\n  }\n\n  setAll(all){\n    this.all = all;\n  }\n  \n}","var map = {\n\t\"./de/Signin.json\": 615,\n\t\"./de/bridge.json\": 616,\n\t\"./de/broker.json\": 617,\n\t\"./de/dip-history-two.json\": 618,\n\t\"./de/dip-history.json\": 619,\n\t\"./de/dip-two.json\": 620,\n\t\"./de/faucet.json\": 621,\n\t\"./de/footer.json\": 622,\n\t\"./de/governance.json\": 623,\n\t\"./de/header.json\": 624,\n\t\"./de/home.json\": 625,\n\t\"./de/lite.json\": 626,\n\t\"./de/mining.json\": 627,\n\t\"./de/mobile-lite.json\": 628,\n\t\"./de/nuls.json\": 629,\n\t\"./de/permission.json\": 630,\n\t\"./de/pro.json\": 631,\n\t\"./de/team.json\": 632,\n\t\"./de/trading-mining.json\": 633,\n\t\"./en/Signin.json\": 634,\n\t\"./en/bridge.json\": 635,\n\t\"./en/broker.json\": 636,\n\t\"./en/dip-history-two.json\": 637,\n\t\"./en/dip-history.json\": 638,\n\t\"./en/dip-two.json\": 639,\n\t\"./en/faucet.json\": 640,\n\t\"./en/footer.json\": 641,\n\t\"./en/governance.json\": 642,\n\t\"./en/header.json\": 643,\n\t\"./en/home.json\": 644,\n\t\"./en/lite.json\": 645,\n\t\"./en/mining.json\": 646,\n\t\"./en/mobile-lite.json\": 647,\n\t\"./en/nuls.json\": 648,\n\t\"./en/permission.json\": 649,\n\t\"./en/pro.json\": 650,\n\t\"./en/team.json\": 651,\n\t\"./en/trading-mining.json\": 652,\n\t\"./fr/Signin.json\": 653,\n\t\"./fr/bridge.json\": 654,\n\t\"./fr/broker.json\": 655,\n\t\"./fr/dip-history-two.json\": 656,\n\t\"./fr/dip-history.json\": 657,\n\t\"./fr/dip-two.json\": 658,\n\t\"./fr/faucet.json\": 659,\n\t\"./fr/footer.json\": 660,\n\t\"./fr/governance.json\": 661,\n\t\"./fr/header.json\": 662,\n\t\"./fr/home.json\": 663,\n\t\"./fr/lite.json\": 664,\n\t\"./fr/mining.json\": 665,\n\t\"./fr/mobile-lite.json\": 666,\n\t\"./fr/nuls.json\": 667,\n\t\"./fr/permission.json\": 668,\n\t\"./fr/pro.json\": 669,\n\t\"./fr/team.json\": 670,\n\t\"./fr/trading-mining.json\": 671,\n\t\"./zh/Signin.json\": 672,\n\t\"./zh/bridge.json\": 673,\n\t\"./zh/broker.json\": 674,\n\t\"./zh/dip-history-two.json\": 675,\n\t\"./zh/dip-history.json\": 676,\n\t\"./zh/dip-two.json\": 677,\n\t\"./zh/faucet.json\": 678,\n\t\"./zh/footer.json\": 679,\n\t\"./zh/governance.json\": 680,\n\t\"./zh/header.json\": 681,\n\t\"./zh/home.json\": 682,\n\t\"./zh/lite.json\": 683,\n\t\"./zh/mining.json\": 684,\n\t\"./zh/mobile-lite.json\": 685,\n\t\"./zh/nuls.json\": 686,\n\t\"./zh/permission.json\": 687,\n\t\"./zh/pro.json\": 688,\n\t\"./zh/team.json\": 689,\n\t\"./zh/trading-mining.json\": 690\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 614;","import withModal from \"../hoc/withModal\"\nimport './loading.less'\n\nexport default withModal(() => (<div className='loading-mask'>\n  <div className=\"snippet\" data-title=\".dot-pulse\">\n      <div className=\"stage\">\n        <div className=\"dot-pulse\"></div>\n      </div>\n    </div>\n</div>))\n","import React, { useState, useEffect } from 'react'\nimport {isBrowser,isMobile,deviceDetect} from 'react-device-detect'\nimport LoadableComponent from './utils/LoadableComponent';\nimport { inject, observer } from 'mobx-react';\nimport LoadingMask from './components/Loading/LoadingMask';\nimport { useRouteMatch } from 'react-router-dom';\nimport type from './model/Type'\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\nconst getIsDesktop = () => window.screen.width > 1024;\nfunction Mask({loading}){\n  const [isOpen, setIsOpen] = useState(false)\n  useEffect(() => {\n    setIsOpen(loading.isShowMask)\n    return () => {\n    }\n  }, [loading.isShowMask])\n  return <LoadingMask modalIsOpen={isOpen} overlay={{background : 'none',top : '80px'}}/>\n}\n\nconst MaskWrapper = inject('loading')(observer(Mask))\n\nfunction App({intl,loading}) {\n  const [isDesktop, setIsDesktop] = useState(getIsDesktop())\n  const isOptionsLite = useRouteMatch('/options/lite') ? true : false\n  const isOptionsPro = useRouteMatch('/options/pro') ? true : false\n  const isOption = isOptionsLite || isOptionsPro\n  const catagory = isOption ? 'option' : 'future'\n  type.setCurrent(catagory)\n\n  // useEffect(() => {\n  //   const onResize = () => {\n  //     if(getIsDesktop() !== isDesktop){\n  //       window.location.reload()\n  //     }\n  //   }\n  //   window.addEventListener(\"resize\", onResize);\n  //   return () => window.removeEventListener(\"resize\", onResize)\n  // },[]);\n  if(isBrowser){\n    return <><MaskWrapper/><DesktopApp locale={intl.locale}></DesktopApp></>\n  } else {\n    return <><MaskWrapper/><MobileApp locale={intl.locale}><Mask loading={loading}/></MobileApp></>\n  }\n}\n\nexport default inject('intl','loading')(observer(App)) ;\n","\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked,openConfigListCache, unlock } from \"../lib/web3js/indexV2\";\nimport config from '../config.json'\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\nimport version from './Version'\n\nclass Wallet {\n  \n  detail = {}\n  defaultNw = {}\n  \n  constructor(){\n    makeAutoObservable(this,{\n      detail : observable,\n      defaultNw : observable,\n      setDefaultNw : action,\n      setDetail : action,\n      supportV2 : computed,\n      supportV1 : computed,\n      supportAllVersion : computed,\n      supportChain : computed,\n      supportInnocation : computed,\n      supportOpen : computed\n    })\n  }\n\n  supportWeb3 = () => !!window.ethereum\n\n  isConnected = () => !!this.detail.account;\n\n\n  async isApproved(pool,bTokenId){\n    if(this.detail.chainId && this.supportChain){\n      if(version.isOpen){\n        await openConfigListCache.update()\n      }\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\n      this.detail.isApproved = isApproved;\n      this.setDetail(this.detail)\n      return isApproved;\n    }\n  }\n\n  approve = async (pool,bTokenId) => {\n    if(this.detail.chainId){\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\n      return approved\n    }\n  }\n\n  connect =  async () => {\n    const res = await connectWallet();\n    return new Promise(async (resolve,reject) => {\n      if(res.success){\n        const {chainId,account} = res\n        const wallet = await this.loadWalletBalance(chainId,account);      \n        resolve(wallet)\n      } else {\n        reject(null)\n      }\n    })\n  }\n\n  switchNetwork = async (network) => {\n    if(!this.isConnected()){\n      this.connect();\n    }\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\n    network = chainInfo[parseInt(network.id)]\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId}],\n      });\n    } catch (error) {\n      // alert('err' + JSON.stringify(error))\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{chainId,...network.metamask}],\n          });\n        } catch (addError) {\n          console.error('err' ,addError)\n        }\n      }\n    }\n  }\n\n  loadWalletBalance = async (chainId,account) => {\n    if(version.isOpen){\n      await openConfigListCache.update()\n    }\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    \n    if(chainInfo[chainId]){\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\n      storeChain(chainInfo[chainId])\n    }\n    this.setDetail(detail)\n    return detail;\n  }\n\n  get = () => {\n    return this.detail;\n  }\n\n  setDetail(detail){\n    this.detail = detail;\n  }\n\n  setDefaultNw(network){\n    this.defaultNw = network\n  }\n\n  refresh(){\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\n  }\n\n  isSupportChain(isOptions){\n    const chainId = this.detail.chainId\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    if(isOptions){\n      return chainInfo[chainId] && chainInfo[chainId]['supportOptions']\n    } else {\n      return this.supportChain\n    }\n  }\n\n  get supportV2() {\n    return this.detail.supportV2\n  }\n\n  get supportV1(){\n    return this.detail.supportV1;\n  }\n\n  get supportAllVersion(){\n    return this.detail.supportV1 && this.detail.supportV2\n  }\n\n  get supportChain(){\n    return this.detail.supported\n  }\n\n  get supportInnovation(){\n    return this.detail.supportInnovation || !this.isConnected()\n  }\n\n  get supportOpen(){\n    return this.detail.supportOpen || !this.isConnected()\n  }\n\n\n}\n\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\nimport { equalIgnoreCase } from \"../utils/utils\";\nimport webSocket from \"./WebSocket\";\n\nclass Oracle {\n  symbol = 'BTCUSD'\n  timeType = 'min'\n  index = 0.00\n  kData = []\n  ws = null\n  paused = false;\n  listeners = {}\n  already = false\n\n  constructor(){\n    makeAutoObservable(this,{\n      index : observable,\n      kData : observable,\n      setIndex : action,\n    })\n  }\n\n  load(symbol,timeType = 'min'){\n    webSocket.subscribe('get_kline_update',{symbol,time_type : 'min'},data => {\n      if(!this.paused && equalIgnoreCase(symbol,data.symbol)) {\n        this.setIndex(data.close)\n        for(const key of Object.keys(this.listeners)){\n          if(typeof this.listeners[key] === 'function'){\n            this.listeners[key](data)\n          }\n        }\n      }\n    })\n    if(symbol !== this.symbol){\n      this.unsubscribeBars(this.symbol)\n    }\n    this.setSymbol(symbol)\n    this.setTimeType(timeType);\n    this.already = true\n  }\n\n  addListener(id,listener){\n    if(!this.listeners[id]) {\n      this.listeners[id] = listener\n    }    \n  }\n\n  unsubscribeBars(symbol){\n    webSocket.unsubscribe('un_get_kline',{symbol : symbol,time_type : 'min'});\n  }\n\n\n  resume(){\n    this.setPause(false)\n  }\n\n  pause(){\n    this.setPause(true)\n  }\n\n  clean(){\n    this.unsubscribeBars(this.symbol);\n  }\n\n  setIndex(index){\n    if(!this.paused) {\n      this.index = index;\n    }\n  }\n\n  setSymbol(symbol){\n    this.symbol = symbol\n  }\n\n  setTimeType(timeType){\n    this.timeType = timeType;\n  }\n  setPause(paused){\n    this.paused = paused\n  }\n}\n\nexport default Oracle","import { getPositionInfo ,bg,getPositionInfos, DeriEnv} from \"../lib/web3js/indexV2\"\nimport { eqInNumber, getDefaultNw } from '../utils/utils';\nimport type from \"./Type\";\n\nexport default class Position {\n\n   callback = () => {}\n   callbackALL = ()=>{}\n   wallet = null;\n   spec = null\n   counter = 0\n \n   mockPositionInfo = {\n    averageEntryPrice: \"\",\n    liquidationPrice: \"\",\n    margin: \"20000\",\n    marginHeld: \"10068.26538\",\n    marginHeldBySymbol : \"293.16152\",\n    unrealizedPnl: \"3.1311\",\n    volume: \"800\",\n    premiumFundingAccrued:'',\n    deltaFundingAccrued:'',\n    strikePrice:0,\n    timePrice:0,\n    volatility:0,\n    isCall:false,\n   }\n\n   async load(wallet,spec,callback){\n     this.wallet= wallet; \n     this.spec = spec\n     if(callback){\n      this.callback = callback\n     }\n     if(spec && spec.pool){\n      const chainId = wallet && wallet.detail ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\n      const account = wallet && wallet.detail ? wallet.detail.account : null;\n      const position = await getPositionInfo(chainId,spec.pool,account,spec.symbolId)\n      if(position){\n        if(this.callback){\n          this.callback(position)\n        }\n      }\n      return position;\n     }\n   }\n\n   async loadAll(wallet,spec,callback){\n    this.wallet= wallet; \n    this.spec = spec\n    if(callback){\n      this.callbackALL = callback\n    }\n    if(spec && spec.pool){\n      const chainId = wallet && wallet.detail ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\n      const account = wallet && wallet.detail ? wallet.detail.account : null;\n      let res  = await getPositionInfos(chainId,spec.pool,account,spec.symbolId)\n      let positions = [] \n      if(res.length) {\n        positions = res.map(item => {\n          item.balanceContract = bg(item.margin).plus(item.unrealizedPnl).toString()\n          item.direction = (+item.volume) > 0 ? 'LONG' : (!item.volume || eqInNumber(item.volume, 0) || !item.volume ? '--' : 'SHORT')\n          return item\n        })\n      }\n      if(positions){\n        if(this.callbackALL){\n          this.callbackALL(positions)\n        }\n      }\n      return positions;\n    }\n   } \n\n   startAll(){\n    this.paused = false;\n    if(!this.started){\n      this.runInAction(async () => await this.loadAll(this.wallet,this.spec))\n    }\n    this.started = true\n  }\n\n   start(){   \n    this.paused = false;\n    if(!this.startedAll){\n      this.runInAction(async () => await this.load(this.wallet,this.spec))\n    }\n    this.startedAll = true\n   }\n\n   runInAction(action){\n    this.timer = window.setTimeout(async () => {\n      if(!this.paused){\n        const position = await action();\n        if(position) {\n          this.runInAction(action);\n        }\n      }\n    },3000)\n   }\n\n   pause(){\n    this.paused = true\n   }\n\n   resume(){\n    this.clean();\n    this.start(this.callback)\n   }\n\n   clean(){\n     this.started = false;\n     this.startedAll = false;\n     this.paused = false;\n     this.timer = null;\n   }\n \n}","import { getSpecification, DeriEnv } from \"../lib/web3js/indexV2\";\nimport { makeObservable, observable, action, computed } from \"mobx\";\nimport Intl from \"./Intl\";\nimport version from \"./Version\";\nimport type from \"./Type\";\nimport { getDefaultNw } from \"../utils/utils\";\n\nexport default class Contract {\n  info = {\n    bTokenSymbol:[\"BUSD\"],\n    symbol:'BTCUSD',\n    multiplier:'0.0001',\n    fundingRateCoefficient:'0.0000025',\n    deltaFundingCoefficient:'0.2',\n    minInitialMarginRatio:0.1,\n    initialMarginRatio:0.1,\n    minMaintenanceMarginRatio:0.05,\n    maintenanceMarginRatio:0.05,\n    feeRatio:0.0005,\n    underlier :'',\n    strike:0,\n    optionType:'C',\n    bTokenSymbolDisplay : ['BUSD']\n  }\n  // constructor(){\n  //   makeObservable(this,{\n  //     info : observable,\n  //     setInfo : action,\n  //     bTokenSymbolDisplay : computed\n  //   })\n  // }\n\n  async load(wallet,config){\n    if(config){\n      const chainId = wallet && wallet.isConnected() ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\n      const spec = await getSpecification(chainId,config.pool,config.symbolId);\n      spec.bTokenSymbol = this.bTokenSymbolDisplay(spec)\n      if(type.isOption){\n        spec.underlier = this.getUnderlierStrike(spec).underlier\n        spec.strike = this.getUnderlierStrike(spec).strike\n        spec.optionType = this.getUnderlierStrike(spec).optionType\n      }\n      this.setInfo(spec)\n    }\n    return this.info\n  }\n\n  setInfo(info){\n    this.info = info\n  }\n\n  getUnderlierStrike(spec){\n    let underlier = spec.symbol.split('-')[0]\n    let strike = spec.symbol.split('-')[1]\n    let optionType = spec.symbol.split('-')[2]\n    return {\n      underlier:underlier,\n      strike:strike,\n      optionType:optionType\n    }\n  }\n\n  bTokenSymbolDisplay(spec){\n    if(version.isV1 || version.isV2Lite || type.isOption || version.isOpen || (version.isV2 && !Array.isArray(spec.bTokenSymbol))){\n      return [spec.bTokenSymbol];\n    }\n    return spec.bTokenSymbol;\n  }\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\n\n\nexport default class History {\n\n   async load(wallet,config,isOptions){\n      if(wallet && wallet.isSupportChain(isOptions) && wallet.detail.chainId && config && config.pool){\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId); \n         return all;\n      } else {\n         return []\n      }\n   }\n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Oracle from \"./Oracle\";\nimport Position from \"./Position\";\nimport Contract from \"./Contract\";\nimport History from './History'\nimport Config from \"./Config\";\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol, getMarkpriceSymbol, getDefaultNw } from \"../utils/utils\";\nimport { getFundingRate, priceCache, DeriEnv, getVolatility } from \"../lib/web3js/indexV2\";\nimport { bg } from \"../lib/web3js/indexV2\";\nimport Intl from \"./Intl\";\nimport version from './Version'\nimport type from './Type'\nimport Type from \"./Type\";\n\n/**\n * 交易模型\n * 关联对象\n * 1. chain\n * 2. Oracle\n * 3. position\n * 4. contract\n * 5. history\n * 计算\n * 1. dynamic balance\n * 2. available blance\n * 响应事件\n * 1. chain change\n * 2. chain’s symbol changed\n * 3. index update\n * 4. volum change\n * 5. margin change\n * 输出\n * 1. dynamic balance\n * 2. margin\n * 3. available balance\n * 4. volume\n * 5. specs\n * 6. spec\n * 7. position\n * 8. contract\n * 9. fundingRate\n */\n\nexport default class Trading {\n  version = null;\n  wallet = null;\n  type = null;\n  configs = []\n  config = null;\n  index = ''\n  markPrice = ''\n  volume = ''\n  paused = false\n  slideIncrementMargin = 0\n  position = {}\n  positions = []\n  contract = {}\n  fundingRate = {}\n  volatility = ''\n  history = []\n  userSelectedDirection = 'long'\n  supportChain = true\n  optionsConfigs = {}\n\n  constructor() {\n    makeObservable(this, {\n      index: observable,\n      markPrice : observable,\n      volume: observable,\n      slideIncrementMargin: observable,\n      fundingRate: observable,\n      volatility : observable,\n      position: observable,\n      positions: observable,\n      history: observable,\n      contract: observable,\n      userSelectedDirection: observable,\n      supportChain: observable,\n      setWallet: action,\n      setConfigs: action,\n      setOptionConfigs: action,\n      setConfig: action,\n      setIndex: action,\n      setMarkPrice : action,\n      setContract: action,\n      setPosition: action,\n      setPositions: action,\n      setVolume: action,\n      setUserSelectedDirection: action,\n      // setSupportChain : action,\n      setFundingRate: action,\n      setVolatility : action,\n      setHistory: action,\n      setSlideMargin: action,\n      amount: computed,\n      fundingRateTip: computed,\n      optionFundingRateTip: computed,\n      initialMarginRatioTip: computed,\n      maintenanceMarginRatioTip: computed,\n      TransactionFeeTip: computed,\n      dpmmFundingRateTip: computed,\n      fundingCoefficientTip: computed,\n      rateTip: computed,\n      multiplierTip: computed,\n      TotalNetPositionTip: computed,\n      direction: computed,\n      volumeDisplay: computed,\n      isNegative: computed,\n      isPositive: computed\n    })\n    this.configInfo = new Config();\n    this.indexOracle = new Oracle();\n    this.markOracle = new Oracle();\n    this.positionInfo = new Position()\n    this.contractInfo = new Contract();\n    this.historyInfo = new History()\n  }\n\n  /**\n   * 初始化\n   * wallet and version changed will init\n   */\n  async init(wallet, finishedCallback) {\n    const isOption = Type.isOption\n    const all = await this.configInfo.load(version, isOption);\n    //如果连上钱包，有可能当前链不支持\n    if (wallet.isConnected()) {\n      this.setWallet(wallet);\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId, c.chainId)))\n      let defaultConfig = this.getDefaultConfig(this.configs, wallet);\n      //如果还是为空，则默认用所有config的第一条\n      if (!defaultConfig) {\n        defaultConfig = all.length > 0 ? all[0] : {}\n      }\n      this.setConfig(defaultConfig);\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\n    } else if (!wallet.isConnected() || !wallet.supportWeb3()) {\n      //没有钱包插件\n      this.setConfigs(all.filter(c => eqInNumber(getDefaultNw(DeriEnv.get()).id, c.chainId)))\n      // version.setCurrent('v2')\n      const defaultConfig = all.length > 0 ? all[0] : null\n      this.setConfig(defaultConfig)\n    }\n    this.loadByConfig(this.wallet, this.config, true, finishedCallback, isOption)\n    this.setVolume('')\n  }\n\n  async onSymbolChange(spec, finishedCallback, isOption) {\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\n    //v1 只需要比较池子地址，v2 需要比较symbolId\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\n    this.onChange(config, changed, finishedCallback, isOption)\n  }\n\n  async onChange(config, changed, finishedCallback, isOption) {\n    if (config) {\n      this.clean();\n      this.pause();\n      this.setConfig(config)\n      this.loadByConfig(this.wallet, config, changed, finishedCallback, isOption);\n      if (changed) {\n        this.store(config)\n      }\n      this.resume()\n      this.setVolume('')\n    } else {\n      finishedCallback && finishedCallback()\n    }\n  }\n\n  async loadByConfig(wallet, config, symbolChanged, finishedCallback, isOption) {\n    //切换指数\n    if (symbolChanged && config) {\n      this.indexOracle.addListener('indexPrice', data => {\n        this.setIndex(data.close)\n      })\n      this.markOracle.addListener('markPrice',data => {\n        this.setMarkPrice(data.close)\n      })\n    }\n    if (config) {\n      Promise.all([\n        this.positionInfo.load(wallet, config, position => {\n          this.setPosition(position)\n          this.syncFundingRate(wallet, config, isOption)\n          type.isOption && this.syncVolatility(wallet,config);\n        }),\n        this.contractInfo.load(wallet, config, isOption),\n        this.loadFundingRate(wallet, config, isOption),\n        this.historyInfo.load(wallet, config, isOption),\n        this.positionInfo.loadAll(wallet, config, positions => this.setPositions(positions)),\n      ]).then(results => {\n        if (results.length === 5) {\n          results[0] && this.setIndex(results[0].price) && this.setMarkPrice(results[0].markPrice) && this.setPosition(results[0]);\n          results[1] && this.setContract(results[1]);\n          results[2] && this.setFundingRate(results[2]);\n          results[3] && this.setHistory(results[3]);\n          results[4] && this.setPositions(results[4]);\n        }\n      }).finally(e => {\n        finishedCallback && finishedCallback()\n        this.indexOracle.load(getFormatSymbol(config.symbol))\n        this.markOracle.load(getFormatSymbol(config.markpriceSymbolFormat || `${config.symbol}-MARKPRICE`))\n        this.positionInfo.start()\n        this.positionInfo.startAll();\n      })\n    } else {\n      finishedCallback && finishedCallback()\n    }\n  }\n\n  refreshCache() {\n    const { pool } = this.config;\n    const symbol = type.isOption ? this.config.symbol.split('-')[0] : this.config.symbol\n    priceCache.clear();\n    priceCache.update(pool, symbol)\n  }\n\n\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\n  getDefaultConfig(configs = [], wallet) {\n    let defaultConfig = null;\n    if (configs.length > 0) {\n      const fromStore = this.getFromStore();\n      if (fromStore && eqInNumber(wallet.detail.chainId, fromStore.chainId)) {\n        defaultConfig = fromStore;\n      }\n      if (defaultConfig) {\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\n        if (pos === -1) {\n          defaultConfig = configs[0];\n        }\n      } else {\n        defaultConfig = configs[0]\n      }\n    }\n    return defaultConfig;\n  }\n\n  //存起来\n  store(config) {\n    storeConfig(version.current, config)\n  }\n\n  getFromStore() {\n    return getConfigFromStore(version.current)\n  }\n\n  async syncFundingRate() {\n    //资金费率和仓位同步\n    const fundingRate = await this.loadFundingRate(this.wallet, this.config)\n    if (fundingRate) {\n      this.setFundingRate(fundingRate)\n    }\n  }\n\n  async syncVolatility(wallet,config){\n    const chainId = wallet && wallet.isConnected() ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id    \n    if(config){\n      const volatility = await   getVolatility(chainId,config.pool,config.symbolId);\n      this.setVolatility(volatility)\n    }\n  }\n\n  async refresh() {\n    this.pause()\n    this.positionInfo.load(this.wallet, this.config, position => {\n      this.setPosition(position);\n      this.syncFundingRate();\n      type.isOption && this.syncVolatility(this.wallet,this.config);\n    });\n    this.positionInfo.loadAll(this.wallet, this.config, positions => this.setPositions(positions))\n    this.syncFundingRate();\n    type.isOption && this.syncVolatility(this.wallet,this.config);\n    this.wallet && this.wallet.isConnected() && this.wallet.loadWalletBalance(this.wallet.detail.chainId, this.wallet.detail.account)\n    const history = await this.historyInfo.load(this.wallet, this.config)\n    if (history) {\n      this.setHistory(history)\n    }\n    this.positionInfo.start();\n    this.positionInfo.startAll();\n    this.setVolume('')\n    this.resume();\n  }\n\n  /**\n   * 暂停实时读取index和定时读取position\n   */\n  pause() {\n    this.setPaused(true)\n    this.indexOracle.pause();\n    this.markOracle.pause();\n    this.positionInfo.pause();\n  }\n\n  /**\n   * 恢复读取\n   */\n  resume() {\n    this.setPaused(false)\n    this.indexOracle.resume();\n    this.markOracle.resume();\n    this.positionInfo.resume();\n  }\n\n  setWallet(wallet) {\n    this.wallet = wallet;\n  }\n\n  setConfigs(configs) {\n    if (type.isOption) {\n      this.setOptionConfigs(configs)\n    }\n    this.configs = configs\n  }\n\n  setOptionConfigs(configs) {\n    this.optionsConfigs = this.groupConfigBySymbol(configs)\n  }\n\n  groupConfigBySymbol(configs = []) {\n    return configs.reduce((total, config) => {\n      const symbol = config.symbol.split('-')[0]\n      if (!total[symbol]) {\n        total[symbol] = []\n      }\n      total[symbol].push(config)\n      return total;\n    }, [])\n  }\n\n  setConfig(config) {\n    //just for v2 and lite version in futrue\n    if (type.isFuture && (version.isV2 || version.isV2Lite)) {\n      config.markpriceSymbolFormat = getMarkpriceSymbol(config)\n    } \n    this.config = config\n  }\n\n  setIndex(index) {\n    this.index = index;\n  }\n\n  setMarkPrice(markPrice){\n    this.markPrice = markPrice;\n  }\n\n  setPosition(position) {\n    if (position) {\n      this.position = position\n    }\n  }\n\n  setPositions(positions) {\n    if (positions) {\n      this.positions = positions\n    }\n  }\n\n  setContract(contract) {\n    this.contract = contract\n  }\n\n  setHistory(history) {\n    this.history = history\n  }\n\n  setFundingRate(fundingRate) {\n    this.fundingRate = fundingRate;\n  }\n\n  setVolatility(volatility){\n    this.volatility = volatility\n  }\n\n  setVolume(volume) {\n    this.volume = volume;\n  }\n\n  setPaused(paused) {\n    this.paused = paused\n  }\n\n  setUserSelectedDirection(direction) {\n    this.userSelectedDirection = direction\n  }\n\n  setSlideMargin(slideIncrementMargin) {\n    if (slideIncrementMargin !== '') {\n      this.slideIncrementMargin = slideIncrementMargin\n      const position = this.position;\n      const price = position.price || this.index\n      const increment = slideIncrementMargin - position.marginHeld\n      let MarginRatio = type.isOption ? this.contract.initialMarginRatio : this.contract.minInitialMarginRatio;\n      // let volume =  increment / (price * this.contract.multiplier * MarginRatio);\n      let volume = bg(increment).div(bg(bg(price).times(bg(this.contract.multiplier).times(bg(MarginRatio))))).toString()\n      // if(type.isOption){\n      volume = +volume * +this.contract.multiplier\n      let index = this.contract.multiplier.indexOf('.')\n      let num = this.contract.multiplier.slice(index);\n      let length = num.length\n      let value = volume.toString()\n      if (value.indexOf(\".\") !== -1) {\n        value = value.substring(0, value.indexOf(\".\") + length)\n      }\n      this.setVolume(value)\n      // }else{\n      //   this.setVolume(volume.toFixed(0))\n      // }\n    }\n  }\n\n  clean() {\n    this.indexOracle.clean();\n    this.markOracle.clean();\n    this.positionInfo.clean();\n    this.version = null;\n    // this.configs = []\n    this.config = null;\n    this.markPrice = null\n    this.index = null\n    this.volume = ''\n    this.fundingRate = {}\n    this.position = {}\n    this.positions = []\n    this.contract = {}\n    this.history = []\n    this.userSelectedDirection = 'long'\n    // this.optionsConfigs = {}\n  }\n\n  get volumeDisplay() {\n    if ((type.isFuture && Math.abs(this.volume) === 0 && isNaN(this.volume)) || this.volume === '' || this.volume === '-' || this.volume === 'e') {\n      return '';\n    } else {\n      return Math.abs(this.volume)\n    }\n  }\n\n  get amount() {\n    const position = this.position\n    const contract = this.contract;\n    let initVolume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\n    // let optionVolume = type.isOption ? (+initVolume / +this.contract.multiplier):initVolume;\n    let optionVolume = (+initVolume / +this.contract.multiplier);\n    const volume = optionVolume\n    let { margin, marginHeldBySymbol: currentSymbolMarginHeld, marginHeld, unrealizedPnl } = position\n    const price = position.price || this.index\n    //v2\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\n    const contractValue = volume * price * contract.multiplier;\n    const incrementMarginHeld = type.isOption ? contractValue * contract.initialMarginRatio : contractValue * contract.minInitialMarginRatio\n    let totalMarginHeld = bg(marginHeld);\n\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\n    if ((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')) {\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\n      if (totalMarginHeld.lt(otherMarginHeld)) {\n        totalMarginHeld = otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())\n      }\n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\n    } else {\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\n      if (currentSymbolMarginHeld) {\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\n      }\n    }\n\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);\n    //总保证金和当前symbol保证金不能超过余额\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\n    if (currentSymbolMarginHeld) {\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\n    }\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) + (+position.volume))\n    const totalContractValue = (+totalVolume) * price\n    const curContractValue = (+this.volumeDisplay) * price\n    const leverage = Math.abs(curContractValue / (+dynBalance)).toFixed(1);\n    const afterLeverage = Math.abs((+totalContractValue) / (+dynBalance)).toFixed(1);\n    available = (+available) < 0 ? 0 : available\n    return {\n      volume: this.volume,\n      dynBalance: dynBalance,\n      margin: totalMarginHeld,\n      available: available,\n      exchanged: exchanged,\n      currentSymbolMarginHeld: currentSymbolMarginHeld,\n      leverage: leverage,\n      afterLeverage: afterLeverage\n    }\n  }\n\n  get direction() {\n    // 正仓\n    if (this.margin !== '') {\n      if ((+this.position.volume) > 0) {\n        if (Math.abs(this.volume) > Math.abs(this.position.volume)) {\n          return 'long'\n        } else {\n          return 'short'\n        }\n      } else if ((+this.position.volume) < 0) {\n        //负仓\n        if ((+this.volume) > Math.abs(+this.position.volume)) {\n          return 'short'\n        } else {\n          return 'long'\n        }\n      }\n    }\n    return 0\n  }\n\n  //正仓\n  get isPositive() {\n    return bg(this.position.volume).gt(0);\n  }\n\n  //负仓\n  get isNegative() {\n    return bg(this.position.volume).isNegative();\n  }\n\n  //资金费率\n  async loadFundingRate(wallet, config, isOption) {\n    if (config) {\n      const chainId = wallet && wallet.isConnected() && wallet.isSupportChain(isOption) ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\n      if (config) {\n        const res = await getFundingRate(chainId, config.pool, config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\n        return res;\n      }\n    }\n  }\n\n  get fundingRateTip() {\n    if (version && version.isV2) {\n      if (this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config) {\n        if (Intl.locale === 'zh') {\n          return `${Intl.get('lite', 'funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n            `\\n ${Intl.get('lite', 'per-block')} ${Intl.get('lite', '1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite', 'index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`\n        } else {\n          return `${Intl.get('lite', 'funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n            `\\n${Intl.get('lite', '1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite', 'index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite', 'per-block')}`\n        }\n\n      }\n    } else {\n      if (this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config) {\n        if (Intl.locale === 'zh') {\n          return `${Intl.get('lite', 'funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n            `\\n${Intl.get('lite', 'per-block')} ${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `\n        } else {\n          return `${Intl.get('lite', 'funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n            `\\n${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite', 'per-block')})`\n        }\n      }\n    }\n    return ''\n  }\n\n  get optionFundingRateTip() {\n    if (this.fundingRate && this.fundingRate.premiumFundingPerSecond && this.config) {\n      if (Intl.locale === 'zh') {\n        return `${Intl.get('lite', 'funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\n          `\\n ${Intl.get('lite', 'per-second')} ${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} `\n      } else {\n        return `${Intl.get('lite', 'funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\n          `\\n${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} ${Intl.get('lite', 'per-second')}`\n      }\n    }\n    return ''\n  }\n  get dpmmFundingRateTip() {\n    if (this.fundingRate && this.fundingRate.fundingPerSecond && this.config) {\n      if (Intl.locale === 'zh') {\n        return `${Intl.get('lite', 'funding-rate-per-second')} = ${this.fundingRate.fundingPerSecond}` +\n          `\\n ${Intl.get('lite', 'per-second')} ${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingPerSecond} ${this.config.bTokenSymbol} `\n      } else {\n        return `${Intl.get('lite', 'funding-rate-per-second')} = ${this.fundingRate.fundingPerSecond}` +\n          `\\n${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingPerSecond} ${this.config.bTokenSymbol} ${Intl.get('lite', 'per-second')}`\n      }\n    }\n    return ''\n  }\n\n  get rateTip() {\n    if (this.fundingRate && this.fundingRate.funding0 && this.markPrice) {\n      return `${Intl.get('lite', 'rate-hover-one')} ${bg(this.fundingRate.funding0).div(bg(this.markPrice)).times(bg(100)).toString()}% ${Intl.get('lite', 'rate-hover-two')}`\n    }\n    return ''\n  }\n\n  get fundingCoefficientTip() {\n    if (this.contract && this.contract.fundingRateCoefficient && this.config.unit) {\n      if (Intl.locale === 'zh') {\n        return `1${this.config.unit} ${Intl.get('lite', 'funding-coefficient-hove-one')} ${Intl.get('lite', 'funding-coefficient-hove-two')}${this.contract.fundingRateCoefficient} ${Intl.get('lite', 'funding-coefficient-hove-three')} ${bg(this.contract.fundingRateCoefficient).times(bg(86400)).toString()} ${Intl.get('lite', 'per-day')}\n      `\n      } else {\n        return `${Intl.get('lite', 'funding-coefficient-hove-one')} ${this.config.unit} ${Intl.get('lite', 'funding-coefficient-hove-two')} ${this.contract.fundingRateCoefficient} ${Intl.get('lite', 'funding-coefficient-hove-three')} ${bg(this.contract.fundingRateCoefficient).times(bg(86400)).toString()} ${Intl.get('lite', 'per-day')}\n      `\n      }\n\n    }\n    return ''\n  }\n\n  get initialMarginRatioTip() {\n    if (this.contract && this.contract.initialMarginRatioOrigin) {\n      return `${Intl.get('lite', 'in-the-money-initial')} = ${this.contract.initialMarginRatioOrigin}` +\n        `\\n${Intl.get('lite', 'out-of-money-initial')} = ${Intl.get('lite', 'in-max')}(${this.contract.initialMarginRatioOrigin}${Intl.get('lite', 'otm-ratio-initial')} ${this.contract.initialMarginRatioOrigin / 10})` +\n        `\\n\\n${Intl.get('lite', 'otm-ratio-max')}`\n    }\n    return ''\n  }\n  get maintenanceMarginRatioTip() {\n    if (this.contract && this.contract.maintenanceMarginRatioOrigin) {\n      return `${Intl.get('lite', 'in-the-money-maintenance')} = ${this.contract.maintenanceMarginRatioOrigin}` +\n        `\\n${Intl.get('lite', 'out-of-money-maintenance')} = ${Intl.get('lite', 'in-max')}(${this.contract.maintenanceMarginRatioOrigin}${Intl.get('lite', 'otm-ratio-maintenance')} ${this.contract.maintenanceMarginRatioOrigin / 10})` +\n        `\\n\\n${Intl.get('lite', 'otm-ratio-max')}`\n    }\n    return ''\n  }\n\n  get multiplierTip() {\n    if (this.contract && this.config) {\n      return `${Intl.get('lite', 'the-notional-value-of')} ${this.contract.multiplier}${this.config.unit}`\n    }\n    return ''\n  }\n\n  get TransactionFeeTip() {\n    if (this.contract && (this.contract.feeRatioITM && this.contract.feeRatioOTM)) {\n      return `${Intl.get('lite', 'transaction-fee-tip-in-the-money')} ${this.contract.underlier} ${Intl.get('lite', 'price')}  * ${bg(this.contract.feeRatioITM).times(bg(100)).toString()} %` +\n        `\\n ${Intl.get('lite', 'transaction-fee-tip-out-of-money')} * ${bg(this.contract.feeRatioOTM).times(bg(100)).toString()} %`\n    }\n    return ''\n  }\n  get TotalNetPositionTip() {\n    if (this.contract && this.fundingRate.tradersNetVolume && this.config) {\n      return `${Intl.get('lite', 'notional-of-total-net-position')} ${this.fundingRate.tradersNetVolume} ${this.config.unit}`\n    }\n    return ''\n  }\n\n}","import { makeObservable, observable, action, computed } from \"mobx\";\n\nclass Loading {\n  isLoading = false\n  constructor(){\n    makeObservable(this,{\n      isLoading : observable,\n      setIsLoading : action,\n      loading : action,\n      isShowMask : computed\n    })\n  }\n\n  setIsLoading(isLoading){\n    this.isLoading = isLoading\n  }\n\n  loading(){\n    this.setIsLoading(true)\n  }\n\n  loaded(){\n    this.setIsLoading(false)\n  }\n\n  get isShowMask(){\n    return this.isLoading === true;\n  }\n\n  \n}\n\nexport default new Loading();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport App from './App';\nimport './assets/deri.less';\nimport { Provider } from 'mobx-react';\nimport Wallet from './model/Wallet';\nimport Trading from './model/Trading';\nimport { DeriEnv } from './lib/web3js/indexV2';\nimport version from './model/Version';\nimport intl from './model/Intl';\nimport loading from './model/Loading';\nimport   type from './model/Type';\n\nconst wallet = new Wallet();\nconst trading = new Trading()\n\nif(process.env.NODE_ENV === 'production') {\n  DeriEnv.set('prod')\n}\nDeriEnv.set('prod')\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider wallet={wallet} type={type}  trading={trading} version={version} intl={intl} loading={loading}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}