{"version":3,"sources":["lib/web3js/shared/utils/time.js","lib/web3js/shared/config/database.js","lib/web3js/shared/utils/web3.js","lib/web3js/shared/contract/contract_base.js","lib/web3js/shared/config/config.js","lib/web3js/shared/config/pool.js","lib/web3js/shared/api/config_api.js","lib/web3js/shared/utils/oracle.js","lib/web3js/shared/contract/oracle/symbol_oracle_off_chain.js","lib/web3js/shared/contract/oracle/woo_oracle.js","lib/web3js/shared/factory/oracle.js","lib/web3js/shared/factory/database.js","lib/web3js/shared/contract/TERC20.js","lib/web3js/shared/factory/contract/b_token.js","lib/web3js/shared/contract/deri/deri.js","lib/web3js/shared/contract/deri/mining_vault_pool.js","lib/web3js/shared/contract/deri/mining_vault_router.js","lib/web3js/shared/contract/deri/wormhole.js","lib/web3js/shared/factory/contract/deri.js","lib/web3js/shared/contract/lp_pool/slp_pool.js","lib/web3js/shared/contract/lp_pool/clp_pool.js","lib/web3js/shared/contract/lp_pool/clp2_pool.js","lib/web3js/shared/factory/contract/lp_pool.js","lib/web3js/shared/api/wallet_api.js","lib/web3js/shared/factory/contract/activity.js","lib/web3js/shared/api/database_api.js","lib/web3js/shared/api/api_globals.js","lib/web3js/shared/api/deri_query_api.js","lib/web3js/shared/api/deri_transaction_api.js","lib/web3js/shared/api/slp_pool_api.js","lib/web3js/shared/api/clp2_pool_api.js","lib/web3js/shared/api/lp_pool_query_api.js","lib/web3js/v1/calculation/fundingRate.js","lib/web3js/v1/calculation/index.js","lib/web3js/v1/contract/perpetual_pool.js","lib/web3js/v1/contract/p_token.js","lib/web3js/v1/contract/l_token.js","lib/web3js/v1/factory.js","lib/web3js/shared/api/lp_pool_transaction_api.js","lib/web3js/option/calculation/PMM2.js","lib/web3js/option/calculation/findLiquidationPrice2.js","lib/web3js/option/calculation/trade.js","lib/web3js/v2_lite_dpmm/contract/adapter.js","lib/web3js/option/contract/abis.js","lib/web3js/option/contract/everlasting_option_viewer.js","lib/web3js/option/contract/l_token_option.js","lib/web3js/option/contract/p_token_option.js","lib/web3js/option/contract/option_pricer.js","lib/web3js/option/factory/tokens.js","lib/web3js/option/utils.js","lib/web3js/option/contract/everlasting_option.js","lib/web3js/option/factory/pool.js","lib/web3js/option/api/trade_query_api.js","lib/web3js/v2_lite_open/config.js","lib/web3js/v2_lite_open/contract/abis.js","lib/web3js/v2_lite_open/contract/chainlink_feed.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryChainlinkAbi.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryChainlink.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryOffChainAbi.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryOffChain.js","lib/web3js/v2_lite_open/contract/abi/perpetualPoolLiteManagerDpmmAbi.js","lib/web3js/v2_lite_open/contract/gen/PerpetualPoolLiteManagerDpmm.js","lib/web3js/v2_lite_open/contract/p_token.js","lib/web3js/v2_lite_dpmm/utils.js","lib/web3js/v2_lite_dpmm/calc.js","lib/web3js/v2_lite_dpmm/contract/abi/perpetualPoolLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/gen/PerpetualPoolLite.js","lib/web3js/v2_lite_dpmm/contract/abi/lTokenLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/gen/LTokenLite.js","lib/web3js/v2_lite_dpmm/contract/abi/pTokenLiteAbi.js","lib/web3js/v2_lite_dpmm/contract/gen/PTokenLite.js","lib/web3js/v2_lite_dpmm/contract/factory.js","lib/web3js/v2_lite_open/contract/perpetual_pool.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_manager.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite_open/factory.js","lib/web3js/v2_lite_open/api/query_api.js","lib/web3js/v2_lite_open/api/transaction_api.js","lib/web3js/v2_lite/contract/perpetual_pool_old.js","lib/web3js/v2_lite/factory.js","lib/web3js/activity/config.js","lib/web3js/activity/utils.js","lib/web3js/activity/contract/abi/pTokenAirdropNULSAbi.js","lib/web3js/activity/contract/gen/PTokenAirdropNULS.js","lib/web3js/activity/contract/abi/deriVoteAbi.js","lib/web3js/activity/contract/gen/DeriVote.js","lib/web3js/activity/contract/factory.js","lib/web3js/activity/api/ptoken_airdrop.js","lib/web3js/activity/api/deri_staking.js","lib/web3js/activity/api/deri_vote.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/v1/api/trade_history_api.js","lib/web3js/v1/api/api_v1_globals.js","lib/web3js/v1/api/contract_query_api.js","lib/web3js/v1/api/contract_transaction_api.js","lib/web3js/v1/api/index.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2_dpmm/contract/adapter.js","lib/web3js/v2_dpmm/contract/abi/lTokenAbi.js","lib/web3js/v2_dpmm/contract/gen/LToken.js","lib/web3js/v2_dpmm/contract/abi/pTokenAbi.js","lib/web3js/v2_dpmm/contract/gen/PToken.js","lib/web3js/v2_dpmm/contract/abi/perpetualPoolAbi.js","lib/web3js/v2_dpmm/contract/gen/PerpetualPool.js","lib/web3js/v2_dpmm/contract/abi/perpetualPoolRouterAbi.js","lib/web3js/v2_dpmm/contract/gen/PerpetualPoolRouter.js","lib/web3js/v2_dpmm/contract/factory.js","lib/web3js/shared/cache/object_cache.js","lib/web3js/v2_dpmm/contract/PoolApi.js","lib/web3js/v2_dpmm/api/query_api.js","lib/web3js/v2_dpmm/api/trade_history_api.js","lib/web3js/v2_dpmm/api/index.js","lib/web3js/v2_dpmm/api/transaction_api.js","lib/web3js/v2_lite/api/mining_query_api.js","lib/web3js/v2_lite/api/mining_transaction_api.js","lib/web3js/v2_lite/utils.js","lib/web3js/v2_lite/api/trade_query_api.js","lib/web3js/v2_lite/api/trade_transaction_api.js","lib/web3js/v2_lite/api/trade_history_api.js","lib/web3js/v2_lite/api/index.js","lib/web3js/v2_lite_dpmm/contract/PoolApi.js","lib/web3js/v2_lite_dpmm/api/query_api.js","lib/web3js/v2_lite_dpmm/api/trade_history_api.js","lib/web3js/v2_lite_dpmm/api/index.js","lib/web3js/v2_lite_dpmm/api/transaction_api.js","lib/web3js/option/api/mining_query_api.js","lib/web3js/option/api/mining_transaction_api.js","lib/web3js/option/api/trade_transaction_api.js","lib/web3js/option/api/trade_history_api.js","lib/web3js/option/api/index.js","lib/web3js/api_wrapper/api_shared.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","lib/web3js/shared/error/error.js","lib/web3js/shared/utils/api.js","lib/web3js/shared/config/check.js","lib/web3js/shared/contract/database/database.js","lib/web3js/shared/contract/database/database_wormhole.js","lib/web3js/shared/contract/database/database_airdrop.js","utils/utils.js","utils/Constants.js","lib/web3js/shared/config/env.js","model/Type.js","model/ApiProxy.js","lib/web3js/shared/utils/convert.js","lib/web3js/shared/contract/adapter.js","lib/web3js/shared/contract/abi/pancakePairAbi.js","lib/web3js/shared/contract/gen/PancakePair.js","lib/web3js/shared/contract/abi/TERC20Abi.js","lib/web3js/shared/contract/gen/TERC20.js","lib/web3js/shared/contract/abi/ERC20Abi.js","lib/web3js/shared/contract/gen/ERC20.js","lib/web3js/shared/contract/abi/chainlinkOracleAbi.js","lib/web3js/shared/contract/gen/ChainlinkOracle.js","lib/web3js/shared/contract/abi/offChainOracleAbi.js","lib/web3js/shared/contract/gen/OffChainOracle.js","lib/web3js/shared/contract/abi/offChainVolatilityOracleAbi.js","lib/web3js/shared/contract/gen/OffChainVolatilityOracle.js","lib/web3js/shared/contract/abi/TERC20MintLimitAbi.js","lib/web3js/shared/contract/gen/TERC20MintLimit.js","lib/web3js/shared/contract/abi/bTokenOracle1Abi.js","lib/web3js/shared/contract/gen/BTokenOracle1.js","lib/web3js/shared/contract/factory.js","lib/web3js/shared/config/pool_v1.js","lib/web3js/shared/config/token.js","lib/web3js/shared/utils/factory.js","model/Version.js","lib/web3js/shared/utils/derijsnext.js","lib/web3js/shared/contract/abis.js","lib/web3js/shared/utils/validate.js","lib/web3js/shared/config/chain.js","lib/web3js/shared/error/error_code.js","lib/web3js/shared/config/constant.js","lib/web3js/shared/config/version.js","lib/web3js/shared/factory/web3.js","lib/web3js/v2_lite/contract/abis.js","lib/web3js/shared/utils/chain.js","components/Icon/Icon.js","assets/img/arrow-down.svg","lib/web3js/shared/utils/network.js","lib/web3js/shared/config/rest_server.js","lib/web3js/shared/contract/oracle/wrapped_oracle.js","lib/web3js/shared/contract/activity/broker_manager.js","lib/web3js/shared/contract/activity/ptoken_airdrop.js","lib/web3js/v2_lite/contract/index.js","assets/img/bsc-logo.svg","assets/img/logo.svg","lib/web3js/shared/contract/b_token.js","assets/img/lang-icon.svg","assets/img/matemask-logo.svg","model/WebSocket.js","components/Spinner/Spinner.js","components/Button/Button.js","lib/web3js/v2_lite/contract/l_token.js","lib/web3js/v2_lite/contract/p_token.js","lib/web3js/v2_lite/contract/perpetual_pool_lite_viewer.js","assets/img/ethereum.svg","hooks/useConfig.js","assets/img/close-modal-icon.svg","assets/img/polygon-logo.svg","assets/img/rate-down-icon.svg","assets/img/btc-icon.svg","assets/img/btc.svg","assets/img/gauge-graph.svg","assets/img/heco.svg","assets/img/rate-up-icon.svg","assets/img sync /^/.//.*$","assets/img/amusdc.svg","assets/img/arrow-up.svg","assets/img/busd-logo.svg","assets/img/busd.svg","assets/img/cake.svg","assets/img/deposit.svg","assets/img/error.svg","assets/img/matic.svg","assets/img/success.svg","assets/img/tbusd.svg","assets/img/tweth.svg","assets/img/usdt.svg","assets/img/wbnb.svg","assets/img/withdraw.svg","assets/img/wmatic.svg","../lang).)*/.json$","components/Label/Label.js","components/Header/Menu.js","components/Header/LangSelector.js","components/Header/NetworkSelector.js","components/Header/WalletSelector.js","components/Header/Header.js","hooks/useLang.js","components/Footer/Footer.js","utils/LoadableComponent.js","hoc/withLanguage.js","components/IndexRoute/IndexRoute.js","pages/PageRouter.js","App.js","model/Intl.js","reportWebVitals.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Pool.js","model/PoolManager.js","model/Trading.js","model/Loading.js","components/Message/MessageTemplate.js","index.js"],"names":["getDBAddress","env","useProductionDB","getDBWormholeAddress","getDBAirdropAddress","intRe","deleteIndexedKey","obj","Object","keys","length","intKeyCount","reduce","acc","k","test","newObj","forEach","res","i","Array","isArray","push","getLatestBlockNumber","chainId","a","web3Factory","get","web3","eth","getBlockNumber","getBlockInfo","blockNumber","getBlock","getPastEvents","contract","eventName","filter","fromBlock","to","events","amount","includes","toBlock","es","e","getPastEventsUseAbi","contractAddress","contractAbi","Contract","MAX_GAS_AMOUNT","ContractBase","this","method","args","retry","_init","methods","call","AppError","name","accountAddress","gas","estimateGas","from","parseInt","console","log","tx","self","_transactionReceipt","resolve","reject","getTransactionReceipt","error","receipt","setTimeout","status","Promise","all","_estimatedGas","getGasPrice","toString","txRaw","numberToHex","value","data","encodeABI","window","ethereum","request","params","_getTransactionReceipt","getJsonConfig","rawConfig","checkEnv","jsonTestnetConfig","jsonDevConfig","jsonProdConfig","config","JSON","parse","pools","getPoolViewerConfig","version","configs","address","viewer","find","c","getPoolConfig","poolAddress","DeriEnv","pool","concat","getPoolV1ConfigList","v","getPoolVersionId","checkAddress","versionId","failed","response","code","message","getLpConfigList","catchApiError","_getLpConfigList","getPreminingConfigList","_getPreminingConfigList","getRetiredPoolConfigList","_getRetiredPoolConfigList","getDeriConfig","_getDeriConfig","delay","ms","getPriceInfoForV1","symbol","baseUrl","addSymbolParam","url","fetch","mode","cache","ok","json","priceInfo","getOracleUrl","type","PRESERVED_SYMBOLS","getPriceFromRest","getPriceInfo","price","deriToNatural","volatility","mapToBTokenInternal","DEBUG","getOracleInfosFromRest","symbolList","headers","Accept","body","stringify","getPriceInfos","oraclePricesCache","pending","symbols","key","join","Math","floor","Date","now","timestamp","RestOracle","getPrice","getOraclePrice2","oracleAddress","normalizeChainId","mapToSymbolInternal","oracle","wrappedOracleFactory","getOraclePriceFromCache2","getOracleVolatilitiesForOption","oracleSymbols","map","normalizeOptionSymbol","index","indexOf","os","volatilities","s","checkOffChainOracleSymbol","offChainOracleFactory","signer","signatory","getSymbolPrices","offChainSymbolIds","offChainSymbolNames","onChainOracleAddressWithPlaceHolder","symbolId","_symbol","f","onChainSymbolPrices","offChainSymbolPrices","fromWei","symbolPrices","o","shift","SymbolOracleOffChain","symbolOracleOffChainAbi","_call","WooOracle","decimal","wooOracleAbi","wooOracleAddresses","instanceMap","factory","WrappedOracle","wooOracleFactory","databaseFactory","databaseInstanceMap","database","DatabaseContract","databaseActivityFactory","databaseActivityClaimFactory","databaseDeriVoteFactory","databaseWormholeFactory","DatabaseWormholeContract","databaseAirdropFactory","DatabaseAirdropContract","TERC20","TERC20Abi","owner","spender","account","_transact","CONTRACT_ABI","DeriContract","allowance","gt","MAX_UINT256","_balanceOf","decimals","bg","MiningVaultPool","MiningVaultRouter","WormholeContract","toChainId","toWormholeAddress","wormholeAddress","naturalToDeri","fromChainId","fromWormhole","fromNonce","r","deriFactory","wormholeFactory","miningVaultRouterFactory","SlpPool","ClpPool","minAddLiquidity","redemptionFeeRatio","liquidity","Error","Clp2Pool","slpPoolFactory","slpPoolInstanceMap","slpPool","clp2PoolFactory","clpPoolInstanceMap","clp2PoolInstanceMap","clp2Pool","hasWallet","BrokerManager","PTokenAirdrop","catchSyncApiError","isMetaMask","connectWallet","handleChainChanged","handleAccountChanged","accounts","on","location","reload","hexToNumber","getUserWalletBalance","checkChainId","getBalance","balance","unit","getChainGasUnit","getUserInfo","userAddress","db","toChecksumAddress","getValues","getTime","deriToString","deadline","nonce","valid","deriToBool","getUserInfoHarvest","harvestLp","harvestTrade","lp","trade","getUserInfoTotal","total","getUserInfoAll","userInfo","userInfoHarvest","userInfoTotal","assign","getPoolInfoApy","poolNetwork","getNetworkName","apy","volume1h","volume24h","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","v1","r1","s1","v2","r2","s2","priceCache","_prices","split","set","val","isNaN","parseFloat","fundingRateCache","resourceMap","resource","liquidatePriceCache","_cache","getUserWormholeSignature","databaseWormhole","signature","isDeriUnlocked","deriAddress","deri","isUnlocked","getDeriBalance","balanceOf","mintDeri","catchTxApiError","wormhole","unlockDeri","unlock","mintAirdrop","miningVaultAddress","getMiningVaultRouterConfig","miningVaultRouter","mint","getSlpLiquidityInfo","getLpConfig","bTokenAddress","bToken","ERC20Factory","getLiquidity","bTokenBalance","shares","poolLiquidity","shareValue","isSlpUnlocked","getSlpWalletBalance","addSlpLiquidity","addLiquidity","removeSlpLiquidity","removeLiquidity","unlockSlp","getClp2LiquidityInfo","isClp2Unlocked","getClp2WalletBalance","addClp2Liquidity","removeClp2Liquidity","unlockClp2","getLpUserStakeInfo","slp","clp","isStaked","getLpLiquidityInfo","isLpUnlocked","getLpWalletBalance","calculateLiquidityUsed","tradersNetVolume","multiplier","poolMarginRatio","abs","calculateFundingRate","fundingRateCoefficient","processFundingRate","fundingRate","annualBlockCount","getDailyBlockNumber","times","calculateShareValue","lTokenTotalSupply","eq","div","calculateMaxRemovableShares","lTokenBalance","tradersNetCost","minPoolMarginRatio","removable","plus","minus","max","min","calculateEntryPrice","volume","cost","calculateMarginHeld","minInitialMarginRatio","calculatePnl","calculateLiquidationPrice","margin","minMaintenanceMarginRatio","tmp","isOrderValid","newVolume","minMargin","poolMaxVolume","gte","lte","negated","success","POOL_ABI","PerpetualPool","isProvider","defaultValue","result","cumuFundingRate","cumuFundingRateBlock","feeRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","priceDelayAllowance","errorMessage","signed","getStateValues","stateValues","getParameters","parameters","args1","validateArgs","fundingRatePerBlock","args2","liquidityUsed","transaction","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","perpetualPoolFactory","perpetualPoolInstanceMap","perpetualPool","pTokenFactory","pTokenInstanceMap","pToken","lTokenFactory","lTokenInstanceMap","lToken","unlockLp","addLpLiquidity","removeLpLiquidity","queryTradePMM","theoreticalPrice","K","invalidValues","NaN","undefined","getEverlastingTimePriceAndDelta","S","V","T","timeValue","delta","u","sqrt","pow","getDynamicInitialMarginRatio","spot","strike","isCall","initialMarginRatio","otmRatio","canLiquidateWithPrice","trader","positions","newUnderlierPrice","newDynamicMargin","dynamicMargin","newInitialMargin","initialMargin","position","newIntrinsicValue","strikePrice","fundingPeriod","newTimeValue","newPnl","newDynamicMarginRatio","pnl","spotPrice","dynamicMarginRatio","newMaintenanceMargin","maintenanceMarginRatio","findLiquidationPrice","numPositions","price1","price2","final1","final2","l1","l2","head","slice","startsWith","maintenanceMargin","klass","dynamicInitialMarginRatio","dynamicInitialPoolMarginRatio","initialPoolMarginRatio","getMarginHeldBySymbol","getAverageEntryPrice","getLiquidationPrice","state","poolState","symbolState","traderState","positionState","normalizedSymbol","toNumberForObject","underlier","getLiquidationPrices","liquidationPrices","oSymbol","everlastingOptionAbi","everlastingOptionViewerAbi","lTokenOptionAbi","pTokenOptionAbi","everlastingOptionOldAbi","EverlastingOptionViewer","oraclePrices","oracleVolatilities","fromWeiForObject","LTokenOption","PTokenOption","tokenId","lastCumulativePremiumFundingRate","operator","optionPricerAbi","OptionPricer","everlastingOptionViewerFactory","lTokenOptionFactory","pTokenOptionFactory","optionPricerFactory","volatilitiesCache","_calculateDpmmPrice","indexPrice","alpha","tradersNetPosition","_queryTradeDpmm","tradePosition","EverlastingOption","viewerAddress","usedByEstimatedApi","addresses","getAddresses","pTokenAddress","lTokenAddress","optionPricerAddress","pricer","bTokenSymbol","fundingCoefficient","getActiveSymbolIds","symbolIds","activeSymbolIds","getSymbol","activeSymbolNames","ttt","symbolVolatilities","getPoolStates","activeSymbols","volatilitySymbols","getVolatilitySymbols","getPoolStateValues","preTimestamp","lastTimestamp","curTimestamp","userState","protocolFeeAccrued","chainlinkOracleFactory","symbolIndexPrices","getEverlastingTimeValueAndDelta","toWei","timeValues","dynamicEquity","intrinsicValue","dpmmPrice","fundingPerSecond","fundingPerVolume","funding","offset2","cumulativeFundingRate","getPosition","totalPnl","totalFundingAccrued","fundingAccrued","volatilityInfos","values","p","oracleSymbol","bAmount","_getVolSymbolPrices","prices","lShares","tradeVolume","event","info","returnValues","block","tradeFee","direction","tradeCost","notional","contractValue","transactionFee","transactionHash","time","extra","everlastingOptionFactory","getSpecification","checkApiInputWithoutAccount","checkTokenId","optionPool","init","symbolInfo2","poolInfo2","symbolIndex","findIndex","symbolInfo","feeRatioOTM","feeRatioITM","protocolFeeCollectRatio","initialMarginRatioOrigin","maintenanceMarginRatioOrigin","indexConstituents","getIndexInfo","getPositionInfo","checkApiInput","symbolName","getTraderStates","volPrice","timePrice","markPrice","averageEntryPrice","marginHeld","marginHeldBySymbol","unrealizedPnl","unrealizedPnlList","oS","premiumFundingAccrued","liquidationPrice","getPositionInfos","volPrices","vIndex","getWalletBalance","_getFundingRate","totalDynamicEquity","curSymbolIndex","liquidityUsedInAmount","premiumFunding","premiumFundingPerSecond","getEstimatedFee","fee","getEstimatedMargin","leverage","parameterInfo","marginRatio","getFundingRateCache","getFundingRate","premiumFunding0","getEstimatedFundingRate","newNetVolume","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","getUserBTokensInfo","availableBalance","walletBalance","getVolatility","openPoolChainIds","prod","dev","testnet","getPoolV2LiteManagerDpmmConfig","initialBlock","getOracleFactoryChainlinkConfig","perpetualPoolLiteAbi","pTokenLiteAbi","perpetualPoolLiteManagerAbi","perpetualPoolLiteViewerAbi","chainlinkFeedAbi","ChainlinkFeed","trim","oracleFactoryChainlinkAbi","OracleFactoryChainlink","oracleFactoryOffChainAbi","OracleFactoryOffChain","delayAllowance","perpetualPoolLiteManagerDpmmAbi","PerpetualPoolLiteManagerDpmm","poolId","sourcePool","pairedTokenAddress","processPosition","lastCumulativeFundingRate","PTokenLite","isProdChain","getOracleServerUrl","calculateK","calculateDpmmPrice","calculateDpmmCost","overrideMethods","fns","fn","processMethod","methodName","propList","originMethod","prototype","apply","processResult","processTxMethod","toWeiArgPositions","_getSymbolPrices","newArgs","arg","isEstimatedApi","getFundingPeriod","pTokenLiteFactory","lTokenLiteFactory","getPoolLiquidity","offChainOracleSymbolNames","offChainOracleSymbolIds","getConfig","bTokens","normalizeSymbolUnit","getSymbols","indexPrices","SECONDS_IN_A_DAY","getPositions","getLastTimestamp","timeDiff","traderPnl","isSymbolsUpdated","isPositionsUpdated","getTraderLiquidity","getDynamicEquity","getPoolRequiredMargin","getTraderMarginStatus","getMargin","requiredInitialMargin","formatTradeEvent","priceInfos","getPoolExtraInfo","getHttpBase","fetchJson","chain_id","block_number","target_pool","migration_timestamp","isMigrationPrepared","migrationDestination","isMigrationApproved","getOpenzoneConfig","extraInfo","hasMigration","targetPool","migrationTimestamp","isValid","getOpenzoneConfigAlt","PerpetualPoolLite","target","graceDays","source","lTokenLiteAbi","LTokenLite","perpetualPoolLiteDpmmFactory","contractFactory","addMethods","getProtocolFeeAccrued","lTokenLiteAdapter","pTokenLiteAdapter","updateAddresses","getBTokenSymbol","isMigrationExecuted","PerpetualPoolLiteManager","PerpetualPoolLiteViewer","perpetualPoolLiteFactory","perpetualPoolLiteViewerFactory","perpetualPoolLiteManagerDpmmFactory","chainlinkFeedFactory","oracleFactoryChainlinkFactory","getPoolOpenConfigList","chainIds","version_id","getConfigAlt","chain","zone","getConfigZone","sort","b","getPoolOpenConfig","perpetualPoolLite","getPoolOpenOracleList","oracleFactoryConfig","oracleFactory","oracles","eventBlock","number","isPoolController","controller","poolController","getPoolAllSymbolNames","poolViewer","getOffChainOracleSymbols","getPoolAcitveSymbolIds","openConfigListCache","update","OPEN_POOL_EXPIRE_TIME","updatedAt","createPool","poolManagerAddress","poolManager","newParameters","createMigrationPool","addSymbol","prepareMigration","targetPoolAddress","approveMigration","executeMigration","oldPoolAddress","getLastUpdateBlock","lastUpdateBlock","perpetualPoolLiteDpmm","executeMigrationWithTimestamp","createOracle","feedAddress","feedContract","PerpetualPoolLiteOld","perpetualPoolLiteOldAbi","offChainOracleSymbols","instances","getPTokenAirdropConfig","getDeriVoteConfig","getStakingMiningVaultRouterConfig","pTokenAirdropNULSAbi","PTokenAirdropNULS","deriVoteAbi","DeriVote","votingId","voter","votingOption","PTokenAirdropNULSFactory","deriVoteFactory","isPTokenAirdropped","isAirdropPToken","totalAirdropCount","isUserPTokenExist","isBTokenUnlocked","hasRequiredBalance","unlockBToken","airdropPToken","keyPrefix","epoch","claimKeyPrefix","getStakingTop10Users","n","fill","resultPnl","no","userAddr","feePaid","score","evgCoeff","specialRewardsA","specialRewardsB","top10","top10Pnl","getUserStakingInfo","scoreQ1","scoreQ2","scoreQ3","scoreQ4","coef","getUserStakingReward","rewardDERI","topUsers","topPnlUsers","getUserStakingContribution","totalContrib","userContrib","Q1Contrib","Q2Contrib","Q3Contrib","Q4Contrib","userQ1Contrib","userQ2Contrib","userQ3Contrib","userQ4Contrib","userQ1Point","userQ2Point","userQ3Point","userQ4Point","getUserStakingClaimInfo","claimable","claimed","locked","unclaimed","deriPrice","bnbPrice","claimMyStaking","claimArgs","getVotingResult","hexToNumberString","getUserVotingPower","getUserVotingResult","votingPower","option","vote","deriVote","voteId","getPoolConfigList","includeOpenPools","processTradeEvent","txHash","_getTimeStamp","timeStamp","_calculateFee","baseToken","getTradeHistoryOnline","getPoolV1Config","_getBlockInfo","filters","_getPastEvents","item","unshift","getTradeHistory","tradeFromBlock","tradeHistoryBlock","liquidateFromBlock","liquidateHistoryBlock","tradeHistory","tradeHistoryOnline","_accountAddress","_price","_interval","_update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","pPool","getLiquidityInfo","totalSupply","poolDynamicEquity","maxRemovableShares","catch","err","poolInfo","fundingRate0","naturalWithPercentage","toExponential","fundingRate1","depositMargin","withdrawMargin","api","tradeWithMargin","closePosition","dynamicCost","calculateTxFee","calculateFundingFee","lastUpdatedBlockNumber","latestBlockNumber","calculateMaxRemovableLiquidity","userLiquidity","restLiquidity","discount","range","getLengths","lengths","routerAddress","router","perpetualPoolRouterDpmmFactory","bTokenIds","bTokenId","getBToken","bTokenOracle1Factory","equity","bTokenSymbols","toUpperCase","getBTokens","bTokenIndex","ratePerSecond","diff","undistributedPnl","distributedUnrealizedPnl","isBTokensUpdated","margins","getMargins","totapPnl","totalEquity","m","totalNotional","lTokenAbi","LToken","pTokenAbi","PToken","perpetualPoolAbi","perpetualPoolRouterAbi","PerpetualPoolRouter","infos","lTokenAdapter","pTokenAdapter","perpetualPoolDpmmFactory","perpetualPoolDpmmAdapter","perpetualPoolRouterDpmmAdapter","ObjectCache","poolApiFactory","getAsset","assets","lTokenAsset","lastCumulativePnl","accum","approximatePnl","cumulativePnl","bToken0Symbol","swappedPnl","newAmount","percentage1","shareValue1","ErrorCode","INVALID_CACHE","minBToken0Ratio","checkSymbolId","bTokenMultiplier","totalCost","fundingFee","idx","funding0","funding1","balances","getUserStakeInfo","getEstimatedLiquidityInfo","checkAmount","getFundingFee","getEstimatedTimePrice","isMaximum","MAX_INT256","addMargin","removeMargin","_getLiquidityInfo","promises","positionInfo","orderValidation","symbolIdList","ids","volumes","id","flat","PoolApi","tr","toNumber","apiMap","apiV1","v2_dpmm","apiV2Dpmm","v2_lite","apiV2l","v2_lite_open","v2_lite_dpmm","apiV2lDpmm","apiOption","VERSION_IDS_ALL","defaultReturnValue","isDefaultReturnValue","totalValue","apys","maxApy","apy1","getEstimatedLiquidatePrice","getBTokenBalance","LITE_VERSIONS","getEstimatedLiquidatePriceV2","fullMessage","ErrorName","ErrorMessage","getRestServerConfig","REST_API_CALL_RETRY","resp","func","Env","getChainIds","Web3","utils","tokenIds","keyArray","chainInfo","firstLetterUppercase","str","replace","formatAddress","substr","formatBalance","toFixed","eqInNumber","str1","str2","isSushiLP","isCakeLP","sessionStorageKey","storeConfig","sessionStorage","setItem","getConfigFromStore","getItem","storeChain","restoreChain","storeLocale","locale","restoreLocale","getFormatSymbol","curChain","isOption","isV1","getDefaultNw","getNetworkList","network","isDefault","getMarkpriceSymbol","selectedSymbol","Type","current","equalIgnoreCase","intervalRange","greaterThan","param1","param2","percentTimesAmount","percent","precision","isFinite","round","PRIMARY","SECONDARY","DEPOSIT","WITHDRAW","BUY","SELL","ARROW_UP","FUTURE","OPTION","VERSION_V2","VERSION_V2_LITE","VERSION_V2_OPEN","TRADE_ENTRY_DOLLAR_STATUS","TRADE_ENTRY_VOLUME_STATUS","TRADE_ENTRY_SLIDER_STATUS","TRADE_ENTRY_PERCENTAGE_STATUS","TRADING_CREATE_POSITION_STATUS","TRADING_APPEND_POSITION_STATUS","TRADING_CLOSE_POSITION_STATUS","PROD","TESTNET","DEV","freeze","_env","makeAutoObservable","observable","setCurrent","action","computed","isFuture","ApiProxy","options","includeResponse","BigNumber","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","value1","value2","sd","formatBN","bigNumber","toFormat","replaceAll","isBrowser","document","isJsDom","navigator","userAgent","keyList","sortOptionSymbols","symbolArr","unique","to2","index1","index2","index3","pancakePairAbi","PancakePair","ERC20Adapter","ERC20Abi","ERC20","chainlinkOracleAbi","ChainlinkOracle","offChainOracleAbi","inputs","internalType","stateMutability","outputs","OffChainOracle","offChainVolatilityOracleAbi","OffChainVolatilityOracle","TERC20MintLimitAbi","TERC20MintLimit","bTokenOracle1Abi","BTokenOracle1","offChainOracleAdapter","offChainVolatilityOracleAdapter","isQuoteToken0","qDecimals","bDecimals","pair","priceCumulativeLast1","priceCumulativeLast2","timestampLast1","timestampLast2","pancakePair","getReserves","reserveQ","_reserve0","reserveB","_reserve1","_blockTimestampLast","price0CumulativeLast","price1CumulativeLast","tmpPairState","bTokenOracle1Adapter","dToken","MiningVault","retired","isLp","filteredConfig","getDeriConfigList","Deri","Wormhole","staking","isInTvlRace","premining","getMiningVaultConfig","dTokenAdress","MinningVaultAddress","bTokenPairs","AMUSDC","symbolPairs","IBSCDEFI","IGAME","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","ALICEUSDT","SANDUSDT","QUICKUSDT","GHSTUSDT","AGLDUSDT","SHIBUSDT","optionSymbol","volSymbol","getNormalizedOptionSymbols","isUsedRestOracle","re","RegExp","mapToSymbol","internalSymbol","customIndexs","tokens","IMEME","Version","isV2","isV2Lite","processObjectResult","prop","bTokenAbi","wrappedOracleAbi","brokerManagerAbi","pTokenAirdropAbi","every","chainConfigList","infuraAccount","getChainProviderUrls","provider_urls","getDailyBlockNumberConfig","chainBlockNumberList","WEB3_WALLET_NOT_FOUND","BROWSER_NOT_SUPPORTED","INVALID_DERI_ENV","INVALID_VERSION","INVALID_VERSION_ID","INVALID_CHAIN_ID","INVALID_ADDRESS","INVALID_TOKEN_ID","INVALID_TOKEN_ID_IN_RANGE","INVALID_SYMBOl","INVALID_BASE_TOKEN","INVALID_AMOUNT","INVALID_TRADE_VOLUME","INVALID_DATA","CONFIG_LIST_NOT_FOUND","CONFIG_NOT_FOUND","RPC_NODE_ALL_UNAVAILABLE","INVALID_JSON_RPC_RESPONSE","JSON_RPC_CALL_TIMEOUT","REST_API_CALL_TIMEOUT","INSUFFICIEN_MARGIN","INSUFFICIENT_BALANCE","INSUFFICIEN_LIQUIDITY","PRICE_EXPIRED","VOLATILITY_EXPIRED","DEADLINE_EXPIRED","OUT_OF_GAS","TRANSACTION_REVERTED","API_REQUEST_TIMEOUT","UNKOWN_ERROR","INVALID_SYMBOL","LP","VERSIONS_RETIRED","VERSIONS_ALL","web3InstanceMap","walletChainId","getChainProviderUrl","providerUrl","providers","HttpProvider","urls","getLatestRPCServer","blockNumbers","images","require","Wrapper","styled","img","props","width","height","Icon","token","src","default","duration","Number","MAX_SAFE_INTEGER","startTime","process","brokerAddress","WebSocket","socket","io","transports","withCredentials","reconnectListeners","reconnected","callback","emit","onMessage","listener","time_type","findEvent","pos","splice","Spinner","className","backgroundColor","fontSize","fontWeight","fontColor","borderSize","defaultBorderColor","borderColor","Button","label","bgColor","outline","isSelected","outlineColor","icon","onClick","styles","useState","setPending","click","clazz","classNames","selected","fixed","style","useConfig","webpackContext","req","webpackContextResolve","__webpack_require__","module","exports","color","borderRadius","Label","text","alt","Menu","lang","useLocation","menus","link","subMenu","menu","pathname","Panel","LangSelector","langIcon","NetworkSelector","bscLogoIcon","arrowDownIcon","inject","observer","wallet","btnText","setBtnText","isIndex","useRouteMatch","isRoot","path","exact","isMining","isTeam","isRetired","isOptionsLite","isOptionsPro","isDownload","isInfo","isOptions","notConnectWalletPage","setAccountText","detail","isConnected","isSupportChain","useEffect","connect","href","matemaskIcon","dict","page","intl","logo","Footer","LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","withLanguage","WithLanguage","prevProps","onRouteChanged","isMobile","mobile","IndexRoute","Home","Pool","PoolDetail","Trade","Bridge","Governance","Token","Info","InfoDetail","TradingMining","PageRouter","withRouter","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Wallet","defaultNw","supportWeb3","approve","approved","apiProxy","loadWalletBalance","switchNetwork","metamask","isOpen","supported","setDetail","setDefaultNw","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","supportOpen","isApproved","supportInnovation","Oracle","timeType","kData","ws","paused","listeners","setIndex","webSocket","subscribe","close","setSymbol","setTimeType","unsubscribe","setPause","unsubscribeBars","Position","callbackALL","counter","mockPositionInfo","deltaFundingAccrued","wrapperForDisplay","balanceContract","directionColor","unrealizedPnlColor","fundingFeeColor","notionalColor","unrealizedPnlRate","unrealizedPnlRateColor","started","runInAction","loadAll","startedAll","load","timer","clean","toLowerCase","pageName","makeObservable","setLocale","localeLabel","language","prefix","supportedCatalog","deltaFundingCoefficient","optionType","bTokenSymbolDisplay","spec","extractBySymbol","setInfo","symboleInArray","History","columnMap","markpriceSymbolFormat","currentSymbol","setCurrentSymbol","setMarkpriceSymbolFormat","setAddress","setChain","setChainId","setZone","setVersion","setType","setSymbols","setBTokens","setDecimals","isInno","hasOwnProperty","attr","apyInfo","liq","totalLiquidity","bTokensApy","bTokensLiq","lpApy","bool","multipliedBy","dividedBy","formatShares","totalShares","tokenInfo","symbolDisplay","PoolManager","lpPools","setPools","setLpPools","v2Pools","innoPools","openPools","optionsPools","ammPools","futurePools","loadDoubleMingingPool","mapPools","FUTURE_INNO","FUTURE_OPEN","Trading","priceDecimals","slideIncrementMargin","history","userSelectedDirection","optionsConfigs","closeOnly","percentageAmount","entryStatus","inputDollarValue","inputSliderValue","setWallet","setCloseOnly","setPriceDecimals","setMarkPrice","setContract","setPosition","setPositions","setVolume","setUserSelectedDirection","setFundingRate","setVolatility","setHistory","setDirection","setEntryStatus","setInputDollarValue","setInputSliderValue","fundingRateTip","optionFundingRateTip","initialMarginRatioTip","maintenanceMarginRatioTip","TransactionFeeTip","dpmmFundingRateTip","fundingCoefficientTip","rateTip","multiplierTip","TotalNetPositionTip","isNegative","isPositive","dailyFunding","netPositionNutual","marginReqs","curSymbol","maxEntryVolume","minEntryVolume","curTradeUnit","minTradeScaleDecimal","dollarValue","maxAvailableMargin","positionTradingStatus","curSliderValue","sliderRailColor","accountInfo","transactionSummary","inputHelpText","directionDisplay","indexOracle","markOracle","contractInfo","historyInfo","finishedCallback","loadByType","defaultPool","setPool","loadByPool","changed","onChange","symbolChanged","addListener","syncFundingRate","syncVolatility","loadFundingRate","results","finally","startAll","resume","histories","defaultConfig","fromStore","getFromStore","pause","setPercentageAmount","setPaused","percentage","marginUsed","dynEffMargin","marginUsage","availableMargin","curSymbolMarginUsage","Intl","groupConfigBySymbol","startColor","endColor","startPercent","endPercent","buyColor","sellColor","background","tradePrice","openText","closeText","isLoading","setIsLoading","isShowMask","Wraper","trading","ReactDOM","TOP_RIGHT","timeout","offset","template","getElementById"],"mappings":"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","file":"static/js/main.fb47a266.chunk.js","sourcesContent":["\nconst paddingDate = (date) => {\n  date = date.toString()\n  if (date.length === 1) {\n    return '0' + date\n  } else {\n    return date\n  }\n}\nexport const getEpochTimeRange = (time) => {\n  //console.log('1', time.getTime()/1000)\n  const year = time.getUTCFullYear()\n  const month = time.getUTCMonth()\n  const day = time.getUTCDate()\n  let epochs = []\n  for (let i = 0; i< 3; i++) {\n    const newDate = new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day)}T${paddingDate(8*i)}:00:00Z`)\n    //console.log(newDate.getTime()/1000)\n    epochs.push(newDate)\n  }\n  epochs.push(new Date(`${year}-${paddingDate(month + 1)}-${paddingDate(day+1)}T00:00:00Z`))\n  let index = -1\n  for (let i = 0; i< epochs.length; i++) {\n    //console.log(i, epochs[i].getTime()/1000)\n    if (time.getTime() < epochs[i].getTime()) {\n      index = i\n      break\n    }\n  }\n  if (index !== -1) {\n    return [epochs[index - 1].getTime()/1000, epochs[index].getTime()/1000]\n  }\n  throw new Error(`getEpochTimeRange(): cannot get epoch range for time ${time}`)\n}","export const getDBProviderUrls = () => [\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\n];\n\nexport const getDBAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n\nexport const getDBWormholeAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\n  }\n  // for test\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\n};\n\nexport const getDBAirdropAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n","import { hexToNumber } from './convert';\nimport { web3Factory } from '../factory/web3'\n\nconst intRe = /^\\d+$/\n// adopt from derijs next\nexport const deleteIndexedKey = (obj) => {\n  if (typeof obj === 'object' && obj !== null &&  Object.keys(obj).length > 0) {\n    const keys = Object.keys(obj);\n    const intKeyCount = keys.reduce(\n      (acc, k) => (intRe.test(k) ? acc + 1 : acc),\n      0\n    );\n    //console.log(keys);\n    // is leaf array\n    if (intKeyCount * 2 === keys.length) {\n      let newObj = {};\n      Object.keys(obj).forEach((k) => {\n        if (!intRe.test(k)) {\n          newObj[k] = obj[k];\n        }\n      });\n      return newObj;\n    } else if (intKeyCount === keys.length) {\n      // is array container\n      let res = [];\n      for (let i = 0; i < keys.length; i++) {\n        if (Array.isArray(obj[i])) {\n          res.push(deleteIndexedKey(obj[i]));\n        } else {\n          res.push(obj[i]);\n        }\n      }\n      return res;\n    }\n  }\n  return obj;\n};\n\n  // get block number when last updated\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getStorageAt(contractAddress, position)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  export const getLatestBlockNumber = async(chainId) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  export const getBlockInfo = async(chainId, blockNumber) => {\n    const web3 = await web3Factory.get(chainId)\n    return await web3.eth.getBlock(blockNumber);\n  }\n\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\n    let events = [];\n    let amount\n    if (['56', '97', '127', '80001'].includes(chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n\n  export const getPastEventsUseAbi = async(chainId, contractAddress, contractAbi, eventName, filter = {}, fromBlock = 0, to = 0) => {\n    const web3 = await web3Factory.get(chainId)\n    const contract = new web3.eth.Contract(contractAbi, contractAddress);\n    let events = [];\n    let amount\n    if (['56', '97', '127', '80001'].includes(chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }","import { AppError } from '../error/error';\nimport { web3Factory } from '../factory/web3';\nimport { numberToHex } from '../utils/convert';\n\nconst MAX_GAS_AMOUNT = 832731 * 3;\n////const RE_ERROR_MSG = /\\\"message\\\":\\s\\\"execution\\sreverted:([\\w\\s]+)\\\"/\n//const RE_ERROR_MSG = /\"message\":\\s\"execution\\sreverted:([\\w\\s]+)\"/\n\nexport class ContractBase {\n  constructor(chainId, contractAddress, contractAbi) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n\n  async _init() {\n    // re-init web3 and contract when web3 instance is null\n    if (!this.web3) {\n      this.web3 = await web3Factory.get(this.chainId);\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  async _call(method, args = []) {\n    let res\n    let retry = 3\n    while (retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        // remove web3 instance to re-init\n        if (retry === 1) {\n          this.web3 = null\n        }\n        // if (err.toString().includes('Invalid JSON RPC response')) {\n        //   console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\n        // } else if (err.toString().includes(\"Returned values aren't valid,\")) {\n        //   console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\n        // } else {\n        //   //console.log('error:', err.toString())\n        // }\n      }\n    }\n    if (retry === 0 && !res) {\n      throw new AppError('JSON_RPC_CALL_TIMEOUT', {\n        name: method,\n        args: [...args, this.contractAddress],\n      });\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    await this._init()\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (error) {\n        console.log(`-- estimatedGas: ${error}`)\n        // const res = error.toString().split('\\n').join('').match(RE_ERROR_MSG)\n        // if (Array.isArray(res) && res.length >= 2) {\n        //   throw new Error(res[1].trim())\n        // }\n      }\n    }\n    if (gas === 0) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          //receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args=[], accountAddress) {\n    await this._init()\n    let [gas, gasPrice] = await Promise.all([\n      this._estimatedGas(method, args, accountAddress),\n      this.web3.eth.getGasPrice(),\n    ]);\n    if (this.chainId.toString() === '56') {\n      gasPrice = gasPrice * 1.002\n    }\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\n  }\n\n}\n","// import { DeriEnv } from './env';\n// import jsonConfig from '../resources/config.json';\nimport jsonProdConfig from '../resources/config.prod.json';\nimport jsonTestnetConfig from '../resources/config.testnet.json';\nimport jsonDevConfig from '../resources/config.dev.json';\n// import { VERSIONS } from './version';\nimport { checkEnv } from './check';\nimport { AppError } from '../error/error';\n\n// export const getJsonConfig = (version, env) => {\n//   env = env || DeriEnv.get();\n//   // for browser and nodejs\n//   let configs =\n//     typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\n//   if (configs[version] && VERSIONS.includes(version)) {\n//     configs = configs[version];\n//     if (['prod', 'dev', 'testnet'].includes(env)) {\n//       if (configs && configs[env]) {\n//         return configs[env];\n//       }\n//     }\n//   } else {\n//     throw new Error(\n//       `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\n//     );\n//   }\n// };\n\nexport const getJsonConfig = (env) => {\n  env = checkEnv(env);\n  let rawConfig =\n    env !== 'prod'\n      ? env === 'testnet'\n        ? jsonTestnetConfig\n        : jsonDevConfig\n      : jsonProdConfig;\n  // to support both nodejs and browser\n  let config =\n    typeof rawConfig === 'object' ? rawConfig : JSON.parse(rawConfig);\n  if (config.pools) {\n    return config.pools;\n  }\n  throw new AppError('CONFIG_LIST_NOT_FOUND', { name: 'getJsonConfig', env });\n};\n","import { getJsonConfig } from './config';\nimport { DeriEnv } from './env';\nimport { getPoolV1ConfigList } from './pool_v1';\n// import { LITE_AND_OPTION_VERSIONS, VERSIONS } from './version';\n// import { validateObjectKeyExist } from '../utils';\n// import { poolProcessor, poolValidator } from './config_processor';\n// import { openConfigListCache } from '../../v2_lite_open/api/query_api';\nimport { AppError } from '../error/error';\nimport { checkAddress } from '.';\n\n// const expandPoolConfigV2 = (config) => {\n//   const pools = config.pools;\n//   //console.log(pools)\n//   return pools\n//     .map((pool) => {\n//       let result = [];\n//       for (let i = 0; i < pool.bTokens.length; i++) {\n//         const bToken = pool.bTokens[i];\n//         for (let i = 0; i < pool.symbols.length; i++) {\n//           const symbol = pool.symbols[i];\n//           result.push({\n//             pool: pool.pool,\n//             pToken: pool.pToken,\n//             lToken: pool.lToken,\n//             router: pool.router,\n//             initialBlock: pool.initialBlock,\n//             chainId: pool.chainId,\n//             bToken: bToken.bToken,\n//             bTokenId: bToken.bTokenId,\n//             bTokenSymbol: bToken.bTokenSymbol,\n//             symbol: symbol.symbol,\n//             symbolId: symbol.symbolId,\n//             unit: symbol.unit,\n//             decimals: symbol.decimals ? symbol.decimals : '2',\n//             type: 'perpetual',\n//             version: 'v2',\n//             versionId: pool.versionId,\n//             isOption: false,\n//           });\n//         }\n//       }\n//       return result;\n//     })\n//     .flat();\n// };\n\n// const expandPoolConfigV2Lite = (config) => {\n//   const pools = config.pools;\n//   //console.log(pools)\n//   return pools\n//     .map((pool) => {\n//       let result = [];\n//       for (let i = 0; i < pool.symbols.length; i++) {\n//         const symbol = pool.symbols[i];\n//         result.push({\n//           pool: pool.pool,\n//           pToken: pool.pToken,\n//           lToken: pool.lToken,\n//           initialBlock: pool.initialBlock,\n//           chainId: pool.chainId,\n//           bToken: pool.bToken,\n//           bTokenSymbol: pool.bTokenSymbol,\n//           symbol: symbol.symbol,\n//           symbolId: symbol.symbolId,\n//           offchainSymbolIds: pool.offchainSymbolIds,\n//           offchainSymbols: pool.offchainSymbols,\n//           unit: symbol.unit,\n//           decimals: symbol.decimals ? symbol.decimals : '2',\n//           type: 'perpetual',\n//           version: 'v2_lite',\n//           versionId: pool.versionId,\n//           isOption: false,\n//         });\n//       }\n//       return result;\n//     })\n//     .flat();\n// };\n\n// const expandPoolConfigOption = (config) => {\n//   const pools = config.pools;\n//   //console.log(pools)\n//   return pools\n//     .map((pool) => {\n//       let result = [];\n//       for (let i = 0; i < pool.symbols.length; i++) {\n//         const symbol = pool.symbols[i];\n//         result.push({\n//           pool: pool.pool,\n//           pToken: pool.pToken,\n//           lToken: pool.lToken,\n//           initialBlock: pool.initialBlock,\n//           chainId: pool.chainId,\n//           bToken: pool.bToken,\n//           pricer: pool.pricer,\n//           bTokenSymbol: pool.bTokenSymbol,\n//           symbol: symbol.symbol,\n//           symbolId: symbol.symbolId,\n//           offchainSymbolIds: pool.offchainSymbolIds,\n//           offchainSymbols: pool.offchainSymbols,\n//           volatilitySymbols: pool.volatilitySymbols,\n//           decimals: symbol.decimals ? symbol.decimals : '2',\n//           unit: symbol.unit,\n//           type: 'option',\n//           version: 'option',\n//           versionId: pool.versionId,\n//           isOption: true,\n//         });\n//       }\n//       return result;\n//     })\n//     .flat();\n// };\n\n// const expandPoolConfigV2LiteOpen = (config) => {\n//   const pools = config.pools;\n//   //console.log(pools)\n//   return pools\n//     .map((pool) => {\n//       let result = [];\n//       if (pool.symbols.length > 0) {\n//         for (let i = 0; i < pool.symbols.length; i++) {\n//           const symbol = pool.symbols[i];\n//           result.push({\n//             pool: pool.pool,\n//             pToken: pool.pToken,\n//             lToken: pool.lToken,\n//             initialBlock: pool.initialBlock,\n//             chainId: pool.chainId,\n//             bToken: pool.bToken,\n//             bTokenSymbol: pool.bTokenSymbol,\n//             symbol: symbol.symbol,\n//             symbolId: symbol.symbolId,\n//             offchainSymbolIds: pool.offchainSymbolIds,\n//             offchainSymbols: pool.offchainSymbols,\n//             unit: symbol.unit,\n//             decimals: symbol.decimals ? symbol.decimals : '2',\n//             type: 'perpetual',\n//             version: 'v2_lite_open',\n//             versionId: pool.versionId,\n//             isOpen: true,\n//           });\n//         }\n//       } else {\n//         result.push({\n//           pool: pool.pool,\n//           pToken: pool.pToken,\n//           lToken: pool.lToken,\n//           initialBlock: pool.initialBlock,\n//           chainId: pool.chainId,\n//           bToken: pool.bToken,\n//           bTokenSymbol: pool.bTokenSymbol,\n//           symbol: '--',\n//           symbolId: '',\n//           offchainSymbolIds: pool.offchainSymbolIds,\n//           offchainSymbols: pool.offchainSymbols,\n//           unit: '',\n//           type: 'perpetual',\n//           version: 'v2_lite_open',\n//           versionId: pool.versionId,\n//           isOpen: true,\n//         });\n//       }\n//       return result;\n//     })\n//     .flat();\n// };\n\n// export const getConfig = (version='v2', env='dev') => {\n//   let config = getJsonConfig(version, env);\n//   if (version === 'v2_lite_open') {\n//     //if (Date.now()/1000 - openConfigListCache.updatedAt() < 15) {\n//       //console.log('hit openConfigListCache')\n//     config.pools = openConfigListCache.get()\n//     //}\n//   }\n\n//   const pools = config.pools;\n//   if (pools && Array.isArray(pools)) {\n//     for (let i = 0; i < pools.length; i++) {\n//       poolProcessor[version](pools[i])\n//       poolValidator[version](pools[i])\n//     }\n//   }\n\n//   //validateObjectKeyExist(['oracle'], config, 'oracle');\n//   //validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\n//   return config;\n// };\n\n// export const getPoolConfigList = (version = 'v2', env = 'dev') => {\n//   let config;\n//   config = getConfig(version, env);\n//   if (version === 'v2') {\n//     return expandPoolConfigV2(config);\n//   } else if (version === 'v2_lite') {\n//     return expandPoolConfigV2Lite(config, version);\n//   } else if (version === 'v2_lite_open') {\n//     return expandPoolConfigV2LiteOpen(config);\n//   } else if (version === 'option') {\n//     return expandPoolConfigOption(config);\n//   }\n// };\n\n// export const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\n//   bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\n//   symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\n//   const poolConfigList = getPoolConfigList(version, DeriEnv.get())\n//   const check = bTokenId != null\n//     ? symbolId != null\n//       ? (i) =>\n//           i.pool === poolAddress &&\n//           i.bTokenId === bTokenId &&\n//           i.symbolId === symbolId\n//       : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\n//     : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\n//   if (poolConfigList.length > 0) {\n//     const res = poolConfigList.filter(check)\n//     if (res && res.length > 0) {\n//       return res\n//     }\n//   }\n//   throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\n// }\n\n// export const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\n//   const version = getPoolVersion(poolAddress)\n//   //console.log('version', version, poolAddress)\n//   // check the bToken in v2_lite\n//   if (LITE_AND_OPTION_VERSIONS.includes(version)) {\n//     bTokenId = undefined\n//   }\n//   const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\n//   return res[0]\n// }\n// export const getFilteredPoolConfig  = getPoolConfig\n\n\n// export const getPoolVersion = (poolAddress) => {\n//   let pools = VERSIONS.reduce((acc, version) => {\n//     return acc.concat(getConfig(version, DeriEnv.get())['pools'])\n//   }, [])\n//   //console.log(pools)\n//   // add v1 config\n//   pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\n//   const index = pools.findIndex((v) => v.pool === poolAddress)\n//   //console.log('pools index', index)\n//   if (index >= 0) {\n//     return pools[index].version\n//   }\n// }\n\n// export const getPoolVersionId = (poolAddress) => {\n//   let pools = VERSIONS.reduce((acc, version) => {\n//     return acc.concat(getConfig(version, DeriEnv.get())['pools'])\n//   }, [])\n//   // add v1 config\n//   pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\n//   const index = pools.findIndex((v) => v.pool === poolAddress)\n//   if (index >= 0) {\n//     return pools[index].versionId\n//   }\n// }\n\n// export const _getPoolConfig = (poolAddress) => {\n//   const version = getPoolVersion(poolAddress);\n//   // console.log('version', version)\n//   const config = getConfig(version, DeriEnv.get());\n//   const pools = config.pools;\n//   let pool = pools.find((p) => p.pool === poolAddress);\n//   //console.log(pool)\n//   if (pool) {\n//     return pool;\n//   } else {\n//     throw new Error(`getPoolConfig, cannot find pool config by pool address ${poolAddress}`)\n//   }\n// };\n\n// export const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\n//   const pool = _getPoolConfig(poolAddress);\n//   const defaultBToken = {\n//     bTokenId: '',\n//     bTokenSymbol: '',\n//     bToken: '',\n//   };\n//   const defaultSymbol = {\n//     symbolId: '',\n//     symbol: '',\n//     unit: '',\n//   };\n//   let bToken, symbol;\n//   if (pool.bTokens && (bTokenId !== undefined || bTokenId !== null)) {\n//     bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId)\n//   }\n//   if (pool.symbols && (symbolId !== undefined || symbolId !== null)) {\n//     symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\n//   }\n//   bToken = bToken || defaultBToken;\n//   symbol = symbol || defaultSymbol\n//   return {\n//     pool: pool.pool,\n//     pToken: pool.pToken,\n//     lToken: pool.lToken,\n//     router: pool.router,\n//     bTokenCount: pool.bTokenCount,\n//     symbolCount: pool.symbolCount,\n//     initialBlock: pool.initialBlock,\n//     chainId: pool.chainId,\n//     bToken: bToken.bToken,\n//     bTokenId: bToken.bTokenId,\n//     bTokenSymbol: bToken.bTokenSymbol,\n//     symbol: symbol.symbol,\n//     symbolId: symbol.symbolId,\n//     unit: symbol.unit,\n//     version: 'v2',\n//   };\n// };\n\n// export const getPoolBTokenList = (poolAddress) => {\n//   const pool = _getPoolConfig(poolAddress);\n//   return pool.bTokens.map((b) => {\n//     return {\n//       bTokenId: b.bTokenId,\n//       bTokenSymbol: b.bTokenSymbol,\n//       bTokenAddress: b.bToken,\n//     };\n//   });\n// };\n\n// export const getPoolBTokenIdList = (poolAddress) => {\n//   const pool = _getPoolConfig(poolAddress);\n//   return pool.bTokens.map((b) => b.bTokenId);\n// };\n\n// export const getPoolSymbolList = (poolAddress) => {\n//   const pool = _getPoolConfig(poolAddress);\n//   return pool.symbols.map((s) => {\n//     return {\n//       symbol: s.symbol,\n//       symbolId: s.symbolId,\n//       unit: s.unit,\n//     };\n//   });\n// };\n\n// export const getPoolSymbolIdList = (poolAddress) => {\n//   const pool = _getPoolConfig(poolAddress);\n//   return pool.symbols.map((b) => b.symbolId);\n// };\n\nexport const getPoolViewerConfig = (chainId, version=\"v2_lite\") => {\n  const configs = [\n    {\n      chainId: '97',\n      address: '0x2cADdC11aDD70E520D950A51606243970A54d80a',\n      version: 'option',\n    },\n    {\n      chainId: '56',\n      address: '0x04e1b1A97bd59EeE1Ac249eb98B3EfefbAd3239e',\n      version: 'option',\n    },\n  ];\n  const viewer = configs.find(\n    (c) => c.chainId === chainId && c.version === version\n  );\n  if (viewer && viewer.address) {\n    return viewer.address\n  } else {\n    throw new AppError('CONFIG_NOT_FOUND', {\n      name: 'getPoolViewerConfig',\n      args: [chainId, version],\n    });\n  }\n};\n\nexport const getPoolConfig = (poolAddress) => {\n  let pools = getJsonConfig(DeriEnv.get());\n  // add v1 config\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()));\n  const pool = pools.find((v) => v.pool === poolAddress);\n  if (pool) {\n    return pool;\n  }\n  throw new AppError('CONFIG_NOT_FOUND', {\n    name: 'getPoolConfig',\n    args: [DeriEnv.get(), poolAddress],\n  });\n};\n\nexport const getPoolVersion = (poolAddress) => {\n  return getPoolConfig(poolAddress).version\n};\n\nexport const getPoolVersionId = (poolAddress) => {\n  try {\n    poolAddress = checkAddress(poolAddress)\n    return getPoolConfig(poolAddress).versionId;\n  } catch (error) {\n    return {\n      failed: true,\n      response: {\n        data: {},\n        error: { code: error.code, message: error.message },\n      },\n    };\n  }\n};\n","import { catchApiError } from '../utils/api';\nimport {\n  getLpConfigList as _getLpConfigList,\n  getPreminingConfigList as _getPreminingConfigList,\n  getPoolV1ConfigList as _getRetiredPoolConfigList,\n  getDeriConfig as _getDeriConfig,\n  getDeriConfigList as _getDeriConfigList,\n} from '../config/pool_v1';\n\nexport { DeriEnv, Env } from '../config/env';\nexport {\n  getPoolVersion,\n  getPoolVersionId,\n} from '../config/pool';\n\nexport const getLpConfigList = async(env) => {\n  return catchApiError(_getLpConfigList, [env], []);\n};\nexport const getPreminingConfigList = async(env) => {\n  return catchApiError(_getPreminingConfigList, [env], []);\n};\nexport const getRetiredPoolConfigList = async(env) => {\n  return catchApiError(_getRetiredPoolConfigList, [env], []);\n};\nexport const getDeriConfig = async(env, chainId) => {\n  return catchApiError(_getDeriConfig, [env, chainId]);\n};\nexport const getDeriConfigList = async(env) => {\n  return catchApiError(_getDeriConfigList, [env], []);\n};\n","import { DEBUG } from '../config/constant';\nimport { normalizeChainId } from './validate';\nimport { DeriEnv } from '../config/env';\nimport { wrappedOracleFactory } from '../factory/oracle';\nimport { deriToNatural, fromWei } from './convert';\nimport {\n  mapToSymbolInternal,\n  mapToBTokenInternal,\n  normalizeOptionSymbol,\n} from '../config/token';\nimport { PRESERVED_SYMBOLS } from '../config/version';\nimport { offChainOracleFactory } from '../contract/factory';\nimport { AppError } from '../error/error';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n\nexport const getPriceInfoForV1 = async(symbol) => {\n  const env = DeriEnv.get();\n  let method = 'get_signed_price'\n  let url\n  let baseUrl =\n    env === 'prod'\n      ? `https://oracle4.deri.finance/${method}`\n      : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) =>\n    `${url}?symbol=${symbol}`;\n  if (symbol) {\n    url = addSymbolParam(baseUrl, symbol);\n  } else {\n    url = baseUrl;\n  }\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n        //return deriToNatural(priceInfo.data.price).toString()\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new AppError('REST_API_CALL_TIMEOUT', url);\n  }\n}\n\n\nexport const getOracleUrl = (symbol, type='futures') => {\n  const env = DeriEnv.get();\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\n  let method = 'get_signed_price'\n  if (type === 'option') {\n    method = 'get_signed_volatility'\n  }\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\n    method = 'get_price'\n    symbol = `${symbol}_v2_bsc`\n  }\n  let baseUrl =\n    env === 'prod'\n      ? `https://oracle4.deri.finance/${method}`\n      : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) =>\n    `${url}?symbol=${symbol}`;\n\n  if (symbol) {\n    return addSymbolParam(baseUrl, symbol);\n  } else {\n    return baseUrl;\n  }\n};\n\nexport const getPriceFromRest = async(symbol, type='futures') => {\n  const res = await getPriceInfo(symbol, type)\n  if (type === 'futures' && res.price) {\n    return PRESERVED_SYMBOLS.includes(symbol) ? res.price : deriToNatural(res.price).toString()\n  } else if (type === 'option' && res.volatility) {\n    return deriToNatural(res.volatility).toString()\n  }\n}\n\n// from oracle rest api\nexport const getPriceInfo = async (symbol, type='futures') => {\n  symbol = mapToBTokenInternal(symbol)\n  let url = getOracleUrl(symbol, type);\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    try {\n      res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n      if (res.ok) {\n        priceInfo = await res.json();\n        if (priceInfo.status.toString() === '200' && priceInfo.data) {\n          return priceInfo.data\n        }\n      }\n    } catch(err) {\n      DEBUG && console.log(err)\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new AppError('REST_API_CALL_TIMEOUT', url);\n  }\n};\n\nexport const getOracleInfosFromRest = async (symbolList, type = 'future') => {\n  let url = getOracleUrl(null, type);\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    try {\n      res = await fetch(url, {\n        mode: \"cors\",\n        cache: \"no-cache\",\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(symbolList),\n      });\n      if (res.ok) {\n        priceInfo = await res.json();\n        if (priceInfo.status.toString() === \"200\" && priceInfo.data) {\n          return priceInfo.data;\n        }\n      }\n    } catch (err) {\n      DEBUG &&  console.log(err)\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new AppError('REST_API_CALL_TIMEOUT', url);\n  }\n};\n\n// cache\n// export const getOraclePriceFromCache = (function () {\n//   console.log('-- getOraclePriceFromCache will remove in next version ' )\n//   let cache = {};\n//   return {\n//     async get(chainId, symbol = '_', version = 'v2') {\n//       const key = `${chainId}_${symbol}_${version}`\n//       if (\n//         Object.keys(cache).includes(key) &&\n//         Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\n//       ) {\n//         return cache[key].data;\n//       } else {\n//         const data = await getOraclePrice(chainId, symbol, version);\n//         cache[key] = {\n//           data,\n//           timestamp: Math.floor(Date.now() / 1000),\n//         };\n//         return cache[key].data;\n//       }\n//     },\n//   };\n// })();\n\nexport const getPriceInfos = async (symbolList) => {\n  let url = getOracleUrl();\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    try {\n      res = await fetch(url, {\n        mode: 'cors',\n        cache: 'no-cache',\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(symbolList),\n      });\n      if (res.ok) {\n        priceInfo = await res.json();\n        if (priceInfo.status.toString() === '200' && priceInfo.data) {\n          return priceInfo.data;\n        }\n      }\n    } catch (err) {\n      DEBUG && console.log(err);\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new AppError('REST_API_CALL_TIMEOUT', url);\n  }\n};\n\nexport const oraclePricesCache = (function(){\n  const cache = {}\n  const pending = {}\n  return {\n    async get(symbols=[]) {\n      const key = symbols.join('_')\n      if (\n        !Object.keys(cache).includes(key) ||\n        Math.floor(Date.now() / 1000) - cache[key].timestamp > 3\n      ) {\n        const timestamp = Math.floor(Date.now() / 1000);\n        // pending is exit\n        if (Object.keys(pending).includes(key)) {\n          let retry = 10;\n          while (retry > 0) {\n            await delay(390);\n            if (!Object.keys(pending).includes(key)) {\n              //console.log('hit pending with cache');\n              return cache[key].data;\n            }\n          }\n          if (retry === 0) {\n            //console.log('hit pending expired');\n            const data = await getPriceInfos(symbols);\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          }\n        } else {\n          pending[key] = true;\n          try {\n            //console.log('hit new');\n            const data = await getPriceInfos(symbols);\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          } catch (err) {\n          } finally {\n            delete pending[key];\n          }\n        }\n      } else {\n        //console.log('hit cache');\n        return cache[key].data;\n      }\n    }\n  }\n})()\n\nexport const RestOracle = (symbol) => {\n  return {\n    getPrice: async function () {\n      return getPriceFromRest(symbol)\n    }\n  }\n};\n\n// export const getOraclePrice = async (chainId, symbol, version='v2') => {\n//   chainId = normalizeChainId(chainId);\n//   symbol = mapToSymbolInternal(symbol)\n//   const config = getOracleConfig(version, chainId, symbol);\n//   if (config && config.address) {\n//     const oracle = oracleFactory(\n//       chainId,\n//       config.address,\n//       symbol,\n//       config.decimal,\n//     );\n//     return await oracle.getPrice();\n//   } else {\n//     // for new added symbol and not updated to config yet\n//     const priceInfo = await getPriceInfo(symbol, version);\n//     return deriToNatural(priceInfo.price).toString();\n//   }\n// };\n\nexport const getOraclePrice2 = async (chainId, symbol, oracleAddress, version='v2_lite') => {\n  chainId = normalizeChainId(chainId);\n  symbol = mapToSymbolInternal(symbol)\n  if (oracleAddress !== '') {\n    const oracle = wrappedOracleFactory(chainId, oracleAddress)\n    return await oracle.getPrice();\n  } else {\n    // for new added symbol and not updated to config yet\n    const priceInfo = await getPriceInfo(symbol, version);\n    return deriToNatural(priceInfo.price).toString();\n  }\n};\n\n// cache\nexport const getOraclePriceFromCache2 = (function () {\n  let cache = {};\n  return {\n    async get(chainId, symbol = '_', oracleAddress, version = 'v2_lite') {\n      const key = `${chainId}_${symbol}_${oracleAddress}`\n      if (\n        Object.keys(cache).includes(key) &&\n        Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\n      ) {\n        return cache[key].data;\n      } else {\n        const data = await getOraclePrice2(chainId, symbol, oracleAddress, version);\n        cache[key] = {\n          data,\n          timestamp: Math.floor(Date.now() / 1000),\n        };\n        return cache[key].data;\n      }\n    },\n  };\n})();\n\n// export const getOraclePriceForOption = async (chainId, symbol) => {\n//   return await getOraclePrice(chainId, normalizeOptionSymbol(symbol), 'option');\n// };\n\n// for viewer use\n// export const getOraclePricesForOption = async (chainId, symbols) => {\n//   const oracleSymbols = symbols\n//     .map((i) => normalizeOptionSymbol(i))\n//     .filter((value, index, self) => self.indexOf(value) === index);\n//   const oracleSymbolPrices = await Promise.all(\n//     oracleSymbols.reduce(\n//       (acc, i) => acc.concat([getOraclePrice(chainId, i, 'option')]),\n//       []\n//     )\n//   );\n//   return symbols.map((s) => {\n//     return toWei(oracleSymbolPrices[oracleSymbols.indexOf(normalizeOptionSymbol(s))]);\n//   });\n// };\n\n// // for tx use\n// export const getOracleVolatilityForOption = async (symbols) => {\n//   const volSymbols = getVolatilitySymbols(symbols)\n//   //volSymbols.map((s) => `VOL-${s.toUpperCase()}`)\n\n//   const volatilities = await Promise.all(\n//     volSymbols.reduce((acc, i) => acc.concat([getPriceInfo(i, 'option')]), [])\n//   );\n//   //return volatilities;\n//   return symbols.map((s) => {\n//     return volatilities[volSymbols.indexOf(`VOL-${normalizeOptionSymbol(s)}`)];\n//   });\n// };\n\n// for viewer use\nexport const getOracleVolatilitiesForOption = async (symbols) => {\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n  const res = await getOracleInfosFromRest(oracleSymbols.map((os) => `VOL-${os}`), 'option')\n  const volatilities = oracleSymbols.map((s) => res[`VOL-${s}`])\n  //console.log('volatilities', volatilities)\n  return symbols.map((s) => {\n    return volatilities[oracleSymbols.indexOf(normalizeOptionSymbol(s))];\n  });\n};\n\n// check symbol is used offchain oracle\nexport const checkOffChainOracleSymbol = async (chainId, oracleAddress, symbol) => {\n  try {\n    await offChainOracleFactory(chainId, oracleAddress).signer()\n    return symbol\n  } catch (err) {\n  }\n  try {\n    await offChainOracleFactory(chainId, oracleAddress).signatory()\n    return symbol\n  } catch (err) {\n  }\n  return \"\"\n};\n\nexport const getSymbolPrices = async (chainId, symbols, offChainSymbolIds, offChainSymbolNames) => {\n  const onChainOracleAddressWithPlaceHolder = symbols.map((s) =>\n    offChainSymbolIds.indexOf(s.symbolId) > -1\n      ? ''\n      : s.oracleAddress\n  );\n\n  const onChainSymbolPrices = await Promise.all(\n    onChainOracleAddressWithPlaceHolder\n      .reduce((acc, address, index) => {\n        const _symbol = symbols.map((s) => s.symbol)[index];\n        if (address !== '') {\n          return acc.concat(\n            getOraclePriceFromCache2.get(chainId, _symbol, address)\n          );\n        } else {\n          return acc.concat('');\n        }\n      }, [])\n      .filter((f) => f !== '')\n  );\n\n  const res =  await oraclePricesCache.get(offChainSymbolNames)\n  const offChainSymbolPrices = offChainSymbolNames.map((s) => fromWei(res[s].price))\n\n  // combine offChain and onChain symbol prices\n  const symbolPrices = onChainOracleAddressWithPlaceHolder.map((o) => {\n    if (o !== '') {\n      return onChainSymbolPrices.shift();\n    } else {\n      return offChainSymbolPrices.shift();\n    }\n  });\n  return symbolPrices\n};","import { ContractBase } from \"../contract_base\";\nimport { symbolOracleOffChainAbi } from '../abis';\nimport { deriToNatural } from '../../utils';\n\nexport class SymbolOracleOffChain extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, symbolOracleOffChainAbi);\n  }\n  async getPrice() {\n    const res = await this._call('getPrice', []);\n    return deriToNatural(res);\n  }\n  async signer() {\n    await this._init();\n    const res = await this.contract.methods['signer']().call();\n    return res;\n  }\n  async signatory() {\n    await this._init();\n    const res = await this.contract.methods['signatory']().call();\n    return res;\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { wooOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WooOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wooOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  async getPrice() {\n    //console.log('hit woo oracle')\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}\n","import { isUsedRestOracle } from '../config/token';\nimport { RestOracle } from '../utils/oracle';\nimport { WrappedOracle } from '../contract/oracle/wrapped_oracle';\nimport { factory } from '../utils/factory';\nimport { SymbolOracleOffChain } from '../contract/oracle/symbol_oracle_off_chain';\nimport { WooOracle } from '../contract/oracle/woo_oracle';\n\nconst wooOracleAddresses = [\n  '0xC686B6336c0F949EAdFa5D61C4aAaE5Fe0687302',\n  '0x60Dda0aD29f033d36189bCe4C818fe9Ce3a95206',\n  '0xa356c0559e0DdFF9281bF8f061035E7097a84Fa4',\n]\n\nexport const oracleFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, symbol, decimal = '18') => {\n    const key = address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      if (isUsedRestOracle(symbol)) {\n        instanceMap[key] = RestOracle(symbol);\n      } else if (wooOracleAddresses.includes(address)) {\n        instanceMap[key] = wooOracleFactory(chainId, address, symbol, decimal);\n      } else if (['56', '137', '97', '80001'].includes(chainId)) {\n        instanceMap[key] = wrappedOracleFactory(chainId, address, symbol, decimal);\n      } else {\n        throw new Error(\n          `please setup oracle contract for the chain(${chainId})`\n        );\n      }\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const wrappedOracleFactory = factory(WrappedOracle);\nexport const wooOracleFactory = factory(WooOracle);\nexport const symbolOracleOffChainFactory = factory(SymbolOracleOffChain);\n","import {\n  getDBAddress,\n  getDBWormholeAddress,\n  getDBAirdropAddress,\n  DeriEnv,\n} from '../config';\nimport {\n  DatabaseAirdropContract,\n  DatabaseContract,\n  DatabaseWormholeContract,\n} from '../contract';\n\nexport const databaseFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseActivityFactory = (() => {\n  const databaseInstanceMap = {};\n  return () => {\n    const address =\n      DeriEnv.get() === 'prod'\n        ? '0x75E04C816F206939a92AE7B23015ce3ef21aE571'\n        : '0x7C1267188379f57d92e640E519151229E1eA5565';\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseActivityClaimFactory = (() => {\n  const databaseInstanceMap = {};\n  return () => {\n    const address =\n      DeriEnv.get() === 'prod'\n        ? '0xe40a75957034A003Da4b341FBb02a457Af2aa302'\n        : '0x7C1267188379f57d92e640E519151229E1eA5565';\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseDeriVoteFactory = (() => {\n  const databaseInstanceMap = {};\n  return () => {\n    const address =\n      DeriEnv.get() === 'prod'\n        ? '0x9Ced1529C238bD36B3A05cECF979a30c0C40b286'\n        : '0x7C1267188379f57d92e640E519151229E1eA5565';\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseWormholeFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBWormholeAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseWormholeContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseAirdropFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAirdropAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    //console.log('---airdrop key', key)\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseAirdropContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from './contract_base'\nimport { deleteIndexedKey } from '../utils'\nimport { TERC20Abi } from './abis'\n\nexport class TERC20 extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, TERC20Abi)\n  }\n\n  // query\n  async allowance(owner, spender) {\n    const res = await this._call('allowance', [owner, spender])\n    return deleteIndexedKey(res)\n  }\n  async balanceOf(account) {\n    const res = await this._call('balanceOf', [account])\n    return deleteIndexedKey(res)\n  }\n  //  async decimals() {\n  //    const res = await this._call('decimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async name() {\n  //    const res = await this._call('name', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async approve(accountAddress, spender, amount) {\n    return await this._transact('approve', [spender, amount], accountAddress)\n  }\n  // only for testnet\n  async mint(accountAddress) {\n    return await this._transact('mint', [], accountAddress)\n  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","import { factory } from '../../utils/factory';\nimport { BToken } from '../../contract/b_token';\nimport { TERC20 } from '../../contract/TERC20';\n\n//export const bTokenFactory = factory(BToken);\nexport const TERC20Factory = factory(TERC20)","import { deriToNatural, bg } from '../../utils';\nimport { MAX_UINT256 } from '../../config';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DeriContract extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return deriToNatural(allowance).gt(0);\n  }\n  async unlock(accountAddress, poolAddress) {\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80636b0509b1116100975780639a8a0592116100665780639a8a0592146101c85780639d76ea58146101d0578063b06faf62146101d8578063f77c4791146101e0576100f5565b80636b0509b114610185578063701422691461018d57806379a87b19146101a057806392eefe9b146101b5576100f5565b806351dfdb48116100d357806351dfdb4814610137578063560ebbd11461014a57806358c700a31461016a578063677528cb14610172576100f5565b806306fdde03146100fa57806320606b7014610118578063325564ec1461012d575b600080fd5b6101026101e8565b60405161010f9190610dbf565b60405180910390f35b610120610209565b60405161010f9190610d48565b61013561022d565b005b610135610145366004610bab565b6103a1565b61015d610158366004610ca1565b61066f565b60405161010f9190610d3d565b610120610684565b610135610180366004610bea565b61068a565b6101206107b1565b61013561019b366004610c15565b6107d5565b6101a8610acc565b60405161010f9190610cec565b6101356101c3366004610bab565b610adb565b610120610b77565b6101a8610b7d565b61015d610b8c565b6101a8610b9c565b6040518060400160405280600581526020016415985d5b1d60da1b81525081565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6000546001600160a01b031633146102605760405162461bcd60e51b815260040161025790610f7f565b60405180910390fd5b600254600160a01b900460ff161561028a5760405162461bcd60e51b81526004016102579061106a565b6001541580159061029d57506001544210155b6102b95760405162461bcd60e51b815260040161025790610e12565b60035460025460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926102f19291169060001990600401610d24565b602060405180830381600087803b15801561030b57600080fd5b505af115801561031f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103439190610c81565b506002805460ff60a01b1916600160a01b17908190556001546040517fce3275b30d22151f82ee29ce7ea685563b66ff98e56afc576a94d8a88c676ec092610397929130916001600160a01b031690611153565b60405180910390a1565b6000546001600160a01b031633146103cb5760405162461bcd60e51b815260040161025790610f7f565b600254600160a01b900460ff16156103f55760405162461bcd60e51b81526004016102579061106a565b6000816001600160a01b03166358c700a36040518163ffffffff1660e01b815260040160206040518083038186803b15801561043057600080fd5b505afa158015610444573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104689190610cb9565b90506000826001600160a01b03166379a87b196040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a557600080fd5b505afa1580156104b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dd9190610bce565b905081158015906104ee5750814210155b61050a5760405162461bcd60e51b815260040161025790610ec5565b6001600160a01b03811630146105325760405162461bcd60e51b815260040161025790610fd5565b6003546040516370a0823160e01b81526001600160a01b03909116906323b872dd908590309084906370a082319061056e908590600401610cec565b60206040518083038186803b15801561058657600080fd5b505afa15801561059a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105be9190610cb9565b6040518463ffffffff1660e01b81526004016105dc93929190610d00565b602060405180830381600087803b1580156105f657600080fd5b505af115801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190610c81565b507f18ce2512842fddee8c808fb717780a66007d1da9a942dd32625813c82d53c34282843060405161066293929190611153565b60405180910390a1505050565b60056020526000908152604090205460ff1681565b60015481565b6000546001600160a01b031633146106b45760405162461bcd60e51b815260040161025790610f7f565b600254600160a01b900460ff16156106de5760405162461bcd60e51b81526004016102579061106a565b6001600160a01b0382166107045760405162461bcd60e51b8152600401610257906110d3565b60038110158015610717575061016d8111155b6107335760405162461bcd60e51b815260040161025790610e68565b61074081620151806111a0565b61074a9042611188565b6001819055600280546001600160a01b0319166001600160a01b0385811691909117918290556040517fe2a3b7ba8269be3ca7ba4627f844bb9abd978e9b05d290dc89d4b107f9e3dda7936107a59390923092911690611153565b60405180910390a15050565b7f019be9374ae64f46b6d65fb010e2366f7f5a3c1e1fd07b8842f388871d59fb1281565b600254600160a01b900460ff16156107ff5760405162461bcd60e51b81526004016102579061106a565b8442111561081f5760405162461bcd60e51b815260040161025790610f1b565b604080518082018252600581526415985d5b1d60da1b6020918201526004549151600092610894927f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866927f8d03f8e727eaf836840d08da04cd9ecc9773328dd38f4a6c7b84a9ec2b88b7c79291309101610d7d565b60405160208183030381529060405280519060200120905060007f019be9374ae64f46b6d65fb010e2366f7f5a3c1e1fd07b8842f388871d59fb12898989896040516020016108e7959493929190610d51565b60408051601f1981840301815291815281516020928301206000818152600590935291205490915060ff161561092f5760405162461bcd60e51b815260040161025790610f52565b6000818152600560209081526040808320805460ff191660011790555161095a918591859101610cd1565b6040516020818303038152906040528051906020012090506000600182888888604051600081526020016040526040516109979493929190610da1565b6020604051602081039080840390855afa1580156109b9573d6000803e3d6000fd5b5050604051601f1901516000549092506001600160a01b0380841691161490506109f55760405162461bcd60e51b81526004016102579061111c565b60035460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610a27908e908e90600401610d24565b602060405180830381600087803b158015610a4157600080fd5b505af1158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a799190610c81565b508a6001600160a01b03167f45c072aa05b9853b5a993de7a28bc332ee01404a628cec1a23ce0f659f842ef18b8b8b604051610ab793929190611172565b60405180910390a25050505050505050505050565b6002546001600160a01b031681565b6000546001600160a01b03163314610b055760405162461bcd60e51b815260040161025790610f7f565b600254600160a01b900460ff1615610b2f5760405162461bcd60e51b81526004016102579061106a565b6001600160a01b038116610b555760405162461bcd60e51b815260040161025790611024565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60045481565b6003546001600160a01b031681565b600254600160a01b900460ff1681565b6000546001600160a01b031681565b600060208284031215610bbc578081fd5b8135610bc7816111d5565b9392505050565b600060208284031215610bdf578081fd5b8151610bc7816111d5565b60008060408385031215610bfc578081fd5b8235610c07816111d5565b946020939093013593505050565b600080600080600080600060e0888a031215610c2f578283fd5b8735610c3a816111d5565b9650602088013595506040880135945060608801359350608088013560ff81168114610c64578384fd5b9699959850939692959460a0840135945060c09093013592915050565b600060208284031215610c92578081fd5b81518015158114610bc7578182fd5b600060208284031215610cb2578081fd5b5035919050565b600060208284031215610cca578081fd5b5051919050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b9485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b938452602084019290925260408301526001600160a01b0316606082015260800190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b81811015610deb57858101830151858201604001528201610dcf565b81811115610dfc5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526036908201527f5661756c742e617070726f76654d6967726174696f6e3a206d6967726174696f6040820152751b951a5b595cdd185b5c081b9bdd081b595d081e595d60521b606082015260800190565b60208082526039908201527f4d696772617461626c652e707265706172654d6967726174696f6e3a2067726160408201527f636544617973206d75737420626520332d333635206461797300000000000000606082015260800190565b60208082526036908201527f5661756c742e657865637574654d6967726174696f6e3a206d6967726174696f6040820152751b951a5b595cdd185b5c081b9bdd081b595d081e595d60521b606082015260800190565b6020808252601e908201527f5661756c742e636c61696d3a207369676e617475726520657870697265640000604082015260600190565b6020808252601390820152725661756c742e636c61696d3a207265706c617960681b604082015260600190565b60208082526036908201527f4d696772617461626c652e5f636f6e74726f6c6c65725f3a2063616e206f6e6c6040820152753c9031b0b63632b210313c9031b7b73a3937b63632b960511b606082015260800190565b6020808252602f908201527f5661756c742e657865637574654d6967726174696f6e3a206e6f74206465737460408201526e696e6174696f6e206164647265737360881b606082015260800190565b60208082526026908201527f4d696772617461626c652e736574436f6e74726f6c6c65723a20746f2030206160408201526564647265737360d01b606082015260800190565b60208082526043908201527f4d696772617461626c652e5f76616c69645f3a2063616e6e6f742070726f636560408201527f65642c207468697320636f6e747261637420686173206265656e206d696772616060820152621d195960ea1b608082015260a00190565b60208082526029908201527f4d696772617461626c652e707265706172654d6967726174696f6e3a20746f2060408201526830206164647265737360b81b606082015260800190565b60208082526019908201527f5661756c742e636c61696d3a20756e617574686f72697a656400000000000000604082015260600190565b9283526001600160a01b03918216602084015216604082015260600190565b9283526020830191909152604082015260600190565b6000821982111561119b5761119b6111bf565b500190565b60008160001904831182151516156111ba576111ba6111bf565b500290565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146111ea57600080fd5b5056fea2646970667358221220309376e66ca21a54581da8ded1f86303ca0c78bd47254d1bdb5fb101169baa2364736f6c63430008010033\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\n/* eslint-enable */\n\nexport class MiningVaultPool extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI['abi']);\n  }\n  async mintDToken(accountAddress, ...args) {\n    await this._init()\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class MiningVaultRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async mint(accountAddress, ...args) {\n    await this._init()\n    //console.log(accountAddress, args)\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    //console.log('txRaw', txRaw)\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { getDeriConfig } from '../../config';\nimport { naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class WormholeContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI );\n  }\n  async freeze(accountAddress, amount, toChainId) {\n    const { wormholeAddress: toWormholeAddress } = getDeriConfig(\n      toChainId\n    );\n    return this._transact(\n      'freeze',\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\n      accountAddress\n    );\n  }\n\n  async mintDeri(\n    accountAddress,\n    amount,\n    fromChainId,\n    fromWormhole,\n    fromNonce,\n    v,\n    r,\n    s\n  ) {\n    return this._transact(\n      'claim',\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\n      accountAddress\n    );\n  }\n}\n","import { DeriContract } from \"../../contract/deri/deri\";\nimport { MiningVaultPool } from \"../../contract/deri/mining_vault_pool\";\nimport { MiningVaultRouter } from \"../../contract/deri/mining_vault_router\";\nimport { WormholeContract } from \"../../contract/deri/wormhole\";\nimport { factory } from \"../../utils\"\n\n\nexport const deriFactory = factory(DeriContract)\n\nexport const wormholeFactory = factory(WormholeContract)\n\nexport const miningVaultRouterFactory = factory(MiningVaultRouter)\n\nexport const miningVaultPoolFactory = factory(MiningVaultPool)","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class SlpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    const res = await this._call('userInfo', [152, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class ClpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('addLiquidity', args, accountAddress);\n  }\n\n  async removeLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('removeLiquidity', args, accountAddress);\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n    };\n  }\n\n  async getStateValues() {\n    const res = await this._call('getStateValues');\n    return {\n      liquidity: deriToNatural(res),\n    };\n  }\n\n  async getLiquidity() {\n    const res = await this._call('getStateValues');\n    if (res && res.liquidity) {\n      return deriToNatural(res.liquidity);\n    }\n    throw new Error(\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\n    );\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class Clp2Pool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    //console.log('hit clp2')\n    const res = await this._call('userInfo', [391, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}","import { SlpPool } from '../../contract/lp_pool/slp_pool'\nimport { ClpPool } from '../../contract/lp_pool/clp_pool'\nimport { Clp2Pool } from '../../contract/lp_pool/clp2_pool'\n\nexport const slpPoolFactory = (function () {\n  const slpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\n      return slpPoolInstanceMap[key];\n    }\n    const slpPool = new SlpPool(chainId, contractAddress);\n    slpPoolInstanceMap[key] = slpPool;\n    return slpPool;\n  };\n})();\n\nexport const clpPoolFactory = (function () {\n  const clpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\n      return clpPoolInstanceMap[key];\n    }\n    const clpPool = new ClpPool(chainId, contractAddress);\n    clpPoolInstanceMap[key] = clpPool;\n    return clpPool;\n  };\n})();\n\nexport const clp2PoolFactory = (function () {\n  const clp2PoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\n      return clp2PoolInstanceMap[key];\n    }\n    const clp2Pool = new Clp2Pool(chainId, contractAddress);\n    clp2PoolInstanceMap[key] = clp2Pool;\n    return clp2Pool;\n  };\n})();","import {\n  hexToNumber,\n  fromWei,\n  catchSyncApiError,\n  catchApiError,\n  getChainGasUnit,\n} from '../utils';\nimport {\n  checkChainId,\n  checkAddress,\n} from '../config'\nimport { web3Factory } from '../factory';\nimport { AppError } from '../error/error';\n\nexport const hasWallet = () => {\n  return catchSyncApiError(() => {\n    let res = {};\n    if (window.ethereum) {\n      res.hasWallet = true;\n      if (window.ethereum.isMetaMask) {\n        res.isMetaMask = true;\n      }\n      return res;\n    }\n    throw new AppError('WEB3_WALLET_NOT_FOUND');\n  });\n};\n\nexport const connectWallet = async (\n  handleChainChanged,\n  handleAccountChanged\n) => {\n  return catchApiError(\n    async () => {\n      if (window != null && window.ethereum != null) {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts',\n        });\n        const chainId = parseInt(\n          await window.ethereum.request({ method: 'net_version' })\n        );\n        // const chainId = hexToNumber(\n        //   await window.ethereum.request({ method: 'eth_chainId' })\n        // );\n        const account = Array.isArray(accounts) && accounts[0];\n\n        window.ethereum.on('accountsChanged', (accounts) => {\n          let account;\n          if (accounts.length > 0) {\n            account = accounts[0];\n          } else {\n            account = '';\n          }\n          if (typeof handleAccountChanged === 'function') {\n            handleAccountChanged(account);\n          } else {\n            window.location.reload();\n          }\n        });\n        window.ethereum.on('chainChanged', (chainId) => {\n          let res = hexToNumber(chainId);\n          if (typeof handleChainChanged === 'function') {\n            handleChainChanged(res);\n          } else {\n            window.location.reload();\n          }\n        });\n        return { account, chainId };\n      }\n      throw new AppError('WEB3_WALLET_NOT_FOUND');\n    },\n    [],\n    { account: '', chainId: '' }\n  );\n};\n\nexport const getUserWalletBalance = async (chainId, accountAddress) => {\n  return catchApiError(\n    async () => {\n      chainId = checkChainId(chainId);\n      accountAddress = checkAddress(accountAddress);\n      const web3 = await web3Factory.get(chainId);\n      const balance = await web3.eth.getBalance(accountAddress);\n      return  {\n        balance: fromWei(balance),\n        unit: getChainGasUnit(chainId),\n      }\n    },\n  );\n};\n","import { factory } from '../../utils/factory';\nimport { BrokerManager } from '../../contract/activity/broker_manager';\nimport { PTokenAirdrop } from '../../contract/activity/ptoken_airdrop';\n\nexport const brokerManagerFactory = factory(BrokerManager);\nexport const pTokenAirdropFactory = factory(PTokenAirdrop);\n","import { databaseFactory, databaseAirdropFactory } from '../factory';\nimport {\n  toChecksumAddress,\n  getNetworkName,\n  deriToString,\n  deriToBool,\n  deriToNatural,\n  catchApiError,\n  //getPoolContractAddress,\n} from '../utils';\nimport {\n  checkChainId,\n  checkAddress,\n  checkTokenId,\n} from '../config/check'\n\nexport const getUserInfo = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  let res,\n    retry = 2;\n  while (retry > 0) {\n    res = await db.getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v`,\n      `${userAddress}.claim.r`,\n      `${userAddress}.claim.s`,\n      `${userAddress}.claim.valid`,\n    ]);\n    if (\n      Math.floor(new Date().getTime() / 1000) < parseInt(deriToString(res[2]))\n    ) {\n      break;\n    } else {\n      retry -= 1;\n      db.web3 = null;\n      if (retry === 0) {\n        // if deadline is outdated\n        res = [...res];\n        res[7] = false;\n      }\n    }\n  }\n  const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\n  return {\n    chainId: deriToString(chainId),\n    amount: deriToNatural(amount).toString(),\n    deadline: deriToString(deadline),\n    nonce: deriToString(nonce),\n    v: deriToString(v),\n    r,\n    s,\n    valid: deriToBool(valid),\n  };\n};\n\nexport const getUserInfoHarvest = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db.getValues([\n    `${userAddress}.claim.harvest.lp`,\n    `${userAddress}.claim.harvest.trade`,\n  ]);\n  const [harvestLp, harvestTrade] = res;\n  return {\n    lp: deriToNatural(harvestLp).toString(),\n    trade: deriToNatural(harvestTrade).toString(),\n  };\n};\n\nexport const getUserInfoTotal = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db.getValues([`${userAddress}.claim.total`]);\n  const [total] = res;\n  return {\n    total: deriToNatural(total).toString(),\n  };\n};\n\nexport const getUserInfoAll = async (userAddress) => {\n  return catchApiError(async () => {\n    const [userInfo, userInfoHarvest, userInfoTotal] = await Promise.all([\n      getUserInfo(userAddress),\n      getUserInfoHarvest(userAddress),\n      getUserInfoTotal(userAddress),\n    ]);\n    return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\n  });\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    const db = databaseFactory();\n    const res = await db.getValues([`${chainId}.${poolAddress}.liquidity`]);\n    const [liquidity] = res;\n    return {\n      liquidity: deriToNatural(liquidity).toString(),\n    };\n  });\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    const db = databaseFactory(true);\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db.getValues([\n      `${poolNetwork}.${poolAddress}.apy`,\n      `${poolNetwork}.${poolAddress}.volume.1h`,\n      `${poolNetwork}.${poolAddress}.volume.24h`,\n    ]);\n    const [apy, volume1h, volume24h] = res;\n    return {\n      apy: deriToNatural(apy).toString(),\n      volume1h: deriToNatural(volume1h).toString(),\n      volume24h: deriToNatural(volume24h).toString(),\n    };\n  });\n};\n\nexport const getPoolLiquidityV2 = async (chainId, poolAddress, bTokenId) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    bTokenId = checkTokenId(bTokenId)\n    const db = databaseFactory();\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\n    const [liquidity] = res;\n    return {\n      liquidity: deriToNatural(liquidity).toString(),\n    };\n  });\n};\n\nexport const getPoolInfoApyV2 = async (chainId, poolAddress, bTokenId) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    bTokenId = checkTokenId(bTokenId)\n    const db = databaseFactory(true);\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db.getValues([\n      `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\n      `${poolNetwork}.${poolAddress}.volume.1h`,\n      `${poolNetwork}.${poolAddress}.volume.24h`,\n      `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\n    ]);\n    const [apy, volume1h, volume24h, multiplier] = res;\n    return {\n      apy: deriToNatural(apy).toString(),\n      volume1h: deriToNatural(volume1h).toString(),\n      volume24h: deriToNatural(volume24h).toString(),\n      multiplier: deriToNatural(multiplier).toString(),\n    };\n  });\n};\n\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    const db = databaseFactory(true);\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.apy2`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n    const [apy, apy2, volume1h, volume24h] = res;\n    return {\n      apy: deriToNatural(apy).toString(),\n      apy2: deriToNatural(apy2).toString(),\n      volume1h: deriToNatural(volume1h).toString(),\n      volume24h: deriToNatural(volume24h).toString(),\n    };\n  });\n};\n\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    const db = databaseFactory(true);\n    userAddress = toChecksumAddress(userAddress);\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db.getValues([\n      `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\n      `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\n    ]);\n    const [volume1h, volume24h] = res;\n    return {\n      volume1h: deriToNatural(volume1h).toString(),\n      volume24h: deriToNatural(volume24h).toString(),\n    };\n  });\n};\n\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\n  return catchApiError(async () => {\n    const db = databaseAirdropFactory(true);\n    userAddress = toChecksumAddress(userAddress);\n    const res = await db.getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v1`,\n      `${userAddress}.claim.r1`,\n      `${userAddress}.claim.s1`,\n      `${userAddress}.claim.v2`,\n      `${userAddress}.claim.r2`,\n      `${userAddress}.claim.s2`,\n      `${userAddress}.claim.valid`,\n      // `${userAddress}.claim.harvest.lp`,\n      // `${userAddress}.claim.harvest.trade`,\n      // `${userAddress}.claim.total`,\n    ]);\n    const [\n      chainId,\n      amount,\n      deadline,\n      nonce,\n      v1,\n      r1,\n      s1,\n      v2,\n      r2,\n      s2,\n      valid,\n      // harvestLp,\n      // harvestTrade,\n      // total,\n    ] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v1: deriToString(v1),\n      r1,\n      s1,\n      v2: deriToString(v2),\n      r2,\n      s2,\n      valid: deriToBool(valid),\n      // lp: deriToNatural(harvestLp),\n      // trade: deriToNatural(harvestTrade),\n      // total: deriToString(total),\n    };\n  });\n};\n","import { isObject } from \"../utils\"\n\nexport const priceCache = (function(){\n  let _prices = {}\n  return {\n    get(poolAddress, symbolId) {\n      const key = `${poolAddress}.${symbolId}`\n      if (Object.keys(_prices).includes(key)) {\n        const [price, ] = _prices[key].split('|')\n        //if (parseInt(timestamp) - Date.now() < 10000) {\n          return price\n        //}\n      }\n      console.log('please init priceCache first')\n    },\n    // update(chainId, poolAddress, symbolId) {\n    //   // place holder\n    // },\n    set(poolAddress, symbolId, val) {\n      if (!isNaN(parseFloat(val))) {\n        const timestamp = Date.now().toString()\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\n      }\n    }\n  }\n})()\n\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress, symbolId) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, symbolId, resource) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const liquidatePriceCache = (function() {\n  let _cache = {}\n  return {\n    get(address) {\n      if (Object.keys(_cache).includes(address)) {\n        return _cache[address]\n      } else {\n        return {}\n      }\n    },\n    set(address, val) {\n      _cache[address] = val\n    },\n  }\n})()\n","import { getDeriConfig, checkAddress, DeriEnv, checkChainId } from '../config';\nimport { deriFactory, databaseWormholeFactory } from '../factory';\nimport { catchApiError } from '../utils';\n\nexport const getUserWormholeSignature = async (accountAddress) => {\n  return catchApiError(async () => {\n    accountAddress = checkAddress(accountAddress);\n    const databaseWormhole = databaseWormholeFactory(true);\n    return await databaseWormhole.signature(accountAddress);\n  });\n};\n\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\n  return catchApiError(async () => {\n    const env = DeriEnv.get();\n    chainId = checkChainId(chainId);\n    accountAddress = checkAddress(accountAddress);\n    const { wormholeAddress, deriAddress } = await getDeriConfig(env, chainId);\n    const deri = deriFactory(chainId, deriAddress);\n    return await deri.isUnlocked(accountAddress, wormholeAddress);\n  });\n};\n\nexport const getDeriBalance = async (chainId, accountAddress) => {\n  return catchApiError(async () => {\n    const env = DeriEnv.get();\n    chainId = checkChainId(chainId);\n    accountAddress = checkAddress(accountAddress);\n    const { deriAddress } = await getDeriConfig(env, chainId);\n    const deri = deriFactory(chainId, deriAddress);\n    return (await deri.balanceOf(accountAddress)).toString();\n  });\n};\n","import {\n  miningVaultPoolFactory,\n  miningVaultRouterFactory,\n  wormholeFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory';\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from '../api/database_api';\nimport {\n  getDeriConfig,\n  getMiningVaultRouterConfig,\n  getMiningVaultConfig,\n  checkChainId,\n  checkAddress,\n} from '../config';\nimport { naturalToDeri,  catchTxApiError } from '../../shared/utils';\nimport { AppError } from '../error/error';\n\nexport const mintDToken = async (chainId, accountAddress) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    accountAddress = checkAddress(accountAddress)\n    const userInfo = await getUserInfoAll(accountAddress);\n    const amount = naturalToDeri(userInfo.amount);\n    const { deadline, nonce, v, r, s } = userInfo;\n    // const { nonce } = userInfo;\n    // const { v } = userInfo;\n    // const { r } = userInfo;\n    // const { s } = userInfo;\n    if (userInfo.valid) {\n      const miningVaultAddress = getMiningVaultConfig(chainId);\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\n      return await miningVault.mintDToken(\n        accountAddress,\n        amount,\n        deadline,\n        nonce,\n        v,\n        r,\n        s\n      );\n    } else {\n      throw new AppError('INVALID_DATA', userInfo);\n    }\n  });\n};\n\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    toChainId = checkChainId(toChainId)\n    accountAddress = checkAddress(accountAddress)\n    const { wormholeAddress } = getDeriConfig(chainId);\n    const wormhole = wormholeFactory(chainId, wormholeAddress);\n    return await wormhole.freeze(accountAddress, amount, toChainId);\n  });\n};\n\nexport const mintDeri = async (toChainId, accountAddress) => {\n  return catchTxApiError(async () => {\n    toChainId = checkChainId(toChainId)\n    accountAddress = checkAddress(accountAddress)\n    const databaseWormhole = databaseWormholeFactory(true);\n    const userInfo = await databaseWormhole.signature(accountAddress);\n    const {\n      amount,\n      fromChainId,\n      fromWormhole,\n      nonce: fromNonce,\n      v,\n      r,\n      s,\n    } = userInfo;\n    // const { fromChainId } = userInfo;\n    // const { fromWormhole } = userInfo;\n    // const fromNonce = userInfo.nonce;\n    // const { v } = userInfo;\n    // const { r } = userInfo;\n    // const { s } = userInfo;\n    if (userInfo.valid) {\n      const { wormholeAddress } = getDeriConfig(toChainId);\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\n      //wormhole.setAccount(accountAddress);\n      return await wormhole.mintDeri(\n        accountAddress,\n        amount,\n        fromChainId,\n        fromWormhole,\n        fromNonce,\n        v,\n        r,\n        s\n      );\n    } else {\n      throw new AppError('INVALID_DATA', userInfo);\n    }\n  });\n};\n\nexport const unlockDeri = async (chainId, accountAddress) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    accountAddress = checkAddress(accountAddress)\n    const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\n    const deri = deriFactory(chainId, deriAddress);\n    return await deri.unlock(accountAddress, wormholeAddress);\n  });\n};\n\nexport const mintAirdrop = async (chainId, accountAddress) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    accountAddress = checkAddress(accountAddress)\n    const userInfo = await getUserInfoAllForAirDrop(accountAddress);\n    const amount = naturalToDeri(userInfo.amount).toString();\n    const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\n    if (userInfo.valid) {\n      const miningVaultAddress = getMiningVaultRouterConfig(chainId);\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      return await miningVaultRouter.mint(\n        accountAddress,\n        amount,\n        deadline,\n        nonce,\n        v1,\n        r1,\n        s1,\n        v2,\n        r2,\n        s2\n      );\n    } else {\n      throw new AppError('INVALID_DATA', userInfo);\n    }\n  });\n};","import { getLpConfig, checkChainId, checkAddress  } from '../config';\nimport { ERC20Factory } from '../contract';\nimport { slpPoolFactory } from '../factory/contract';\nimport { catchApiError, catchTxApiError } from '../utils';\n\nexport const getSlpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      slpPool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  });\n};\n\n\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    return await bToken.isUnlocked(accountAddress, poolAddress);\n  });\n};\n\nexport const getSlpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    const balance = await bToken.balanceOf(accountAddress);\n    return balance.toString();\n  });\n};\n\nexport const addSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    await getLpConfig(chainId, poolAddress);\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    return await slpPool.addLiquidity(accountAddress, amount);\n  });\n};\n\nexport const removeSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    await getLpConfig(chainId, poolAddress);\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    return await slpPool.removeLiquidity(accountAddress, amount);\n  });\n};\n\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  });\n};\n\n","import { clp2PoolFactory } from '../factory/contract';\nimport { getLpConfig } from '../config/pool_v1';\nimport { catchApiError, catchTxApiError} from '../utils';\nimport { checkChainId, checkAddress } from '../config/check';\nimport { ERC20Factory } from '../contract';\n\nexport const getClp2LiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      clp2Pool.getLiquidity(accountAddress),\n    ]);\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  });\n};\n\n\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    return await bToken.isUnlocked(accountAddress, poolAddress);\n  });\n};\nexport const getClp2WalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    const balance = await bToken.balanceOf(accountAddress);\n    return balance.toString();\n  });\n};\n\nexport const addClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    await getLpConfig(chainId, poolAddress);\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    return await clp2Pool.addLiquidity(accountAddress, amount);\n  });\n};\n\nexport const removeClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    await getLpConfig(chainId, poolAddress);\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    return await clp2Pool.removeLiquidity(accountAddress, amount);\n  });\n};\n\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\n  return catchTxApiError(async () => {\n    chainId = checkChainId(chainId)\n    poolAddress = checkAddress(poolAddress)\n    accountAddress = checkAddress(accountAddress)\n    const { bTokenAddress } = await getLpConfig(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  });\n};\n\n","import {\n  getSlpLiquidityInfo,\n  getSlpWalletBalance,\n  isSlpUnlocked,\n} from './slp_pool_api';\nimport {\n  getClp2LiquidityInfo,\n  getClp2WalletBalance,\n  isClp2Unlocked,\n} from './clp2_pool_api';\n// import {\n//   getClpLiquidityInfo,\n//   getClpWalletBalance,\n//   isClpUnlocked,\n// } from './clp_pool_api';\nimport { getLpConfig } from '../config';\nimport { clp2PoolFactory, slpPoolFactory } from '../factory/contract';\nimport { bg, catchApiError } from '../utils';\n\nexport const getLpUserStakeInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    const { version } = await getLpConfig(chainId, poolAddress);\n    let liquidity;\n    if (version === 'slp') {\n      const slp = slpPoolFactory(chainId, poolAddress);\n      liquidity = await slp.getLiquidity(accountAddress);\n      //console.log('slp', liquidity.toString())\n    } else if (version === 'clp') {\n      const clp = clp2PoolFactory(chainId, poolAddress);\n      liquidity = await clp.getLiquidity(accountAddress);\n      //console.log('clp', liquidity.toString())\n    }\n    return { chainId, poolAddress, isStaked: bg(liquidity).gt(0) };\n  });\n};\n\nexport const getLpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { version } = await getLpConfig(chainId, poolAddress);\n  if (version === 'slp') {\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\n  // } else if (type === 'clp') {\n  //   return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (version === 'clp') {\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\n  }\n};\n\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { version } = await getLpConfig(chainId, poolAddress);\n  if (version === 'slp') {\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\n  // } else if (version === 'clp') {\n  //   return await isClpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (version === 'clp') {\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\n  }\n};\n\nexport const getLpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { version } = await getLpConfig(chainId, poolAddress);\n  if (version === 'slp') {\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\n  // } else if (version === 'clp') {\n  //   return await getClpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (version  === 'clp') {\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\n  }\n};\n","import { bg, getDailyBlockNumber } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  return bg(\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\n  ).abs();\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\n  fundingRateCoefficient;\n}\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import { bg, max, min } from '../../shared/utils';\n\nexport * from './fundingRate';\n\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  tradersNetVolume,\n  tradersNetCost,\n  multiplier,\n  minPoolMarginRatio,\n  price\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const value = bg(tradersNetVolume).times(price).times(multiplier);\n  const removable = bg(liquidity)\n    .plus(tradersNetCost)\n    .minus(value)\n    .minus(value.abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  bg(volume).eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return bg(volume).abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return bg(volume).times(price).times(multiplier).minus(cost);\n}\n\nexport const calculateMaxWithdrawMargin = (\n  price,\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  if (volume.eq(0)) {\n    return margin;\n  }\n  const held = calculateMarginHeld(\n    price,\n    volume,\n    multiplier,\n    minInitialMarginRatio\n  );\n  const pnl = calculatePnl(price, volume, multiplier, cost);\n  const withdrawable = max(bg(margin).plus(pnl).minus(held.times(1.02)), bg(0));\n  return withdrawable;\n};\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = bg(cost).minus(margin).div(volume).div(multiplier);\n  let res = bg(volume).gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  volume,\n  liquidity,\n  tradersNetVolume,\n  multiplier,\n  minPoolMarginRatio,\n  minInitialMarginRatio,\n  newVolume,\n  amount\n) => {\n  const minMargin = bg(volume)\n    .plus(newVolume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(minInitialMarginRatio);\n  const poolMaxVolume = bg(liquidity)\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (bg(margin).plus(amount).gte(minMargin)) {\n    if (\n      bg(newVolume).lte(poolMaxVolume.minus(tradersNetVolume)) &&\n      bg(newVolume).gte(poolMaxVolume.negated().minus(tradersNetVolume))\n    ) {\n      return { success: true };\n    }\n    return { success: false, message: 'Pool insufficient liquidity' };\n  }\n  return { success: false, message: 'Trader insufficient margin' };\n};\n","import {\n  validateArgs,\n  deriToNatural,\n  numberToHex,\n  bg,\n} from '../../shared/utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  processFundingRate,\n} from '../calculation';\nimport { ContractBase } from '../../shared/contract/contract_base';\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle';\n\n/* eslint-disable */\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, POOL_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async getStateValues() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getStateValues');\n      //console.log(\"getStateValues() raw:\", res)\n      result = {\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\n        liquidity: deriToNatural(res.liquidity),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      result = {\n        cumuFundingRate: defaultValue,\n        cumuFundingRateBlock: defaultValue,\n        liquidity: defaultValue,\n        tradersNetCost: defaultValue,\n        tradersNetVolume: defaultValue,\n      };\n      console.log(`getStateValues: ${err}`);\n    }\n    return result;\n  }\n\n  async getParameters() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getParameters');\n      // console.log(\"getParameters() raw: \", res)\n      result = {\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n        priceDelayAllowance: bg(res.priceDelayAllowance),\n      };\n    } catch (err) {\n      result = {\n        multiplier: defaultValue,\n        feeRatio: defaultValue,\n        minPoolMarginRatio: defaultValue,\n        minInitialMarginRatio: defaultValue,\n        minMaintenanceMarginRatio: defaultValue,\n        minAddLiquidity: defaultValue,\n        redemptionFeeRatio: defaultValue,\n        fundingRateCoefficient: defaultValue,\n        minLiquidationReward: defaultValue,\n        maxLiquidationReward: defaultValue,\n        liquidationCutRatio: defaultValue,\n        priceDelayAllowance: defaultValue,\n      };\n      console.log(`getParameters: ${err}`);\n    }\n    return result;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt == null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _estimatedGas(method, args, accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    const MAX_GAS_AMOUNT = 582731\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  // overwrite to use signed price to tx\n  async _transact(method, args = [], accountAddress) {\n    await this._init()\n    const symbol = await this.symbol()\n    const oracle = await getPriceInfoForV1(symbol);\n    let signed = [oracle.timestamp, oracle.price, parseInt(oracle.v).toString(), oracle.r, oracle.s];\n\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\n\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n\n  async getFundingRate() {\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\n    const symbol = await this.symbol()\n    price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n    try {\n      const stateValues = await this.getStateValues();\n      const parameters = await this.getParameters();\n      const { tradersNetVolume, liquidity } = stateValues;\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        minPoolMarginRatio,\n      } = parameters;\n      const args1 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        fundingRateCoefficient,\n      ];\n      if (!validateArgs(...args1)) {\n        fundingRate = '0';\n        fundingRatePerBlock = '0';\n      } else {\n        fundingRatePerBlock = calculateFundingRate(...args1);\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\n      }\n      const args2 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        minPoolMarginRatio,\n      ];\n      if (!validateArgs(...args2)) {\n        liquidityUsed = '0';\n      } else {\n        liquidityUsed = calculateLiquidityUsed(...args2);\n      }\n      return {\n        price,\n        multiplier: multiplier.toString(),\n        fundingRate: fundingRate,\n        fundingRatePerBlock: fundingRatePerBlock,\n        tradersNetVolume: tradersNetVolume.toString(),\n        liquidity: liquidity.toString(),\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\n        liquidityUsed: liquidityUsed,\n        poolMarginRatio: minPoolMarginRatio.toString(),\n      };\n    } catch (err) {\n      console.log('PerpetualPool#gerFundingRate():', err);\n      throw err;\n    }\n  }\n\n  async depositMargin(accountAddress, amount) {\n    let res;\n    try {\n      let tx = await this._transact(\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [amount],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      console.log('here');\n      res = { success: false, error: err };\n    }\n    return res;\n  }\n\n  // util methods, it's extract shared/utils now\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    //toBlock = toBlock.number;\n    let amount;\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\n      amount = 999;\n    } else {\n      amount = 4999;\n    }\n    if (fromBlock + amount > to) {\n      amount = to - fromBlock;\n    }\n    while (fromBlock <= to) {\n      //console.log('tick')\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if (fromBlock + amount > to) {\n        amount = to - fromBlock;\n      }\n    }\n    return events;\n  }\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { deriToNatural, bg } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async getPositionInfo(accountAddress) {\n    let result = {};\n    try {\n      const res = await this._call('getPosition(address)', [accountAddress]);\n      //console.log(\"getPositionInfo() raw:\", res)\n      result = {\n        volume: deriToNatural(res[0]),\n        cost: deriToNatural(res[1]),\n        lastCumuFundingRate: deriToNatural(res[2]),\n        margin: deriToNatural(res[3]),\n        lastUpdateTimestamp: bg(res[4]),\n      };\n    } catch (err) {\n      result = {\n        volume: bg(0),\n        cost: bg(0),\n        lastCumuFundingRate: bg(0),\n        margin: bg(0),\n        lastUpdateTimestamp: bg(0),\n      };\n      //console.log(`getPositionInfo: ${err}`);\n    }\n    return result;\n  }\n\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { deriToNatural } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class LTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async balance(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async balanceOf(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async totalSupply() {\n    const res = deriToNatural(await this._call('totalSupply'));\n    //console.log(\"> lToken totalSupply\", res.toString())\n    return res;\n  }\n}\n","import { PerpetualPool } from './contract/perpetual_pool';\n//import { BTokenContract } from './contract/bToken';\nimport { PTokenContract } from './contract/p_token';\nimport { LTokenContract } from './contract/l_token';\n\nexport const perpetualPoolFactory = (() => {\n  const perpetualPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\n      return perpetualPoolInstanceMap[key];\n    }\n    const perpetualPool = new PerpetualPool(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PerpetualPoolContract\");\n    perpetualPoolInstanceMap[key] = perpetualPool;\n    return perpetualPool;\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const pTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\n      return pTokenInstanceMap[key];\n    }\n    const pToken = new PTokenContract(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PTokenContract\")\n    pTokenInstanceMap[key] = pToken;\n    return pToken;\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const lTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\n      return lTokenInstanceMap[key];\n    }\n    const lToken = new LTokenContract(\n      chainId,\n      contractAddress,\n    );\n    lTokenInstanceMap[key] = lToken;\n    return lToken;\n  };\n})();\n\n","import { getLpConfig } from '../config';\nimport { unlockSlp, addSlpLiquidity, removeSlpLiquidity } from './slp_pool_api';\nimport { unlockClp, addClpLiquidity, removeClpLiquidity } from './clp_pool_api';\nimport {\n  unlockClp2,\n  addClp2Liquidity,\n  removeClp2Liquidity,\n} from './clp2_pool_api';\n\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\n  const { version } = await getLpConfig(chainId, poolAddress);\n  if (version === 'slp') {\n    return await unlockSlp(chainId, poolAddress, accountAddress);\n  // } else if (version === 'clp') {\n  //   return await unlockClp(chainId, poolAddress, accountAddress);\n  } else if (version === 'clp') {\n    return await unlockClp2(chainId, poolAddress, accountAddress);\n  }\n};\n\nexport const addLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { version } = await getLpConfig(chainId, poolAddress);\n  if (version === 'slp') {\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\n  // } else if (type === 'clp') {\n  //   return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (version === 'clp') {\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\n  }\n};\n\nexport const removeLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { version } = await getLpConfig(chainId, poolAddress);\n  if (version === 'slp') {\n    return await removeSlpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (version === 'clp') {\n    return await removeClp2Liquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  }\n};\n","/*\n    1. Calculate the cost for user input volume\n    2. Calculate the final price if user input volume is traded\n*/\n\nexport function getMidPrice(tradersNetVolume, theoreticalPrice, K) {\n    return theoreticalPrice * (1 + K * tradersNetVolume)\n}\n\nexport function queryTradePMM(tradersNetVolume, theoreticalPrice, K, volume) {\n    return theoreticalPrice * (volume + ((tradersNetVolume + volume) ** 2 - tradersNetVolume ** 2) * K / 2)\n}\n","const invalidValues = [NaN, null, undefined];\n\nfunction getEverlastingTimePriceAndDelta(S, K, V, T) {\n  let u = Math.sqrt(8 / V / V / T + 1);\n  let timeValue, delta;\n  if (S > K) {\n    timeValue = (K * Math.pow(S / K, (1 - u) / 2)) / u;\n    delta = ((1 - u) * timeValue) / S / 2;\n  } else if (S === K) {\n    timeValue = K / u;\n    delta = 0;\n  } else {\n    timeValue = (K * Math.pow(S / K, (1 + u) / 2)) / u;\n    delta = ((1 + u) * timeValue) / S / 2;\n  }\n  return [timeValue, delta];\n}\n\nfunction getDynamicInitialMarginRatio(\n  spot,\n  strike,\n  isCall,\n  initialMarginRatio,\n  minInitialMarginRatio\n) {\n  if ((isCall && spot >= strike) || (!isCall && strike >= spot)) {\n    return initialMarginRatio;\n  } else {\n    let otmRatio = (isCall ? strike - spot : spot - strike) / strike;\n    return Math.max(\n      (1 - otmRatio * 3) * initialMarginRatio,\n      minInitialMarginRatio\n    );\n  }\n}\n\n// multiple position for same underlier, e.x. BTCUSD\nfunction canLiquidateWithPrice(\n  pool,\n  trader,\n  symbols,\n  positions,\n  newUnderlierPrice\n) {\n  let newDynamicMargin = trader.dynamicMargin;\n  let newInitialMargin = trader.initialMargin;\n\n  for (let i = 0; i < symbols.length; i++) {\n    let symbol = symbols[i];\n    let position = positions[i];\n    if (position.volume === 0) {\n      continue;\n    }\n\n    let newIntrinsicValue = symbol.isCall\n      ? Math.max(newUnderlierPrice - symbol.strikePrice, 0)\n      : Math.max(symbol.strikePrice - newUnderlierPrice, 0);\n    let [newTimeValue, newDelta] = getEverlastingTimePriceAndDelta(\n      newUnderlierPrice,\n      symbol.strikePrice,\n      symbol.volatility,\n      pool.fundingPeriod\n    );\n    if (newIntrinsicValue > 0) {\n      newDelta += symbol.isCall ? 1 : -1;\n    }\n    let newPnl =\n      position.volume * (newIntrinsicValue + newTimeValue) * symbol.multiplier -\n      position.cost;\n    let newDynamicMarginRatio = getDynamicInitialMarginRatio(\n      newUnderlierPrice,\n      symbol.strikePrice,\n      symbol.isCall,\n      pool.initialMarginRatio,\n      0.01\n    );\n\n    newDynamicMargin = newDynamicMargin - position.pnl + newPnl;\n    newInitialMargin =\n      newInitialMargin -\n      Math.abs(\n        position.volume *\n          symbol.spotPrice *\n          symbol.multiplier *\n          symbol.dynamicMarginRatio\n      ) +\n      Math.abs(\n        position.volume *\n          newUnderlierPrice *\n          symbol.multiplier *\n          newDynamicMarginRatio\n      );\n  }\n\n  let newMaintenanceMargin =\n    (newInitialMargin * pool.maintenanceMarginRatio) / pool.initialMarginRatio;\n\n  if (\n    invalidValues.includes(newMaintenanceMargin) ||\n    invalidValues.includes(newDynamicMargin)\n  ) {\n    throw new Error(\n      `-- canLiquidateWithPrice: Invalid Margin value: ${newMaintenanceMargin} ${newDynamicMargin}`\n    );\n  }\n  return newMaintenanceMargin > newDynamicMargin;\n}\n\nexport function findLiquidationPrice(pool, trader, symbols, positions) {\n  if (symbols.length != positions.length) {\n    throw new Error(\n      'canLiquidateWithPrice: symbols and positions length not match'\n    );\n  }\n  if (symbols.length === 0) {\n    return {\n      numPositions: positions.length,\n      price1: null,\n      price2: null,\n    };\n  }\n  let head = symbols[0].symbol.slice(0, 6);\n  for (let i = 0; i < symbols.length; i++) {\n    if (!symbols[i].symbol.startsWith(head)) {\n      throw new Error('canLiquidateWithPrice: symbols not in same underlier');\n    }\n  }\n\n  if (trader.maintenanceMargin > trader.dynamicMargin) {\n    return {\n      numPositions: positions.length,\n      price1: symbols[0].spotPrice,\n      price2: symbols[0].spotPrice,\n    };\n  }\n\n  let final1, final2;\n  let price1, price2;\n  let l1, l2;\n\n  price1 = symbols[0].spotPrice / 10;\n  price2 = symbols[0].spotPrice;\n  l1 = canLiquidateWithPrice(pool, trader, symbols, positions, price1);\n  l2 = false;\n  while (true) {\n    if (l1 && l2) {\n      final1 = (price1 + price2) / 2;\n      break;\n    }\n    if (!l1 && !l2) {\n      final1 = null;\n      break;\n    }\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\n      final1 = (price1 + price2) / 2;\n      break;\n    }\n    let price = (price1 + price2) / 2;\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\n    if (l === l1) price1 = price;\n    else price2 = price;\n  }\n\n  price1 = symbols[0].spotPrice;\n  price2 = symbols[0].spotPrice * 10;\n  l1 = false;\n  l2 = canLiquidateWithPrice(pool, trader, symbols, positions, price2);\n  while (true) {\n    if (l1 && l2) {\n      final2 = (price1 + price2) / 2;\n      break;\n    }\n    if (!l1 && !l2) {\n      final2 = null;\n      break;\n    }\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\n      final2 = (price1 + price2) / 2;\n      break;\n    }\n    let price = (price1 + price2) / 2;\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\n    if (l === l1) price1 = price;\n    else price2 = price;\n  }\n\n  return {\n    numPositions: positions.length,\n    price1: final1,\n    price2: final2,\n  };\n}\n","import { bg, max, toNumberForObject } from \"../../shared/utils\"\nimport { normalizeOptionSymbol } from \"../../shared/config\"\nimport { findLiquidationPrice } from './findLiquidationPrice2';\n\nexport const dynamicInitialMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\n    return initialMarginRatio\n  } else {\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\n    return max((bg(1).minus(otmRatio.times(3))).times(initialMarginRatio), bg(0.01))\n  }\n}\n\nexport const dynamicInitialPoolMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\n  // for pool\n  const initialPoolMarginRatio = bg(initialMarginRatio).times(10)\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\n    return initialMarginRatio\n  } else {\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\n    return max((bg(1).minus(otmRatio.times(3))).times(initialPoolMarginRatio), bg(0.01).times(10))\n  }\n}\n\nexport const getDeltaFundingPerSecond = (symbol, delta, price, totalDynamicEquity, newNetVolume)  => {\n  return bg(totalDynamicEquity).eq(0)\n    ? bg(0)\n    : bg(delta)\n        .times(bg(symbol.tradersNetVolume).plus(newNetVolume))\n        .times(price)\n        .times(price)\n        .times(symbol.multiplier)\n        .times(symbol.multiplier)\n        .times(symbol.deltaFundingCoefficient)\n        .div(totalDynamicEquity);\n} \nexport const getpremiumFunding = (symbol, premiumFundingCoefficient, totalDynamicEquity)  => {\n  return bg(totalDynamicEquity).eq(0)\n    ? bg(0)\n    : bg(symbol.timeValue)\n        .times(symbol.multiplier)\n        .times(premiumFundingCoefficient)\n        .div(totalDynamicEquity);\n} \n\nexport const getIntrinsicPrice = (price, strikePrice, isCall) => {\n  return isCall\n    ? max(bg(price).minus(strikePrice), bg(0))\n    : max(bg(strikePrice).minus(price), bg(0));\n};\n\n\nexport const getMarginHeldBySymbol = (\n  volume,\n  price,\n  symbol,\n  initialMarginRatio\n) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(symbol.multiplier)\n    .times(\n      dynamicInitialMarginRatio(\n        price,\n        symbol.strikePrice,\n        symbol.isCall,\n        initialMarginRatio\n      )\n    );\n};\n\nexport const getAverageEntryPrice = (position, symbol) => {\n  return bg(position.volume).eq(0)\n    ? '0'\n    : bg(position.cost).div(position.volume).div(symbol.multiplier).toString();\n};\n\nexport const getLiquidationPrice = (state, symbolId)  => {\n  const { poolState, symbolState, traderState, positionState } = state;\n  const normalizedSymbol = normalizeOptionSymbol(symbolState[symbolId].symbol)\n  let res = findLiquidationPrice(\n    toNumberForObject(poolState, [\n      'initialMarginRatio',\n      'maintenanceMarginRatio',\n      'fundingPeriod',\n      'fundingCoefficient',\n      'marginMultiplier',\n      'liquidity',\n      'totalDynamicEquity',\n      'totalInitialMargin',\n    ]),\n    toNumberForObject(traderState, [\n      'margin',\n      'totalPnl',\n      'totalFundingAccrued',\n      'dynamicMargin',\n      'initialMargin',\n      'maintenanceMargin',\n    ]),\n    symbolState\n      .filter((s, index) => positionState[index].volume !== '0')\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\n      .map((s) =>\n        toNumberForObject(s, [\n          'multiplier',\n          'strikePrice',\n          'spotPrice',\n          'dpmmPrice',\n          'volatility',\n          'timePrice',\n          'dynamicMarginRatio',\n          'intrinsicValue',\n          'timeValue',\n          'delta',\n          'K',\n          'tradersNetVolume',\n          'tradersNetCost',\n          'cumulativeFundingRate',\n          'fundingPerSecond',\n        ])\n      ),\n    symbolState\n      .filter((s, index) => positionState[index].volume !== '0')\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\n      .map((s) =>\n        toNumberForObject(positionState[s.symbolId], [\n          'volume',\n          'cost',\n          'lastCumulativePremiumFundingRate',\n          'pnl',\n          'premiumFundingAccrued',\n        ])\n      )\n  );\n  res.underlier = normalizedSymbol\n  return res\n}\n\nexport const getLiquidationPrices = (state) => {\n  const { poolState, symbolState, traderState, positionState } = state;\n  const symbols = symbolState.filter((s, index) => positionState[index].volume !== '0').map((s) => s.symbol);\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n\n  const liquidationPrices = oracleSymbols.map((oSymbol) => {\n    let res = findLiquidationPrice(\n      toNumberForObject(poolState, [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'premiumFundingPeriod',\n        'premiumFundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      toNumberForObject(traderState, [\n        'margin',\n        'totalPnl',\n        'totalFundingAccrued',\n        'dynamicMargin',\n        'initialMargin',\n        'maintenanceMargin',\n      ]),\n      symbolState\n        .filter((s, index) => positionState[index].volume !== '0')\n        .filter((s) => s.symbol.startsWith(oSymbol))\n        .map((s) =>\n          toNumberForObject(s, [\n          'multiplier',\n          'strikePrice',\n          'spotPrice',\n          'dpmmPrice',\n          'underlierVolatility',\n          'timePrice',\n          'dynamicMarginRatio',\n          'intrinsicValue',\n          'timeValue',\n          'delta',\n          'K',\n          'tradersNetVolume',\n          'tradersNetCost',\n          'cumulativePremiumFundingRate',\n          'premiumFundingPerSecond',\n          ])\n        ),\n      symbolState\n        .filter((s, index) => positionState[index].volume !== '0')\n        .filter((s) => s.symbol.startsWith(oSymbol))\n        .map((s) =>\n          toNumberForObject(positionState[s.symbolId], [\n            'volume',\n            'cost',\n            'lastCumulativeDeltaFundingRate',\n            'lastCumulativePremiumFundingRate',\n            'pnl',\n            'deltaFundingAccrued',\n            'premiumFundingAccrued',\n          ])\n        )\n    );\n    return res;\n  });\n  return oracleSymbols.map((i, index) => { \n    liquidationPrices[index].underlier = i\n    return liquidationPrices[index]\n  })\n};","// this file is generated by script, don't modify it !!!\nimport { ERC20Factory, offChainOracleFactory} from \"../../shared/contract/factory.js\";\nimport {\n  toWei,\n  getLiquidity,\n  getProtocolFeeAccrued,\n  getLastTimestamp,\n  bg,\n  processResult,\n  deriToNatural,\n  getBlockInfo,\n  getHttpBase,\n  fetchJson,\n  toChecksumAddress,\n} from \"../../shared/utils/index.js\";\nimport { normalizeSymbolUnit, SECONDS_IN_A_DAY } from \"../../shared/config\";\nimport { getSymbolPrices } from '../../shared/utils/oracle'\nimport { getPriceInfos } from \"../utils.js\";\nimport { lTokenLiteFactory, pTokenLiteFactory } from \"./factory.js\";\nimport { calculateK, calculateDpmmPrice, calculateDpmmCost } from \"../calc\";\n\n\n// klass = addInstanceMethods(klass, [])\nconst addMethods = (klass, fns = []) => {\n  if (fns.length > 0) {\n    for (let i = 0; i < fns.length; i++) {\n      klass = fns[i](klass);\n    }\n    return klass;\n  } else {\n    return klass;\n  }\n};\nconst overrideMethods = (klass, fns = []) => {\n  if (fns.length > 0) {\n    for (let i = 0; i < fns.length; i++) {\n      const fn = fns[i][0]\n      const args = fns[i].slice(1)\n      // console.log(fn, args)\n      klass = fn(klass)(...args);\n    }\n    return klass;\n  } else {\n    return klass;\n  }\n};\n\nconst checkOffChainOracleSymbol = async (chainId, oracleAddress, symbol) => {\n  try {\n    await offChainOracleFactory(chainId, oracleAddress).signer()\n    return symbol\n  } catch (err) {\n  }\n  try {\n    await offChainOracleFactory(chainId, oracleAddress).signatory()\n    return symbol\n  } catch (err) {\n  }\n  return ''\n};\n\nconst processMethod = (klass) => (methodName, propList = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const res = await originMethod.apply(this, args);\n    return processResult(res, propList);\n  };\n  return klass;\n};\n\nconst processTxMethod = (klass) => (methodName, toWeiArgPositions = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const prices = await this._getSymbolPrices()\n    // console.log('prices', prices)\n    let newArgs = args.map((arg, index) =>\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\n    );\n    newArgs.push(prices)\n    return await originMethod.apply(this, newArgs);\n  };\n  return klass;\n};\n\nconst init = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype['init'] = async function (isEstimatedApi = false) {\n    await this._init();\n    if (!this.addresses || !this.activeSymbolIds) {\n      [this.addresses, this.parameters, this.state, this.fundingPeriod] = await Promise.all([\n        this.getAddresses(),\n        this.getParameters(),\n        this.getPoolStateValues(),\n        this.getFundingPeriod(),\n      ]);\n      this.fundingPeriod = parseInt(this.fundingPeriod);\n      // console.log(this.addresses, this.parameters)\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\n      this.bToken = ERC20Factory(this.chainId, bTokenAddress);\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\n\n      // init tokens\n      [this.bTokenSymbol ] = await Promise.all([\n        this.bToken.symbol(),\n      ]);\n      this.symbols = []\n      this.positions = []\n\n    }\n    // update symbols\n    // estimated for estimated* api use to disable async call\n    if (!isEstimatedApi) {\n      const symbolIds = await this.pToken.getActiveSymbolIds();\n      if (\n        !this.activeSymbolIds ||\n        this.activeSymbolIds.toString() !== symbolIds.toString()\n      ) {\n        this.poolLiquidity = await this.getPoolLiquidity();\n        this.activeSymbolIds = symbolIds;\n        this.symbols = await Promise.all(\n          this.activeSymbolIds.reduce(\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n            []\n          )\n        );\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\n        this.offChainOracleSymbolNames = await Promise.all(\n          this.symbols\n            .map((s) => s.oracleAddress)\n            .reduce(\n              (acc, o, index) => [\n                ...acc,\n                checkOffChainOracleSymbol(\n                  this.chainId,\n                  o,\n                  this.symbols[index].symbol\n                ),\n              ],\n              []\n            )\n        );\n        this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\n          (acc, i, index) => {\n            return this.offChainOracleSymbolNames[index] === ''\n              ? acc\n              : [...acc, i];\n          },\n          []\n        );\n        this.offChainOracleSymbolNames = this.offChainOracleSymbolNames.filter(\n          (s) => s && s !== ''\n        );\n        // console.log(\n        //   `${this.contractAddress} offchain`,\n        //   this.offChainOracleSymbolNames\n        // );\n      }\n    }\n  };\n  return klass;\n};\n\n// this.addresses\n// this.parameters\n\nconst getConfig = (klass) => {\n  klass.prototype[\"getConfig\"] = async function () {\n    await this.init()\n    return {\n      pool: this.contractAddress,\n      pToken: this.addresses.pTokenAddress,\n      lToken: this.addresses.lTokenAddress,\n      bToken: this.addresses.bTokenAddress,\n      // bTokenSymbol: this.bTokenSymbol,\n      bTokens: [\n        {\n          bTokenSymbol: this.bTokenSymbol,\n          bToken: this.addresses.bTokenAddress,\n        },\n      ],\n      symbols: this.symbols.map((s, index) => ({\n        symbolId: this.activeSymbolIds[index],\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      initialBlock: this.initialBlock,\n      type: \"future\",\n      version: \"v2_lite\",\n      versionId: \"v2_lite_dpmm\",\n      chainId: this.chainId,\n    };\n  };\n  return klass;\n};\n\n// getStateValues\nconst getStateValues = (klass) => {\n  klass.prototype[\"getStateValues\"] = async function () {\n    const res = await this.getPoolStateValues()\n    // update\n    this.state = { ...this.state, ...res}\n    return this.state\n  }\n  return klass\n}\n\n// getSymbol()\nconst getSymbols = (klass) => {\n  klass.prototype[\"getSymbols\"] = async function (symbolId) {\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\n    const symbols = await Promise.all(\n      symbolIds.reduce(\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n        []\n      )\n    );\n\n    // const indexPrices = await Promise.all(\n    //   symbols.map((s) => {\n    //     const oracleAddress = this.offChainOracleSymbolIds.includes(s.symbolId) ? '' : s.oracleAddress\n    //     return getOraclePriceFromCache2.get(this.chainId, s.symbol, oracleAddress)\n    //   })\n    // )\n\n    const indexPrices = await getSymbolPrices(\n      this.chainId,\n      symbols,\n      this.offChainOracleSymbolIds,\n      this.offChainOracleSymbolNames\n    );\n    //console.log('indexPrices', indexPrices);\n    symbols.forEach((s, index) => {\n      s.indexPrice = indexPrices[index]\n      s.K = calculateK(\n        s.indexPrice,\n        this.state.liquidity,\n        s.alpha\n      ).toString();\n      //console.log(s.K, s.indexPrice, s.tradersNetVolume, s.multiplier)\n      s.dpmmPrice = calculateDpmmPrice(\n        s.indexPrice,\n        s.K,\n        s.tradersNetVolume,\n        s.multiplier\n      ).toString();\n\n      const pnl = calculateDpmmCost(\n        s.indexPrice,\n        s.K,\n        s.tradersNetVolume,\n        s.multiplier,\n        bg(s.tradersNetVolume).negated().toString()\n      )\n        .negated()\n        .minus(s.tradersNetCost);\n      s.pnl = pnl.toString()\n      s.fundingPerSecond = bg(s.dpmmPrice).minus(s.indexPrice).times(s.multiplier).div(this.fundingPeriod).toString()\n      //s.fundingPerSecond = bg(s.dpmmPrice).minus(s.indexPrice).div(this.fundingPeriod).toString()\n      s.funding = bg(s.fundingPerSecond).times(SECONDS_IN_A_DAY).toString()\n    });\n\n    // update\n    if (symbolId) {\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\n      if (symbolIndex > -1) {\n        this.symbols[symbolIndex] = symbols[0]\n      }\n    } else {\n      this.symbols = symbols\n    }\n    \n    return symbols\n  };\n  return klass\n};\n\n// get traders positions\nconst getPositions = (klass) => {\n  klass.prototype[\"getPositions\"] = async function (account, symbolId) {\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\n    const positions = await Promise.all(\n      symbolIds.reduce(\n        (acc, symbolId) => [...acc, this.pToken.getPosition(account,symbolId)],\n        []\n      )\n    );\n    await this.getLastTimestamp()\n\n    const timeDiff = bg(Math.floor(Date.now() / 1000)).minus(\n      this.state.lastTimestamp\n    );\n    positions.forEach((p, index) => {\n      const symbol = this.symbols[index];\n      p.fundingAccrued = bg(p.volume)\n        .times(\n          bg(symbol.cumulativeFundingRate)\n            .plus(bg(timeDiff).times(this.symbols[index].fundingPerSecond))\n            .minus(p.lastCumulativeFundingRate)\n        )\n        .toString();\n      p.traderPnl = calculateDpmmCost(\n        symbol.indexPrice,\n        symbol.K,\n        symbol.tradersNetVolume,\n        symbol.multiplier,\n        bg(p.volume).negated().toString()\n      )\n        .negated()\n        .minus(p.cost).toString();\n\n      p.notional = bg(p.volume).abs().times(symbol.indexPrice).times(symbol.multiplier).toString()\n    });\n\n    // update\n    if (symbolId) {\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\n      if (symbolIndex > -1) {\n        this.positions[symbolIndex] = positions[0]\n      }\n    } else {\n      this.positions = positions\n    }\n\n    return positions\n  };\n  return klass\n};\n\n// check is updated\nconst isSymbolsUpdated = (klass) => {\n  klass.prototype['isSymbolsUpdated'] = function() {\n    return Array.isArray(this.symbols) && this.symbols.length > 0 && this.symbols[0].K != null\n  }\n  return klass\n}\nconst isPositionsUpdated = (klass) => {\n  klass.prototype['isPositionsUpdated'] = function() {\n    return Array.isArray(this.positions) && this.positions.length > 0 && this.positions[0].volume != null\n  }\n  return klass\n}\n\nconst getTraderLiquidity = (klass) => {\n  klass.prototype[\"getTraderLiquidity\"] = async function(account) {\n    return await this.lToken.balanceOf(account)\n  }\n  return klass\n}\n\n\nconst getDynamicEquity = (klass) => {\n  klass.prototype['getDynamicEquity'] = async function() {\n    if (!this.isSymbolsUpdated) {\n      await this.getSymbols()\n    }\n    //console.log(this.symbols)\n    const res = bg(this.state.liquidity)\n      .plus(\n        this.symbols.reduce(\n          (acc, s) =>\n          acc.minus(s.pnl),\n            // acc\n            //   .plus(s.tradersNetCost)\n            //   .minus(\n            //     bg(s.tradersNetVolume).times(s.dpmmPrice).times(s.multiplier)\n            //   ),\n          bg(0)\n        )\n      )\n      .toString();\n    this.state.dynamicEquity = res\n    return res\n  }\n  return klass\n}\n\nconst getPoolRequiredMargin = (klass) => {\n  klass.prototype['getPoolRequiredMargin'] = async function () {\n    if (!this.isSymbolsUpdated) {\n      await this.getSymbols()\n    }\n    const { poolMarginRatio } = this.parameters;\n    return this.symbols\n      .reduce(\n        (acc, s) =>\n          acc.plus(\n            bg(s.tradersNetVolume).times(s.indexPrice).times(s.multiplier).abs()\n          ),\n        bg(0)\n      )\n      .times(poolMarginRatio).toString()\n  };\n  return klass\n}\n\nconst getTraderMarginStatus = (klass) => {\n  klass.prototype['getTraderMarginStatus'] = async function (account) {\n    if (!this.isSymbolsUpdated) {\n      await this.getSymbols()\n    }\n    if (!this.isPositionsUpdated) {\n      await this.getPositions(account)\n    }\n    if (!this.margin) {\n      this.margin = await this.pToken.getMargin(account)\n    }\n    // console.log(this.positions)\n    // console.log(this.symbols)\n    const { initialMarginRatio } = this.parameters;\n    let dynamicMargin = bg(this.margin), requiredInitialMargin = bg(0)\n    for (let i = 0; i < this.activeSymbolIds.length; i++) {\n      const s = this.symbols[i];\n      const p = this.positions[i];\n      dynamicMargin = dynamicMargin.plus(\n        bg(p.volume).times(s.dpmmPrice).times(s.multiplier).minus(p.cost)\n      );\n      requiredInitialMargin = requiredInitialMargin.plus(\n        bg(p.volume)\n          .times(s.indexPrice)\n          .times(s.multiplier)\n          .abs()\n          .times(initialMarginRatio)\n      );\n    }\n    return [dynamicMargin.toString(), requiredInitialMargin.toString()];\n  };\n  return klass\n}\n\nconst formatTradeEvent = (klass) => {\n  klass.prototype['formatTradeEvent'] = async function (event) {\n    const info = event.returnValues;\n    const tradeVolume = deriToNatural(info.tradeVolume);\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\n    const symbolId = info.symbolId;\n    const index = this.activeSymbolIds.indexOf(symbolId);\n    if (index > -1) {\n      const symbol = this.symbols[index];\n      const tradeFee = info.tradeFee;\n\n      const direction =\n        tradeFee !== '-1'\n          ? bg(tradeVolume).gt(0)\n            ? 'LONG'\n            : 'SHORT'\n          : 'LIQUIDATION';\n      const price = bg(info.tradeCost)\n        .div(info.tradeVolume)\n        .div(symbol.multiplier)\n        .toString();\n      const notional = bg(tradeVolume)\n        .abs()\n        .times(price)\n        .times(symbol.multiplier)\n        .toString();\n\n      const res = {\n        symbolId: info.symbolId,\n        symbol: symbol.symbol,\n        trader: info.trader,\n        direction,\n        volume: bg(tradeVolume).abs().toString(),\n        price: price,\n        indexPrice: deriToNatural(info.indexPrice).toString(),\n        notional: notional,\n        transactionFee:\n          tradeFee === '-1' ? '0' : deriToNatural(tradeFee).toString(),\n        transactionHash: event.transactionHash,\n        time: block.timestamp * 1000,\n        extra: {},\n      };\n      return res;\n    } else {\n      return null;\n    }\n  };\n  return klass\n};\n\nconst _getSymbolPrices = (klass) => {\n  klass.prototype[\"_getSymbolPrices\"] = async function () {\n    await this.init()\n    let prices = []\n    if (this.offChainOracleSymbolIds.length > 0) {\n        const priceInfos = await getPriceInfos(this.chainId, this.offChainOracleSymbolNames);\n        prices = Object.values(priceInfos).reduce((acc, p, index) => {\n        acc.push([\n            this.offChainOracleSymbolIds[\n            this.offChainOracleSymbolNames.indexOf(Object.keys(priceInfos)[index])\n            ],\n            p.timestamp,\n            p.price,\n            parseInt(p.v).toString(),\n            p.r,\n            p.s,\n        ]);\n        return acc;\n        }, []);\n    }\n    return prices;\n  };\n  return klass;\n};\n\n\n// migration\nconst getPoolExtraInfo = (klass) => {\n  klass.prototype['getPoolExtraInfo'] = async function() {\n    const url = `${getHttpBase()}/pool_extra_info/${this.contractAddress}`;\n    const res = await fetchJson(url);\n    //console.log(res)\n    if (res.success) {\n      return res.data;\n    } else {\n      console.log(`-- getInitialBlock(): ${url} => ${res.message}`);\n      return {\n        chain_id: this.chainId,\n        pool: this.contractAddress,\n        block_number: '1000000000',\n        version: '',\n        target_pool:'',\n        migration_timestamp: ''\n      };\n    }\n  }\n  return klass\n}\n\nconst isMigrationPrepared = (klass) => {\n  klass.prototype['isMigrationPrepared'] = async function() {\n    const res = await this.migrationDestination();\n    return res !== '0x0000000000000000000000000000000000000000';\n  }\n  return klass\n}\nconst isMigrationApproved = (klass) => {\n  klass.prototype['isMigrationApproved'] = async function() {\n    const poolAddress = toChecksumAddress(await this.pToken.pool());\n    return poolAddress !== toChecksumAddress(this.contractAddress);\n  }\n  return klass\n}\n\nconst getOpenzoneConfig = (klass) => {\n  klass.prototype['getOpenzoneConfig'] = async function () {\n    await this.init();\n    const [\n      extraInfo,\n      isMigrationPrepared,\n      isMigrationApproved,\n    ] = await Promise.all([\n      this.getPoolExtraInfo(),\n      this.isMigrationPrepared(),\n      this.isMigrationApproved(),\n    ]);\n    const hasMigration = false;\n    return {\n      pool: this.contractAddress,\n      targetPool: extraInfo.target_pool || '',\n      migrationTimestamp: extraInfo.migration_timestamp || '',\n      pToken: this.addresses.pTokenAddress,\n      lToken: this.addresses.lTokenAddress,\n      bToken: this.addresses.bTokenAddress,\n      bTokenSymbol: this.bTokenSymbol,\n      symbols: this.symbols.map((s, index) => ({\n        symbolId: this.activeSymbolIds[index],\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      initialBlock: extraInfo.block_number || '',\n      type: 'perpetual',\n      version: extraInfo.version || '',\n      versionId: \"v2_lite_dpmm\",\n      chainId: this.chainId,\n      hasMigration,\n      isMigrationPrepared: hasMigration && isMigrationPrepared,\n      isMigrationApproved: hasMigration && isMigrationApproved,\n      isValid:\n        (!hasMigration && !isMigrationApproved),\n    };\n  };\n  return klass;\n};\n\n// reduce request for rest api\nconst getOpenzoneConfigAlt = (klass) => {\n  klass.prototype['getOpenzoneConfigAlt'] = async function () {\n    await this.init();\n    const [\n      isMigrationPrepared,\n      isMigrationApproved,\n    ] = await Promise.all([\n      this.isMigrationPrepared(),\n      this.isMigrationApproved(),\n    ]);\n    const hasMigration = false;\n    return {\n      pool: this.contractAddress,\n      //targetPool: extraInfo.targetPool ? extraInfo.targetPool : '',\n      pToken: this.addresses.pTokenAddress,\n      lToken: this.addresses.lTokenAddress,\n      bToken: this.addresses.bTokenAddress,\n      bTokenSymbol: this.bTokenSymbol,\n      symbols: this.symbols.map((s, index) => ({\n        symbolId: this.activeSymbolIds[index],\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      //initialBlock: extraInfo.block_number,\n      type: 'perpetual',\n      //version: extraInfo.version,\n      versionId: \"v2_lite_dpmm\",\n      chainId: this.chainId,\n      hasMigration,\n      isMigrationPrepared: hasMigration && isMigrationPrepared,\n      isMigrationApproved: hasMigration && isMigrationApproved,\n      isValid:\n        (!hasMigration && !isMigrationApproved),\n    };\n  };\n  return klass;\n};\n\n\nexport const perpetualPoolLiteAdapter = (klass) => {\n  //klass = processMethod(klass, \"getFundingPeriod\")\n\n  klass = addMethods(klass, [\n    init,\n\n    getConfig,\n    getLiquidity,\n    getLastTimestamp,\n    getProtocolFeeAccrued,\n    getStateValues,\n    getSymbols,\n    getPositions,\n    getDynamicEquity,\n    getPoolRequiredMargin,\n    getTraderMarginStatus,\n    isSymbolsUpdated,\n    isPositionsUpdated,\n    getTraderLiquidity,\n    formatTradeEvent,\n    _getSymbolPrices,\n\n    getPoolExtraInfo,\n    isMigrationPrepared,\n    isMigrationApproved,\n    getOpenzoneConfig,\n    getOpenzoneConfigAlt,\n  ]);\n\n  klass = overrideMethods(klass, [\n    [\n      processMethod,\n      'getParameters',\n      [\n        'poolMarginRatio',\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'minLiquidationReward',\n        'maxLiquidationReward',\n        'liquidationCutRatio',\n        'protocolFeeCollectRatio',\n      ],\n    ],\n    [processMethod, 'getPoolStateValues', ['liquidity', 'protocolFeeAccrued']],\n    [processMethod, 'getFundingPeriod'],\n    [\n      processMethod,\n      'getSymbol',\n      [\n        'multiplier',\n        'feeRatio',\n        'fundingRateCoefficient',\n        'price',\n        'alpha',\n        'cumulativeFundingRate',\n        'tradersNetVolume',\n        'tradersNetCost',\n      ],\n    ],\n  ]);\n\n  klass = overrideMethods(klass, [\n    [processTxMethod, 'addLiquidity', ['1']],\n    [processTxMethod, 'removeLiquidity', ['1']],\n    [processTxMethod, 'addMargin', ['1']],\n    [processTxMethod, 'removeMargin', ['1']],\n    [processTxMethod, 'trade', ['2']],\n  ]);\n\n  return klass;\n};\n\nexport const lTokenLiteAdapter = (klass) => {\n  return overrideMethods(klass, [\n    [processMethod, 'balanceOf'],\n    [processMethod, 'totalSupply'],\n  ]);\n};\n\nexport const pTokenLiteAdapter = (klass) => {\n  return overrideMethods(klass, [\n    [processMethod, 'getMargin'],\n    [\n      processMethod,\n      'getPosition',\n      ['volume', 'cost', 'lastCumulativeFundingRate'],\n    ],\n  ]);\n};\n\nexport const perpetualPoolLiteManagerAdapter = (klass) => {\n    // klass = processMethod(klass, 'symbol', []);\n    return klass\n}\n\n","/* eslint-disable */\nexport const everlastingOptionAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"lp\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"lp\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"trader\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"indexPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeFee\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"pTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const everlastingOptionViewerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"theoreticalPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetPosition\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" } ], \"name\": \"_calculateDpmmPrice\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"changePercent\", \"type\": \"int256\" } ], \"name\": \"_calculateOptionValueChange\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"change\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spot\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strike\", \"type\": \"int256\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" } ], \"name\": \"_getDynamicInitialMarginRatio\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"_getTraderPortfolio\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"_initState\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"str\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"start\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"end\", \"type\": \"uint256\" } ], \"name\": \"_slice\", \"outputs\": [ { \"internalType\": \"bytes\", \"name\": \"\", \"type\": \"bytes\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolFundingRates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolPrices\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderFunding\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderMargins\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getPoolStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getPriceOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getTraderStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getVolatilityOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const lTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const pTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate2\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"addSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getActiveSymbolIds\", \"outputs\": [ { \"internalType\": \"uint256[]\", \"name\": \"\", \"type\": \"uint256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getNumPositionHolders\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getTokenId\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"isActiveSymbolId\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const everlastingOptionOldAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n/* eslint-enable */","import { ContractBase } from '../../shared/contract';\nimport { deleteIndexedKey, fromWeiForObject } from '../../shared/utils';\nimport { everlastingOptionViewerAbi } from './abis';\n\nexport class EverlastingOptionViewer extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, everlastingOptionViewerAbi);\n  }\n\n  // query\n  async _getTraderPortfolio(state, account) {\n    const res = await this._call('_getTraderPortfolio', [state, account]);\n    return res;\n  }\n  async _initState(poolAddress, oraclePrices) {\n    const res = await this._call('_initState', [poolAddress, oraclePrices]);\n    return res;\n  }\n  async _updateSymbolPrices(state) {\n    const res = await this._call('_updateSymbolPrices', [state]);\n    return res;\n  }\n  async getPoolStates(poolAddress, oraclePrices, oracleVolatilities) {\n    const res = await this._call('getPoolStates', [poolAddress, oraclePrices, oracleVolatilities]);\n    const symbolState = res[2].reduce((acc, i) => {\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\n        'multiplier',\n        'strikePrice',\n        'spotPrice',\n        'dpmmPrice',\n        'dynamicMarginRatio',\n        'intrinsicValue',\n        'timeValue',\n        'delta',\n        'alpha',\n        'K',\n        'tradersNetVolume',\n        'tradersNetCost',\n        //'cumulativeDeltaFundingRate',\n        'cumulativeFundingRate',\n        //'deltaFundingPerSecond',\n        'fundingPerSecond',\n        'volatility',\n      ]);\n      return acc.concat([symbol])\n    }, [])\n    return {\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'fundingPeriod',\n        'fundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      symbolState,\n    };\n  }\n  async getTraderStates(poolAddress, account, oraclePrices, oracleVolatilities) {\n    const res = await this._call('getTraderStates', [\n      poolAddress,\n      account,\n      oraclePrices,\n      oracleVolatilities,\n    ]);\n    const symbolState = res[2].reduce((acc, i) => {\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\n        'multiplier',\n        'strikePrice',\n        'spotPrice',\n        'dpmmPrice',\n        'dynamicMarginRatio',\n        'intrinsicValue',\n        'timeValue',\n        'delta',\n        'alpha',\n        'K',\n        'tradersNetVolume',\n        'tradersNetCost',\n        'cumulativeFundingRate',\n        //'deltaFundingPerSecond',\n        'fundingPerSecond',\n        'volatility',\n      ]);\n      return acc.concat([symbol])\n    }, [])\n    const positionState = res[3].reduce((acc, i) => {\n      const position = fromWeiForObject(deleteIndexedKey(i), [\n        'volume',\n        'cost',\n        'pnl',\n        //'lastCumulativeDeltaFundingRate',\n        'lastCumulativeFundingRate',\n        //'deltaFundingAccrued',\n        'fundingAccrued',\n      ])\n      return acc.concat([position])\n    }, [])\n    return {\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'fundingPeriod',\n        'fundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      traderState: fromWeiForObject(deleteIndexedKey(res[1]), [\n        'margin',\n        'totalPnl',\n        'totalFundingAccrued',\n        'dynamicMargin',\n        'initialMargin',\n        'maintenanceMargin',\n      ]),\n      symbolState: symbolState,\n      positionState: positionState,\n    };\n  }\n  async getVolatilityOracles(poolAddress) {\n    const res = await this._call('getVolatilityOracles', [poolAddress]);\n    return res;\n  }\n  async getPriceOracles(poolAddress) {\n    const res = await this._call('getPriceOracles', [poolAddress]);\n    return res;\n  }\n\n  // tx\n}\n","import { ContractBase } from '../../shared/contract';\nimport { fromWei } from '../../shared/utils';\nimport { lTokenOptionAbi } from './abis.js';\n\nexport class LTokenOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenOptionAbi);\n  }\n\n  // query\n  // async allowance(owner, spender) {\n  //   const res = await this._call('allowance', [owner, spender])\n  //   return res\n  // }\n  async balanceOf(account) {\n    const res = await this._call('balanceOf', [account]);\n    return fromWei(res);\n  }\n  async name() {\n    const res = await this._call('name', []);\n    return res;\n  }\n  async pool() {\n    const res = await this._call('pool', []);\n    return res;\n  }\n  async symbol() {\n    const res = await this._call('symbol', []);\n    return res;\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', []);\n    return fromWei(res);\n  }\n\n  // tx\n  // async approve(accountAddress, spender, amount) {\n  //   return await this._transact('approve', [spender, amount], accountAddress)\n  // }\n  // async transfer(accountAddress, to, amount) {\n  //   return await this._transact('transfer', [to, amount], accountAddress)\n  // }\n  // async transferFrom(accountAddress, from, to, amount) {\n  //   return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  // }\n}\n","import { ContractBase } from '../../shared/contract';\nimport { fromWei } from '../../shared/utils';\nimport { pTokenOptionAbi } from './abis.js'\n\nexport class PTokenOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenOptionAbi)\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return res\n  }\n  async exists(owner) {\n    const res = await this._call('exists', [owner])\n    return res\n  }\n  async getActiveSymbolIds() {\n    const res = await this._call('getActiveSymbolIds', [])\n    return res\n  }\n  async getApproved(tokenId) {\n    const res = await this._call('getApproved', [tokenId])\n    return res\n  }\n  async getMargin(owner) {\n    const res = await this._call('getMargin', [owner])\n    return fromWei(res)\n  }\n  async getNumPositionHolders(symbolId) {\n    const res = await this._call('getNumPositionHolders', [symbolId])\n    return res\n  }\n  async getPosition(owner, symbolId) {\n    const res = await this._call('getPosition', [owner, symbolId])\n    return {\n      volume: fromWei(res[0]),\n      cost: fromWei(res[1]),\n      lastCumulativePremiumFundingRate: fromWei(res[2]),\n    };\n }\n  async getTokenId(owner) {\n    const res = await this._call('getTokenId', [owner])\n    return res\n  }\n  async isActiveSymbolId(symbolId) {\n    const res = await this._call('isActiveSymbolId', [symbolId])\n    return res\n  }\n  async isApprovedForAll(owner, operator) {\n    const res = await this._call('isApprovedForAll', [owner, operator])\n    return res\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return res\n  }\n  async ownerOf(tokenId) {\n    const res = await this._call('ownerOf', [tokenId])\n    return res\n  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return res\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return res\n  }\n  async totalMinted() {\n    const res = await this._call('totalMinted', [])\n    return res\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return res\n  }\n\n  // tx\n  async addMargin(accountAddress, owner, delta) {\n    return await this._transact('addMargin', [owner, delta], accountAddress)\n  }\n  async updateMargin(accountAddress, owner, margin) {\n    return await this._transact('updateMargin', [owner, margin], accountAddress)\n  }\n  async updatePosition(accountAddress, owner, symbolId, position) {\n    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\n  }\n\n  // async approve(accountAddress, operator, tokenId) {\n  //   return await this._transact('approve', [operator, tokenId], accountAddress)\n  // }\n  // async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  // }\n  // async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  // }\n  // async setApprovalForAll(accountAddress, operator, approved) {\n  //   return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  // }\n  // async toggleCloseOnly(accountAddress, symbolId) {\n  //   return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\n  // }\n  // async transferFrom(accountAddress, from, to, tokenId) {\n  //   return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  // }\n}","import { ContractBase } from '../../shared/contract';\nimport { fromWei } from '../../shared/utils';\n\nexport const optionPricerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValue\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValueAndDelta\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" } ]\n\nexport class OptionPricer extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, optionPricerAbi)\n  }\n\n  async getEverlastingTimeValueAndDelta(S, K, V, T) {\n    const res = await this._call('getEverlastingTimeValueAndDelta', [S, K, V, T])\n    return {\n      timeValue: fromWei(res.timeValue),\n      delta: fromWei(res.delta),\n    };\n  }\n}","import { factory } from '../../shared/utils';\nimport { EverlastingOptionViewer } from '../contract/everlasting_option_viewer';\nimport { LTokenOption } from '../contract/l_token_option';\nimport { PTokenOption } from '../contract/p_token_option';\nimport { OptionPricer } from '../contract/option_pricer';\n\nexport const everlastingOptionViewerFactory = factory(EverlastingOptionViewer);\nexport const lTokenOptionFactory = factory(LTokenOption);\nexport const pTokenOptionFactory = factory(PTokenOption);\nexport const optionPricerFactory = factory(OptionPricer);","import { getOracleVolatilitiesForOption } from \"../shared/utils/oracle\"\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n\nexport const volatilitiesCache = (function() {\n  const cache = {}\n  const pending = {}\n  return {\n    async get(symbols=['BTCUSD']){\n      const key = symbols.join('_')\n      if (\n        !Object.keys(cache).includes(key) ||\n        Math.floor(Date.now() / 1000) - cache[key].timestamp > 30\n      ) {\n        const timestamp = Math.floor(Date.now() / 1000);\n        // pending is exit\n        if (Object.keys(pending).includes(key)) {\n          let retry = 10;\n          while (retry > 0) {\n            await delay(390);\n            if (!Object.keys(pending).includes(key)) {\n              //console.log('hit pending with cache');\n              return cache[key].data;\n            }\n          }\n          if (retry === 0) {\n            //console.log('hit pending expired');\n            const data = await getOracleVolatilitiesForOption(symbols);\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          }\n        } else {\n          pending[key] = true;\n          try {\n            //console.log('hit new');\n            const data = await getOracleVolatilitiesForOption(symbols);\n            //console.log('data', data)\n            cache[key] = {\n              data,\n              timestamp,\n            };\n            return cache[key].data;\n          } catch (err) {\n          } finally {\n            delete pending[key];\n          }\n        }\n      } else {\n        //console.log('hit cache');\n        return cache[key].data;\n      }\n    }\n  }\n})()\n\n// export const volatilityCache = (function() {\n//   const cache = {}\n//   return {\n//     async get(symbol){\n//       const key = symbol\n//       if (!Object.keys(cache).includes(key) || (Math.floor(Date.now()/1000) - cache[key].timestamp > 30)) {\n//         const timestamp = Math.floor(Date.now()/1000)\n//         const res = await getPriceInfo(symbol, 'option')\n//         const data = deriToNatural(res.volatility).toString()\n//         cache[key] = {\n//           data,\n//           timestamp,\n//         }\n//         //console.log('new key')\n//         return cache[key].data\n//       } else {\n//         return cache[key].data\n//       }\n//     }\n//   }\n// })()\n\n// export const volatilitiesCache2 = async (symbols) => {\n//   return await Promise.all(\n//     symbols.reduce((acc, s) => acc.concat(volatilityCache.get(s)), [])\n//   )\n// }\n","import { ContractBase } from '../../shared/contract';\nimport {\n  deleteIndexedKey,\n  fromWeiForObject,\n  fromWei,\n  toWei,\n  naturalToDeri,\n  getBlockInfo,\n  deriToNatural,\n  bg,\n  max,\n } from '../../shared/utils';\nimport { getVolatilitySymbols, normalizeOptionSymbol } from '../../shared/config/token';\nimport { getPoolViewerConfig } from '../../shared/config/pool';\nimport { chainlinkOracleFactory, ERC20Factory\n } from '../../shared/contract/factory';\nimport { getOracleVolatilitiesForOption } from '../../shared/utils/oracle';\nimport {\n  everlastingOptionViewerFactory,\n  lTokenOptionFactory,\n  optionPricerFactory,\n  pTokenOptionFactory,\n} from '../factory/tokens';\nimport { volatilitiesCache } from '../utils';\nimport { everlastingOptionAbi } from './abis.js';\n\nconst SECONDS_IN_A_DAY = 60 * 60 * 24\nconst _calculateDpmmPrice = (\n  indexPrice,\n  theoreticalPrice,\n  delta,\n  alpha,\n  tradersNetPosition,\n  liquidity\n) => {\n  let K = \"0\", dpmmPrice = \"0\";\n  if (bg(liquidity).gt(0)) {\n    K = bg(indexPrice)\n      .times(indexPrice)\n      .div(theoreticalPrice)\n      .times(bg(delta).abs())\n      .times(alpha)\n      .div(liquidity);\n  } \n  dpmmPrice = theoreticalPrice.times(\n    bg(1).plus(bg(K).times(tradersNetPosition))\n  );\n  return [K, dpmmPrice];\n};\n\nconst _queryTradeDpmm = (\n  tradersNetPosition,\n  theoreticalPrice,\n  tradePosition,\n  K\n) => {\n  const r = bg(tradersNetPosition)\n    .plus(tradePosition)\n    .pow(2)\n    .minus(bg(tradersNetPosition).pow(2))\n    .times(K)\n    .div(2)\n    .plus(bg(tradePosition));\n  return bg(theoreticalPrice).times(r);\n};\n\nexport class EverlastingOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, everlastingOptionAbi);\n\n    // this.config = getPoolConfig(\n    //   contractAddress,\n    //   undefined,\n    //   undefined,\n    //   'option'\n    // );\n    // this.offchainSymbolIds = this.config.offchainSymbolIds;\n    // this.offchainSymbols = this.config.offchainSymbols;\n    // this.volatilitySymbols = this.config.volatilitySymbols;\n    // this.bTokenAddress = this.config.bToken;\n    // this.lTokenAddress = this.config.lToken;\n    // this.pTokenAddress = this.config.pToken;\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'option');\n  }\n  async init(usedByEstimatedApi = false) {\n    await this._init();\n    if (!this.addresses || !this.pToken) {\n      [this.addresses, this.parameters] = await Promise.all([\n        this.getAddresses(),\n        this.getParameters(),\n      ]);\n      //console.log(this.addresses, this.parameters, this.state)\n      const {\n        pTokenAddress,\n        lTokenAddress,\n        optionPricerAddress,\n        bTokenAddress,\n      } = this.addresses;\n      this.lToken = lTokenOptionFactory(this.chainId, lTokenAddress);\n      this.pToken = pTokenOptionFactory(this.chainId, pTokenAddress);\n      this.pricer = optionPricerFactory(this.chainId, optionPricerAddress);\n      this.bToken = ERC20Factory(this.chainId, bTokenAddress);\n      this.viewer = everlastingOptionViewerFactory(\n        this.chainId,\n        this.viewerAddress\n      );\n      this.bTokenSymbol = await this.bToken.symbol();\n      this.fundingPeriod = bg(1).div(365).toString();\n      this.fundingCoefficient = bg(1).div(24).div(3600).toString();\n    }\n    if (!usedByEstimatedApi) {\n      const symbolIds = await this.pToken.getActiveSymbolIds();\n      if (\n        !this.activeSymbolIds ||\n        this.activeSymbolIds.toString() !== symbolIds.toString()\n      ) {\n        this.activeSymbolIds = symbolIds;\n\n        this.symbols = await Promise.all(\n          this.activeSymbolIds.reduce(\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n            []\n          )\n        );\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\n        const ttt = await volatilitiesCache.get(this.activeSymbolNames)\n        const symbolVolatilities = ttt.map((v) => v.volatility);\n        const state = await this.viewer.getPoolStates(\n          this.contractAddress,\n          [],\n          symbolVolatilities\n        );\n        const { symbolState } = state;\n\n        // update state\n        //this.activeSymbolIds = activeSymbolIds;\n        this.activeSymbols = symbolState.filter((s) =>\n          this.activeSymbolIds.includes(s.symbolId)\n        );\n        // for tx use\n        this.volatilitySymbols = getVolatilitySymbols(\n          this.symbols.map((s) => s.symbol)\n        );\n      }\n      this.state = await this.getPoolStateValues();\n      this.state.preTimestamp = this.state.lastTimestamp;\n      this.state.curTimestamp = Math.floor(Date.now() / 1000).toString();\n      this.userState = {}\n    }\n  }\n\n  // query\n  // async OptionPricer() {\n  //   const res = await this._call('OptionPricer', []);\n  //   return res;\n  // }\n  // async PmmPricer() {\n  //   const res = await this._call('PmmPricer', []);\n  //   return res;\n  // }\n  // async _T() {\n  //   const res = await this._call('_T', []);\n  //   return fromWei(res);\n  // }\n  async getAddresses() {\n    const res = await this._call('getAddresses', []);\n    return deleteIndexedKey(res);\n  }\n  async getLastTimestamp() {\n    const res = await this._call('getPoolStateValues', []);\n    return res[1];\n  }\n  async getLiquidity() {\n    const res = await this._call('getPoolStateValues', []);\n    return fromWei(res[0]);\n  }\n  async getPoolStateValues() {\n    const res = await this._call('getPoolStateValues', []);\n    return {\n      liquidity: fromWei(res[0]),\n      lastTimestamp: res[1],\n      protocolFeeAccrued: fromWei(res[2]),\n    };\n  }\n  async getParameters() {\n    const res = await this._call('getParameters', []);\n    return fromWeiForObject(deleteIndexedKey(res), [\n      'initialMarginRatio',\n      'liquidationCutRatio',\n      'maintenanceMarginRatio',\n      'maxLiquidationReward',\n      'minLiquidationReward',\n      'minPoolMarginRatio',\n      'protocolFeeCollectRatio',\n    ]);\n  }\n  // async getProtocolFeeAccrued() {\n  //   const res = await this._call('getPoolStateValues', []);\n  //   return fromWei(res[2])\n  // }\n\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId]);\n    return fromWeiForObject(deleteIndexedKey(res), [\n      'strikePrice',\n      'multiplier',\n      'feeRatioITM',\n      'feeRatioOTM',\n      'alpha',\n      'tradersNetVolume',\n      'tradersNetCost',\n      'cumulativeFundingRate',\n    ]);\n  }\n  async getSymbols(volatilities = []) {\n    const symbols = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, i) => acc.concat([this.getSymbol(i)]),\n        []\n      )\n    );\n    const symbolIndexPrices = await Promise.all(\n      symbols.reduce(\n        (acc, s) => [\n          ...acc,\n          chainlinkOracleFactory(this.chainId, s.oracleAddress).getPrice(),\n        ],\n        []\n      )\n    );\n    if (volatilities.length !== this.activeSymbolIds.length) {\n      // volatilities = await Promise.all(\n      //   symbols.reduce(\n      //     (acc, s) => [\n      //       ...acc,\n      //       offChainVolatilityOracleFactory(\n      //         this.chainId,\n      //         s.volatilityAddress\n      //       ).volatility(),\n      //     ],\n      //     []\n      //   )\n      // );\n      volatilities = (\n        await volatilitiesCache.get(this.activeSymbolNames)\n      ).map((v) => deriToNatural(v.volatility).toString());\n    }\n    const timeValues = await Promise.all(\n      symbols.reduce(\n        (acc, s, index) => [\n          ...acc,\n          this.pricer.getEverlastingTimeValueAndDelta(\n            toWei(symbolIndexPrices[index]),\n            toWei(s.strikePrice),\n            toWei(volatilities[index]),\n            toWei(this.fundingPeriod)\n          ),\n        ],\n        []\n      )\n    );\n    let dynamicEquity = this.state.liquidity;\n    for (let i = 0; i < symbols.length; i++) {\n      const s = symbols[i];\n      s.tradersNetPosition = bg(s.tradersNetVolume)\n        .times(s.multiplier)\n        .toString();\n      s.indexPrice = symbolIndexPrices[i];\n      s.volatility = volatilities[i];\n      s.intrinsicValue = s.isCall\n        ? max(bg(s.indexPrice).minus(s.strikePrice), 0).toString()\n        : max(bg(s.strikePrice).minus(s.indexPrice), 0).toString();\n      s.timeValue = timeValues[i].timeValue;\n      s.theoreticalPrice = bg(s.intrinsicValue).plus(s.timeValue).toString();\n      s.delta = timeValues[i].delta;\n      if (bg(s.intrinsicValue).gt(0)) {\n        if (s.isCall) {\n          s.delta = bg(s.delta).plus(1).toString();\n        } else {\n          s.delta = bg(s.delta).minus(1).toString();\n        }\n      } else if (bg(s.indexPrice).eq(s.strikePrice)) {\n        s.delta = bg(1).div(2).toString();\n      }\n      const [K, dpmmPrice] = _calculateDpmmPrice(\n        s.indexPrice,\n        bg(s.intrinsicValue).plus(s.timeValue),\n        s.delta,\n        s.alpha,\n        bg(s.tradersNetVolume).times(s.multiplier),\n        this.state.liquidity\n      );\n      s.K = K.toString();\n      s.dpmmPrice = dpmmPrice.toString();\n      const cost = _queryTradeDpmm(\n        s.tradersNetPosition,\n        s.theoreticalPrice,\n        bg(s.tradersNetPosition).negated().toString(),\n        s.K\n      ).negated();\n      s.pnl = cost.minus(s.tradersNetCost).toString();\n      dynamicEquity = bg(dynamicEquity).minus(s.pnl).toString();\n      s.fundingPerSecond = bg(s.dpmmPrice)\n        .minus(s.intrinsicValue)\n        .times(s.multiplier)\n        .times(this.fundingCoefficient)\n        .toString();\n      s.fundingPerVolume = bg(s.fundingPerSecond).times(SECONDS_IN_A_DAY).toString()\n      s.funding = bg(s.fundingPerVolume).div(s.multiplier).toString()\n      const offset2 = bg(s.fundingPerSecond).times(\n        bg(this.state.curTimestamp).minus(this.state.preTimestamp)\n      );\n      // console.log('offset2', offset2.toString())\n      s.cumulativeFundingRate = bg(s.cumulativeFundingRate).plus(offset2).toString()\n    }\n\n    this.state.dynamicEquity = dynamicEquity;\n    this.symbols = symbols\n\n    return symbols;\n  }\n\n  async getPositions(accountAddress) {\n    const positions = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, symbolId) => [...acc, this.pToken.getPosition(accountAddress, symbolId)],\n        []\n      )\n    );\n    let totalPnl = '0', totalFundingAccrued = '0'\n    for (let i = 0; i < positions.length; i++) {\n      // const cost = bg(positions[i].volume).times(this.symbols[i].dpmmPrice).times(this.symbols[i].multiplier).toString()\n      const cost = _queryTradeDpmm(\n        this.symbols[i].tradersNetPosition,\n        this.symbols[i].theoreticalPrice,\n        bg(positions[i].volume)\n          .times(this.symbols[i].multiplier)\n          .negated()\n          .toString(),\n        this.symbols[i].K\n      )\n        .negated()\n        .toString();\n      positions[i].pnl = bg(cost).minus(positions[i].cost).toString();\n      positions[i].fundingAccrued = bg(positions[i].volume)\n        .times(\n          bg(this.symbols[i].cumulativeFundingRate).minus(\n            positions[i].lastCumulativePremiumFundingRate\n          )\n        )\n        .toString();\n      totalPnl = bg(totalPnl).plus(positions[i].pnl).toString()\n      totalFundingAccrued = bg(totalFundingAccrued).plus(positions[i].fundingAccrued).toString()\n    }\n    this.userState.totalPnl = totalPnl\n    this.userState.totalFundingAccrued = totalFundingAccrued\n    this.positions = positions\n\n    return positions\n  }\n\n  // tx\n  async _getVolSymbolPrices() {\n    await this._init();\n    let volatilities = [];\n    let oracleSymbols = [];\n    if (this.volatilitySymbols.length > 0) {\n      const volatilityInfos = await getOracleVolatilitiesForOption(\n        this.activeSymbols.map((s) => s.symbol)\n      );\n      volatilities = Object.values(volatilityInfos).reduce((acc, p, index) => {\n        const oracleSymbol = normalizeOptionSymbol(\n          this.activeSymbolNames[index]\n        );\n        if (!oracleSymbols.includes(oracleSymbol)) {\n          oracleSymbols.push(oracleSymbol);\n          acc.push([\n            this.activeSymbolIds[index],\n            p.timestamp,\n            p.volatility,\n            parseInt(p.v).toString(),\n            p.r,\n            p.s,\n          ]);\n        }\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return volatilities;\n  }\n\n  async addLiquidity(accountAddress, bAmount) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(bAmount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, lShares) {\n    const prices = await this._getVolSymbolPrices();\n    let amount = naturalToDeri(lShares);\n    return await this._transact(\n      'removeLiquidity',\n      [amount, prices],\n      accountAddress\n    );\n  }\n  async addMargin(accountAddress, bAmount) {\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(bAmount)],\n      accountAddress\n    );\n  }\n  async removeMargin(accountAddress, bAmount) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(bAmount), prices],\n      accountAddress\n    );\n  }\n  async trade(accountAddress, symbolId, tradeVolume) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(tradeVolume), prices],\n      accountAddress\n    );\n  }\n\n  // trade history\n  async formatTradeEvent(event) {\n    const info = event.returnValues;\n    const tradeVolume = deriToNatural(info.tradeVolume).toString();\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\n    const symbolId = info.symbolId;\n    const indexPrice = deriToNatural(info.indexPrice).toString();\n    const index = this.activeSymbolIds.indexOf(symbolId);\n    if (index > -1) {\n      const symbol = this.symbols[index];\n      const tradeFee = info.tradeFee;\n\n      const direction =\n        tradeFee !== '-1'\n          ? bg(tradeVolume).gt(0)\n            ? 'LONG'\n            : 'SHORT'\n          : 'LIQUIDATION';\n      const price = bg(info.tradeCost)\n        .div(info.tradeVolume)\n        .div(symbol.multiplier)\n        .toString();\n      const notional = bg(tradeVolume)\n        .abs()\n        .times(indexPrice)\n        .times(symbol.multiplier)\n        .toString();\n      const contractValue = bg(tradeVolume)\n        .abs()\n        .times(price)\n        .times(symbol.multiplier)\n        .toString();\n\n      const res = {\n        symbolId: info.symbolId,\n        symbol: symbol.symbol,\n        trader: info.trader,\n        direction,\n        volume: bg(tradeVolume).abs().toString(),\n        price,\n        indexPrice,\n        notional,\n        contractValue,\n        transactionFee:\n          tradeFee === '-1' ? '0' : deriToNatural(tradeFee).toString(),\n        transactionHash: event.transactionHash,\n        time: block.timestamp * 1000,\n        extra: {},\n      };\n      //console.log(JSON.stringify(res));\n      return res;\n    } else {\n      return null;\n    }\n  }\n}\n","import { factory } from '../../shared/utils';\nimport { EverlastingOption } from '../contract/everlasting_option';\n\nexport const everlastingOptionFactory = factory(EverlastingOption);","import {\n  bg,\n  max,\n  catchApiError,\n  fromWei,\n} from '../../shared/utils';\nimport { fundingRateCache } from '../../shared/api/api_globals';\nimport { wrappedOracleFactory } from '../../shared/factory/oracle';\nimport { queryTradePMM } from '../calculation/PMM2';\nimport {\n  dynamicInitialMarginRatio,\n  dynamicInitialPoolMarginRatio,\n  getAverageEntryPrice,\n  //getDeltaFundingPerSecond,\n  getLiquidationPrice,\n  getLiquidationPrices,\n  getMarginHeldBySymbol,\n} from '../calculation/trade';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport { volatilitiesCache } from '../utils';\nimport { getIndexInfo } from '../../shared/config/token';\nimport {\n  checkApiInput,\n  checkApiInputWithoutAccount,\n  checkTokenId,\n} from '../../shared/config';\n\n//\nconst SECONDS_IN_A_DAY = 86400;\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(chainId, poolAddress)\n      symbolId = checkTokenId(symbolId);\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init();\n      const [symbolInfo2, poolInfo2] = await Promise.all([\n        optionPool.getSymbol(symbolId),\n        optionPool.getParameters(),\n      ]);\n\n      const symbols = optionPool.symbols\n      const symbolVolatilities = await volatilitiesCache.get(\n        symbols.map((s) => s.symbol)\n      );\n      const state = await optionPool.viewer.getPoolStates(\n        poolAddress,\n        [],\n        symbolVolatilities.map((v) => v.volatility)\n      );\n      const { symbolState } = state;\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\n      const symbolInfo = symbolState[symbolIndex];\n      const { dynamicMarginRatio, isCall } =\n        symbolInfo;\n      const { symbol, multiplier, feeRatioOTM, feeRatioITM } = symbolInfo2;\n      const {\n        initialMarginRatio,\n        maintenanceMarginRatio,\n        minLiquidationReward,\n        maxLiquidationReward,\n        liquidationCutRatio,\n        protocolFeeCollectRatio,\n      } = poolInfo2;\n\n      return {\n        symbol,\n        bTokenSymbol: optionPool.bTokenSymbol,\n        multiplier: multiplier.toString(),\n        feeRatioOTM: feeRatioOTM.toString(),\n        feeRatioITM: feeRatioITM.toString(),\n        //minPoolMarginRatio: minPoolMarginRatio.toString(),\n        initialMarginRatioOrigin: initialMarginRatio.toString(),\n        initialMarginRatio: dynamicMarginRatio.toString(),\n        maintenanceMarginRatioOrigin: maintenanceMarginRatio.toString(),\n        maintenanceMarginRatio: bg(dynamicMarginRatio)\n          .times(maintenanceMarginRatio)\n          .div(initialMarginRatio)\n          .toString(),\n        minLiquidationReward: minLiquidationReward.toString(),\n        maxLiquidationReward: maxLiquidationReward.toString(),\n        liquidationCutRatio: liquidationCutRatio.toString(),\n        protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n        isCall: isCall,\n        indexConstituents: getIndexInfo(symbol),\n      };\n    },\n    args,\n    {}\n  );\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      // const { symbol: symbolName} = getPoolConfig(\n      //   poolAddress,\n      //   undefined,\n      //   symbolId,\n      //   'option'\n      // );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init();\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n      const symbols = optionPool.symbols\n      const symbolName = symbols.find((s) => s.symbolId === symbolId).symbol\n      let symbolVolatilities = []\n      if (symbols && symbols.length > 0) {\n        [symbolVolatilities] = await Promise.all([\n          volatilitiesCache.get(\n            symbols.map((s) => s.symbol)\n          ),\n          //volatilityCache.get(`VOL-${normalizeOptionSymbol(symbolName)}`),\n        ]);\n      }\n      const state = await optionPool.viewer.getTraderStates(\n        poolAddress,\n        accountAddress,\n        [],\n        symbolVolatilities.map((v) => v.volatility)\n      );\n      const { poolState, symbolState, traderState, positionState } = state;\n      const { initialMarginRatio } = poolState;\n      const { margin, totalPnl, initialMargin } = traderState;\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\n      const volPrice = fromWei(symbolVolatilities[symbolIndex].volatility)\n      const symbol = symbolState[symbolIndex];\n      const position = positionState[symbolIndex];\n      const price = await wrappedOracleFactory(\n        chainId,\n        symbol.oracleAddress\n      ).getPrice();\n      return {\n        symbolId,\n        symbol: symbolName,\n        price,\n        strikePrice: symbol.strikePrice.toString(),\n        timePrice: symbol.timeValue.toString(),\n        markPrice: symbol.dpmmPrice.toString(),\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\n        averageEntryPrice: getAverageEntryPrice(position, symbol),\n        margin: margin.toString(),\n        marginHeld: initialMargin.toString(),\n        marginHeldBySymbol: getMarginHeldBySymbol(\n          position.volume,\n          price,\n          symbol,\n          initialMarginRatio\n        ).toString(),\n        unrealizedPnl: totalPnl,\n        unrealizedPnlList: symbolState\n          .filter((s, index) => positionState[index].pnl !== '0')\n          .map((s) => [s.symbol, positionState[symbolState.findIndex((oS) => oS.symbolId === s.symbolId)].pnl]),\n        premiumFundingAccrued: positionState[symbolIndex].fundingAccrued,\n        isCall: symbol.isCall,\n        volatility: bg(volPrice).times(100).toString(),\n        liquidationPrice: getLiquidationPrice(state, symbolId),\n      };\n    },\n    args,\n    {}\n  );\n};\n\nexport const getPositionInfos = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init();\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n      const symbols = optionPool.symbols\n      let [symbolVolatilities] = await Promise.all([\n        volatilitiesCache.get(\n          symbols.map((s) => s.symbol)\n        ),\n        //volatilitiesCache.(symbols.map((s) => s.symbol)),\n      ]);\n      let volPrices = symbolVolatilities.map((v) => fromWei(v.volatility))\n      symbolVolatilities = symbolVolatilities.map((v) => v.volatility)\n      const state = await optionPool.viewer.getTraderStates(\n        poolAddress,\n        accountAddress,\n        [],\n        symbolVolatilities\n      );\n      const { poolState, traderState, positionState, symbolState } = state;\n      const { initialMarginRatio } = poolState;\n      const { margin, initialMargin } = traderState;\n      const prices = await Promise.all(\n        symbols.reduce(\n          (acc, s) =>\n            acc.concat([\n              wrappedOracleFactory(chainId, s.oracleAddress).getPrice(),\n            ]),\n          []\n        )\n      );\n\n      const liquidationPrices = getLiquidationPrices(state);\n      return symbols\n        .filter((s) => positionState[s.symbolId].volume !== '0')\n        .map((s) => {\n          const vIndex = symbolState.findIndex(\n            (oS) => oS.symbolId === s.symbolId\n          );\n          return {\n            symbolId: s.symbolId,\n            symbol: s.symbol,\n            price: prices[vIndex],\n            markPrice: symbolState[vIndex].dpmmPrice.toString(),\n            // strikePrice: s.strikePrice.toString(),\n            // timePrice: s.timeValue.toString(),\n            volume: bg(positionState[vIndex].volume)\n              .times(symbolState[vIndex].multiplier)\n              .toString(),\n            averageEntryPrice: getAverageEntryPrice(positionState[vIndex], s),\n            margin: margin.toString(),\n            marginHeld: initialMargin.toString(),\n            marginHeldBySymbol: getMarginHeldBySymbol(\n              positionState[vIndex].volume,\n              prices[vIndex],\n              s,\n              initialMarginRatio\n            ).toString(),\n            unrealizedPnl: positionState[vIndex].pnl,\n            premiumFundingAccrued: positionState[vIndex].fundingAccrued,\n            isCall: s.isCall,\n            volatility: bg(volPrices[vIndex]).times(100).toString(),\n            liquidationPrice: liquidationPrices,\n          };\n        });\n    },\n    args,\n    []\n  );\n};\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init();\n      // const { bToken: bTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'option'\n      // );\n      const balance = await optionPool.bToken.balanceOf(\n        accountAddress\n      );\n      return balance.toString();\n    },\n    args,\n    ''\n  );\n};\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init();\n      //const bToken = bTokenFactory(chainId, bTokenAddress);\n      return await optionPool.bToken.isUnlocked(accountAddress, poolAddress);\n    },\n    args,\n    ''\n  );\n};\n\nconst _getFundingRate = async (chainId, poolAddress, symbolId) => {\n  //const { symbol } = getPoolConfig(poolAddress, undefined, symbolId, 'option')\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  await optionPool.init();\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\n  //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n  const symbols = optionPool.symbols;\n  const symbolVolatilities = (\n    await volatilitiesCache.get(symbols.map((s) => s.symbol))\n  ).map((v) => v.volatility);\n  const state = await optionPool.viewer.getPoolStates(\n    poolAddress,\n    [],\n    symbolVolatilities\n  );\n  const { poolState, symbolState } = state;\n  const { initialMarginRatio, totalDynamicEquity, liquidity } = poolState;\n  const curSymbolIndex = optionPool.activeSymbolIds.indexOf(symbolId);\n  if (curSymbolIndex < 0) {\n    throw new Error(\n      `getFundingRate(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n    );\n  }\n  const symbolInfo = symbolState[curSymbolIndex];\n\n  const prices = await Promise.all(\n    symbolState.reduce(\n      (acc, s) =>\n        acc.concat([wrappedOracleFactory(chainId, s.oracleAddress).getPrice()]),\n      []\n    )\n  );\n\n  const liquidityUsedInAmount = symbolState.reduce((acc, s, index) => {\n    return acc.plus(\n      bg(s.tradersNetVolume)\n        .times(prices[index])\n        .times(s.multiplier)\n        .abs()\n        .times(\n          dynamicInitialPoolMarginRatio(\n            prices[index],\n            s.strikePrice,\n            s.isCall,\n            initialMarginRatio\n          )\n        )\n    );\n  }, bg(0));\n\n  const res = {\n    initialMarginRatio,\n    symbolIds: optionPool.activeSymbolIds,\n    symbols: symbolState,\n    liquidity,\n    totalDynamicEquity,\n    prices,\n    liquidityUsed: bg(liquidity).eq(0) ? bg(0) : liquidityUsedInAmount.div(liquidity),\n    premiumFunding: bg(symbolInfo.fundingPerSecond)\n      .div(symbolInfo.multiplier)\n      .times(SECONDS_IN_A_DAY)\n      .toString(),\n    premiumFundingPerSecond: bg(symbolInfo.fundingPerSecond).div(\n      symbolInfo.multiplier\n    ),\n  };\n  return res;\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, volume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, volume, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress,\n      );\n      symbolId = checkTokenId(symbolId);\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      const symbolInfo = await optionPool.getSymbol(symbolId);\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { symbolIds, symbols } = res;\n      const curSymbolIndex = symbolIds.indexOf(symbolId);\n      if (curSymbolIndex < 0) {\n        throw new Error(\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n        );\n      }\n      const symbol = symbols[curSymbolIndex];\n      let fee\n      const intrinsicValue = symbol.isCall\n        ? max(bg(symbol.spotPrice).minus(symbol.strikePrice), bg(0))\n        : max(bg(symbol.strikePrice).minus(symbol.spotPrice), bg(0));\n      if (bg(intrinsicValue).gt(0)) {\n        fee = bg(volume)\n          .abs()\n          .times(symbol.multiplier)\n          .times(symbol.spotPrice)\n          .times(symbolInfo.feeRatioITM)\n          .toString();\n      } else {\n        fee = bg(volume)\n          .abs()\n          .times(symbol.multiplier)\n          .times(symbol.timeValue)\n          .times(symbolInfo.feeRatioOTM)\n          .toString();\n      }\n      return fee\n    },\n    args,\n    ''\n  );\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  [chainId, poolAddress, accountAddress] = checkApiInput(\n    chainId,\n    poolAddress,\n    accountAddress\n  );\n  symbolId = checkTokenId(symbolId);\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\n  const [parameterInfo, symbol] = await Promise.all([\n    optionPool.getParameters(),\n    optionPool.getSymbol(symbolId),\n  ]);\n  const price = await wrappedOracleFactory(\n    chainId,\n    symbol.oracleAddress\n  ).getPrice();\n  const { initialMarginRatio } = parameterInfo;\n  const marginRatio = dynamicInitialMarginRatio(\n    price,\n    symbol.strikePrice,\n    symbol.isCall,\n    initialMarginRatio\n  );\n  //console.log(marginRatio, symbol.multiplier, price, volume)\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(symbol.multiplier)\n    .times(marginRatio);\n};\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId);\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress,\n      );\n      symbolId = checkTokenId(symbolId);\n      const res = await _getFundingRate(chainId, poolAddress, symbolId);\n      fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      const curSymbolIndex = res.symbolIds.indexOf(symbolId);\n      if (curSymbolIndex < 0) {\n        throw new Error(\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n        );\n      }\n      return {\n        premiumFunding0: bg(res.premiumFunding).toString(),\n        premiumFundingPerSecond: res.premiumFundingPerSecond.toString(),\n        liquidity: res.liquidity.toString(),\n        volume: '-',\n        tradersNetVolume: res.symbols[curSymbolIndex].tradersNetVolume,\n      };\n    },\n    args,\n  );\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async () => {\n      // let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      // if (!res) {\n      //   res = await _getFundingRate(chainId, poolAddress, symbolId);\n      //   fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      // }\n      // const { symbolIds, symbols, prices, totalDynamicEquity } = res;\n      // const curSymbolIndex = symbolIds.indexOf(symbolId);\n      // if (curSymbolIndex < 0) {\n      //   throw new Error(\n      //     `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n      //   );\n      // }\n      // let symbol = symbols[curSymbolIndex];\n      // //console.log('symbol.tradersNetVolume0', symbol.tradersNetVolume)\n      // //symbol.tradersNetVolume = bg(symbol.tradersNetVolume).plus(newNetVolume).toString()\n      // //console.log('symbol.tradersNetVolume1', symbol.tradersNetVolume)\n      // const deltaFunding1 = getdeltaFundingPerSecond(\n      //   symbol,\n      //   symbol.delta,\n      //   prices[curSymbolIndex],\n      //   totalDynamicEquity,\n      //   newNetVolume\n      // );\n\n      return {\n        // deltaFunding1: bg(deltaFunding1)\n        //   .div(symbol.multiplier)\n        //   .times(SECONDS_IN_A_DAY)\n        //   .toString(),\n      };\n    },\n    args,\n    {\n    }\n  );\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress,\n      );\n      symbolId = checkTokenId(symbolId);\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      }\n      console.log('res', res.liquidityUsed.toString())\n      return {\n        liquidityUsed0: bg(res.liquidityUsed).times(100).toString(),\n      };\n    },\n    args,\n    {}\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress,\n      );\n      symbolId = checkTokenId(symbolId);\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      }\n      const { symbolIds, symbols, prices, liquidity, initialMarginRatio } = res;\n\n      const liquidityUsedInAmount = symbols.reduce((acc, s, index) => {\n        if (symbolIds[index] == symbolId) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newNetVolume)\n              .times(prices[index])\n              .times(s.multiplier)\n              .abs()\n              .times(\n                dynamicInitialPoolMarginRatio(\n                  prices[index],\n                  s.strikePrice,\n                  s.isCall,\n                  initialMarginRatio\n                )\n              )\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .times(prices[index])\n              .times(s.multiplier)\n              .abs()\n              .times(\n                dynamicInitialPoolMarginRatio(\n                  prices[index],\n                  s.strikePrice,\n                  s.isCall,\n                  initialMarginRatio\n                )\n              )\n          );\n        }\n      }, bg(0));\n      return {\n        liquidityUsed1: bg(liquidity).eq(0) ? '0' : liquidityUsedInAmount\n          .div(liquidity)\n          .times(100)\n          .toString(),\n      };\n    },\n    args,\n  );\n};\n\nexport const getEstimatedTimePrice = (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress,\n      );\n      symbolId = checkTokenId(symbolId);\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init();\n      const symbolVolatilities = (await volatilitiesCache.get(\n        optionPool.symbols.map((s) => s.symbol)\n      )).map((v) => v.volatility);\n      const state = await optionPool.viewer.getPoolStates(\n        poolAddress,\n        [],\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n\n      //const { liquidity } = poolState;\n      const index = symbolState.findIndex((s) => s.symbolId === symbolId);\n      if (index > -1) {\n        const {\n          tradersNetVolume,\n          multiplier,\n          intrinsicValue,\n          timeValue,\n          K,\n        } = symbolState[index];\n        //console.log(tradersNetVolume, multiplier, liquidity, quoteBalanceOffset, timePrice, K)\n        const args = [\n          bg(tradersNetVolume).times(multiplier).toNumber(),\n          bg(intrinsicValue).plus(timeValue).toNumber(),\n          bg(K).toNumber(),\n          bg(newNetVolume).times(multiplier).toNumber(),\n        ]\n\n        const res = queryTradePMM(...args);\n        //console.log('res', res)\n        return bg(res).div(newNetVolume).div(multiplier).toString();\n      } else {\n        console.log(\n          `invalid symbolId(${symbolId}) for the pool(${poolAddress})`\n        );\n        return '';\n      }\n    },\n    args,\n    ''\n  );\n};\n\n  export const getUserBTokensInfo = async (\n    chainId,\n    poolAddress,\n    accountAddress\n  ) => {\n    return catchApiError(async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init();\n      const symbols = optionPool.symbols;\n      let symbolVolatilities = [];\n      if (symbols && symbols.length > 0) {\n        [symbolVolatilities] = await Promise.all([\n          volatilitiesCache.get(symbols.map((s) => s.symbol)),\n        ]);\n      }\n      const [balance, state] = await Promise.all([\n        optionPool.bToken.balanceOf(accountAddress),\n        optionPool.viewer.getTraderStates(\n          poolAddress,\n          accountAddress,\n          [],\n          symbolVolatilities.map((v) => v.volatility)\n        ),\n      ]);\n      const { traderState } = state;\n      const { margin, totalPnl, initialMargin } = traderState;\n\n      return [{\n        bTokenAddress: optionPool.addresses.bTokenAddress,\n        bTokenSymbol: optionPool.bTokenSymbol,\n        availableBalance: bg(margin)\n          .minus(initialMargin)\n          .plus(totalPnl)\n          .toString(),\n        walletBalance: balance.toString(),\n      }];\n    });\n  };\n\n// getVolatility\nexport const getVolatility = async (\n  chainId,\n  poolAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress ] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress,\n      );\n      symbolId = checkTokenId(symbolId);\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init();\n\n      const symbols = optionPool.symbols\n      const symbolVolatilities = await volatilitiesCache.get(\n        symbols.map((s) => s.symbol)\n      );\n      const symbolIndex = symbols.findIndex((s) => s.symbolId === symbolId);\n      const volPrice = fromWei(symbolVolatilities[symbolIndex].volatility)\n      return bg(volPrice).times(100).toString()\n    },\n    args,\n    ''\n  );\n};\n","import { DeriEnv } from \"../shared/config/env\";\nimport { checkEnv, checkChainId } from \"../shared/config\";\n\nexport const openPoolChainIds = (env) => {\n  env = checkEnv(env)\n  const configs = {\n    prod: ['56'],\n    dev: ['97'],\n    testnet: ['97'],\n  }\n  return configs[env]\n};\n\nexport const getPoolV2LiteManagerConfig = (chainId) => {\n  chainId = checkChainId(chainId)\n  const configs = {\n    prod: [\n      {\n        chainId: \"56\",\n        address: \"0x5e3318aeaa226dc11571f19b96240d88b64702dc\",\n        initialBlock: \"10133599\",\n      },\n    ],\n    dev: [\n      {\n        chainId: \"97\",\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\n        initialBlock: \"11034400\",\n      },\n    ],\n    testnet: [\n      {\n        chainId: \"97\",\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\n        initialBlock: \"11034400\",\n      },\n    ],\n  };\n  const env = DeriEnv.get();\n  const res = configs[env].find((c) => c.chainId === chainId);\n  if (res && res.address) {\n    return res\n  } else {\n    throw new Error(`-- getPoolV2LiteManagerConfig: cannot find config with env(${env}) and chainId(${chainId})`)\n  }\n};\n\nexport const getPoolV2LiteManagerDpmmConfig = (chainId) => {\n  chainId = checkChainId(chainId)\n  const configs = {\n    prod: [\n      {\n        chainId: \"56\",\n        address: \"0x0000000000000000000000000000000000000000\",\n        initialBlock: \"0\",\n      },\n    ],\n    dev: [\n      {\n        chainId: \"97\",\n        address: \"0xC02d12bAf07E03412847671727334E13C437DDdb\",\n        initialBlock: \"13986219\",\n      },\n    ],\n    testnet: [\n      {\n        chainId: \"97\",\n        address: \"0xC02d12bAf07E03412847671727334E13C437DDdb\",\n        initialBlock: \"13986219\",\n      },\n    ],\n  };\n  const env = DeriEnv.get();\n  const res = configs[env].find((c) => c.chainId === chainId);\n  if (res && res.address) {\n    return res\n  } else {\n    throw new Error(`-- getPoolV2LiteManagerDpmmConfig: cannot find config with env(${env}) and chainId(${chainId})`)\n  }\n};\n\nexport const getOracleFactoryChainlinkConfig = (chainId) => {\n  chainId = checkChainId(chainId)\n  const configs = {\n    prod: [\n      {\n        chainId: '56',\n        address: '0x5052fa10d68F4146B66bc15fd8cCb1674B482026',\n        initialBlock: '11017943',\n      },\n    ],\n    dev: [\n      {\n        chainId: '97',\n        address: '0xFD1f981375f95e971E8fC0756f4daAF5784e5376',\n        initialBlock: '12440610',\n      },\n    ],\n  };\n  const env = DeriEnv.get();\n  const res = configs[env].find((c) => c.chainId === chainId);\n  if (res && res.address) {\n    return res\n  } else {\n    throw new Error(`-- getOracleFactoryChainlinkConfig: cannot find config with env(${env}) and chainId(${chainId})`)\n  }\n};\n\n\nexport const expandPoolConfigV2LiteOpen = (config) => {\n  const pools = config.pools;\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: symbol.unit,\n          version: 'v2_lite_open',\n          isOpen: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};","export const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.SignedPrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.SignedPrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastUpdateBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller_\",\"type\":\"address\"},{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.SignedPrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.SignedPrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.SignedPrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.SignedPrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\nexport const perpetualPoolLiteManagerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolTemplate_\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector_\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"protocolFeeCutRatio_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"creator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"CreatePool\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pairedTokenAddress\", \"type\": \"address\" } ], \"name\": \"createPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getNumPools\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"poolTemplate\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"pools\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCollector\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCutRatio\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const chainlinkFeedAbi = [ {\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, {\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","import { ContractBase } from '../../shared/contract/contract_base';\nimport { chainlinkFeedAbi } from './abis';\n\nexport class ChainlinkFeed extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, chainlinkFeedAbi);\n  }\n  async symbol() {\n    const res = await this._call('description');\n    return res.split('/').map((s) => s.trim()).join('')\n  }\n}\n","// this file is generated by script, don't modify it !!!\nexport const oracleFactoryChainlinkAbi = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"AddFeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"CreateOracle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"symbols\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"feeds\",\"type\":\"address[]\"}],\"name\":\"addFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { oracleFactoryChainlinkAbi } from '../abi/oracleFactoryChainlinkAbi.js'\n\nexport class OracleFactoryChainlink extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, oracleFactoryChainlinkAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async getFeed(symbol) {\n    const res = await this._call('getFeed', [symbol])\n    return deleteIndexedKey(res)\n  }\n  async getOracle(symbol) {\n    const res = await this._call('getOracle', [symbol])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async createOracle(accountAddress, symbol) {\n    return await this._transact('createOracle', [symbol], accountAddress)\n  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const oracleFactoryOffChainAbi = [\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"symbol\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"signer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"delayAllowance\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"oracle\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"CreateOracleOffChain\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"symbol\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"signer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"delayAllowance\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"oracle\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"CreateVolatilityOracleOffChain\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"createOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"createVolatilityOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\n    ],\n    \"name\": \"getOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\n    ],\n    \"name\": \"getVolatilityOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { oracleFactoryOffChainAbi } from '../abi/oracleFactoryOffChainAbi.js'\n\nexport class OracleFactoryOffChain extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, oracleFactoryOffChainAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async getOracle(symbol) {\n    const res = await this._call('getOracle', [symbol])\n    return deleteIndexedKey(res)\n  }\n  async getVolatilityOracle(symbol) {\n    const res = await this._call('getVolatilityOracle', [symbol])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async createOracle(accountAddress, symbol, signer, delayAllowance) {\n    return await this._transact('createOracle', [symbol, signer, delayAllowance], accountAddress)\n  }\n  async createVolatilityOracle(accountAddress, symbol, signer, delayAllowance) {\n    return await this._transact('createVolatilityOracle', [symbol, signer, delayAllowance], accountAddress)\n  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const perpetualPoolLiteManagerDpmmAbi = [\n  {\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"poolTemplate_\", \"type\": \"address\" },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"protocolFeeCollector_\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"protocolFeeCollectRatio_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"oldController\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"newController\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"ChangeController\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"creator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"sourcePool\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"targetPool\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"CreateMigrationPool\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"creator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"pool\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"CreatePool\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"claimNewController\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"controller\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" }\n    ],\n    \"name\": \"createMigrationPool\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256[7]\",\n        \"name\": \"parameters\",\n        \"type\": \"uint256[7]\"\n      },\n      { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"pairedTokenAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"createPool\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getNumPools\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"poolTemplate\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"name\": \"pools\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"protocolFeeCollectRatio\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"protocolFeeCollector\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" }\n    ],\n    \"name\": \"setNewController\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"newTemplate\", \"type\": \"address\" }\n    ],\n    \"name\": \"setPoolTemplate\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"newCollector\", \"type\": \"address\" }\n    ],\n    \"name\": \"setProtocolFeeCollector\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"newProtocolFeeCollectRatio\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"setProtocolFeeCutRatio\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { perpetualPoolLiteManagerDpmmAbi } from '../abi/perpetualPoolLiteManagerDpmmAbi.js'\n\nexport class PerpetualPoolLiteManagerDpmm extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, perpetualPoolLiteManagerDpmmAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async controller() {\n  //    const res = await this._call('controller', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getNumPools() {\n    const res = await this._call('getNumPools', [])\n    return deleteIndexedKey(res)\n  }\n  //  async poolTemplate() {\n  //    const res = await this._call('poolTemplate', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async pools(poolId) {\n    const res = await this._call('pools', [poolId])\n    return deleteIndexedKey(res)\n  }\n  //  async protocolFeeCollectRatio() {\n  //    const res = await this._call('protocolFeeCollectRatio', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async protocolFeeCollector() {\n    const res = await this._call('protocolFeeCollector', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async claimNewController(accountAddress) {\n  //    return await this._transact('claimNewController', [], accountAddress)\n  //  }\n  async createMigrationPool(accountAddress, sourcePool) {\n    return await this._transact('createMigrationPool', [sourcePool], accountAddress)\n  }\n  async createPool(accountAddress, parameters, bTokenAddress, pairedTokenAddress) {\n    return await this._transact('createPool', [parameters, bTokenAddress, pairedTokenAddress], accountAddress)\n  }\n  //  async setNewController(accountAddress, newController) {\n  //    return await this._transact('setNewController', [newController], accountAddress)\n  //  }\n  //  async setPoolTemplate(accountAddress, newTemplate) {\n  //    return await this._transact('setPoolTemplate', [newTemplate], accountAddress)\n  //  }\n  //  async setProtocolFeeCollector(accountAddress, newCollector) {\n  //    return await this._transact('setProtocolFeeCollector', [newCollector], accountAddress)\n  //  }\n  //  async setProtocolFeeCutRatio(accountAddress, newProtocolFeeCollectRatio) {\n  //    return await this._transact('setProtocolFeeCutRatio', [newProtocolFeeCollectRatio], accountAddress)\n  //  }\n\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenLiteAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","//import { getOracleServerUrl } from \"../shared/utils/index.js\";\n\nexport const isProdChain = (chainId) => {\n  return [\"1\", \"56\", \"128\", \"137\"].includes(chainId.toString());\n};\n\nexport const PRESERVED_SYMBOLS = [\"BTCUSD\", \"ETHUSD\", \"BNBUSD\"];\n\nexport const getOracleServerUrl = (chainId, symbol, type = \"futures\") => {\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\n  let method = \"get_signed_price\";\n  if (type === \"option\") {\n    method = \"get_signed_volatility\";\n  }\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\n    method = \"get_price\";\n    symbol = `${symbol}_v2_bsc`;\n  }\n  let baseUrl = isProdChain(chainId)\n    ? `https://oracle4.deri.finance/${method}`\n    : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) => `${url}?symbol=${symbol}`;\n\n  if (symbol) {\n    return addSymbolParam(baseUrl, symbol);\n  } else {\n    return baseUrl;\n  }\n};\n\nexport const getPriceInfos = async (chainId, symbolList) => {\n  let url = getOracleServerUrl(chainId);\n  let retry = 3;\n  //console.log('url', url)\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, {\n      mode: \"cors\",\n      cache: \"no-cache\",\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(symbolList),\n    });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === \"200\" && priceInfo.data) {\n        return priceInfo.data;\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(\n      `!! getPriceInfos exceed max retry(3): ${symbolList} ${JSON.stringify(\n        priceInfo\n      )}`\n    );\n  }\n};\n","import { bg } from \"../shared/utils\";\n\nexport const calculateK = (indexPrice, liquidity, alpha) => {\n  return bg(indexPrice).times(alpha).div(liquidity);\n};\nexport const calculateDpmmPrice = (\n  indexPrice,\n  K,\n  tradersNetVolume,\n  multiplier\n) => {\n  return bg(indexPrice).times(\n    bg(1).plus(bg(K).times(tradersNetVolume).times(multiplier))\n  );\n};\nexport const calculateDpmmCost = (\n  indexPrice,\n  K,\n  tradersNetVolume,\n  multiplier,\n  tradeVolume\n) => {\n  return bg(indexPrice).times(\n    bg(multiplier)\n      .times(tradersNetVolume)\n      .plus(bg(multiplier).times(tradeVolume))\n      .pow(2)\n      .minus(bg(multiplier).times(tradersNetVolume).pow(2))\n      .times(K)\n      .div(2)\n      .plus(bg(tradeVolume).times(multiplier))\n  );\n};","// this file is generated by script, don't modify it !!!\nexport const perpetualPoolLiteAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256[7]\",\n                \"name\": \"parameters\",\n                \"type\": \"uint256[7]\"\n            },\n            {\n                \"internalType\": \"address[5]\",\n                \"name\": \"addresses\",\n                \"type\": \"address[5]\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"lShares\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AddLiquidity\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AddMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"oldController\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"newController\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ChangeController\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"migrationTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ExecuteMigration\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"liquidator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"reward\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Liquidate\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"migrationTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"PrepareMigration\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"collector\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ProtocolFeeCollection\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"lShares\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"RemoveLiquidity\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"RemoveMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"indexPrice\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeCost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeFee\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"Trade\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"addLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"multiplier\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"approveMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimNewController\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"collectProtocolFee\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"controller\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"executeMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"executeMigrationWithTimestamp\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getAddresses\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"bTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"pTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"liquidatorQualifierAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"protocolFeeCollector\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getFundingPeriod\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getParameters\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"poolMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"initialMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"maintenanceMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"minLiquidationReward\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"maxLiquidationReward\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"liquidationCutRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeCollectRatio\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPoolStateValues\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"liquidity\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeAccrued\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getSymbol\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"string\",\n                        \"name\": \"symbol\",\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"multiplier\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"feeRatio\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"alpha\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetVolume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetCost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"pTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"migrationDestination\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"migrationTimestamp\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"graceDays\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"prepareMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lShares\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"removeLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"removeMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"period\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setFundingPeriod\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newController\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setNewController\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setSymbolParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"toggleCloseOnly\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\",\n                \"name\": \"prices\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"trade\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { perpetualPoolLiteAbi } from '../abi/perpetualPoolLiteAbi.js'\n\nexport class PerpetualPoolLite extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock;\n    }\n  }\n\n  // query\n  async controller() {\n    const res = await this._call('controller', []);\n    return deleteIndexedKey(res);\n  }\n  async getAddresses() {\n    const res = await this._call('getAddresses', []);\n    return deleteIndexedKey(res);\n  }\n  async getFundingPeriod() {\n    const res = await this._call('getFundingPeriod', []);\n    return deleteIndexedKey(res);\n  }\n  async getParameters() {\n    const res = await this._call('getParameters', []);\n    return deleteIndexedKey(res);\n  }\n  async getPoolStateValues() {\n    const res = await this._call('getPoolStateValues', []);\n    return deleteIndexedKey(res);\n  }\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId]);\n    return deleteIndexedKey(res);\n  }\n   async migrationDestination() {\n     const res = await this._call('migrationDestination', [])\n     return deleteIndexedKey(res)\n   }\n   async migrationTimestamp() {\n     const res = await this._call('migrationTimestamp', [])\n     return deleteIndexedKey(res)\n   }\n\n  // tx\n  async addLiquidity(accountAddress, bAmount, prices) {\n    return await this._transact(\n      'addLiquidity',\n      [bAmount, prices],\n      accountAddress\n    );\n  }\n  async addMargin(accountAddress, bAmount) {\n    return await this._transact('addMargin', [bAmount], accountAddress);\n  }\n  //  async claimNewController(accountAddress) {\n  //    return await this._transact('claimNewController', [], accountAddress)\n  //  }\n  //  async collectProtocolFee(accountAddress) {\n  //    return await this._transact('collectProtocolFee', [], accountAddress)\n  //  }\n  // async executeMigration(accountAddress, source) {\n  //   return await this._transact('executeMigration', [source], accountAddress)\n  // }\n  //  async liquidate(accountAddress, account, prices) {\n  //    return await this._transact('liquidate', [account, prices], accountAddress)\n  //  }\n  //  async liquidate(accountAddress, pTokenId, prices) {\n  //    return await this._transact('liquidate', [pTokenId, prices], accountAddress)\n  //  }\n  async removeLiquidity(accountAddress, lShares, prices) {\n    return await this._transact(\n      'removeLiquidity',\n      [lShares, prices],\n      accountAddress\n    );\n  }\n  async removeMargin(accountAddress, bAmount, prices) {\n    return await this._transact(\n      'removeMargin',\n      [bAmount, prices],\n      accountAddress\n    );\n  }\n  //  async setFundingPeriod(accountAddress, period) {\n  //    return await this._transact('setFundingPeriod', [period], accountAddress)\n  //  }\n  //  async setNewController(accountAddress, newController) {\n  //    return await this._transact('setNewController', [newController], accountAddress)\n  //  }\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\n  //  }\n  //  async toggleCloseOnly(accountAddress, symbolId) {\n  //    return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\n  //  }\n  async trade(accountAddress, symbolId, tradeVolume, prices) {\n    return await this._transact(\n      'trade',\n      [symbolId, tradeVolume, prices],\n      accountAddress\n    );\n  }\n\n  // open zone methods\n  async addSymbol(accountAddress, symbolId, symbol, oracleAddress, multiplier, feeRatio, alpha) {\n    return await this._transact('addSymbol', [symbolId, symbol, oracleAddress, multiplier, feeRatio, alpha], accountAddress)\n  }\n   async removeSymbol(accountAddress, symbolId) {\n     return await this._transact('removeSymbol', [symbolId], accountAddress)\n   }\n  async prepareMigration(accountAddress, target, graceDays) {\n    return await this._transact('prepareMigration', [target, graceDays], accountAddress)\n  }\n  async approveMigration(accountAddress) {\n    return await this._transact('approveMigration', [], accountAddress)\n  }\n  async executeMigrationWithTimestamp(accountAddress, source, lastTimestamp) {\n    return await this._transact('executeMigrationWithTimestamp', [source, lastTimestamp], accountAddress)\n  }\n}","// this file is generated by script, don't modify it !!!\nexport const lTokenLiteAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"pure\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { lTokenLiteAbi } from '../abi/lTokenLiteAbi.js'\n\nexport class LTokenLite extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, lTokenLiteAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async allowance(owner, spender) {\n  //    const res = await this._call('allowance', [owner, spender])\n  //    return deleteIndexedKey(res)\n  //  }\n  async balanceOf(account) {\n    const res = await this._call('balanceOf', [account])\n    return deleteIndexedKey(res)\n  }\n  //  async decimals() {\n  //    const res = await this._call('decimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async name() {\n  //    const res = await this._call('name', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return deleteIndexedKey(res)\n  }\n  //  async symbol() {\n  //    const res = await this._call('symbol', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async approve(accountAddress, spender, amount) {\n  //    return await this._transact('approve', [spender, amount], accountAddress)\n  //  }\n  //  async burn(accountAddress, account, amount) {\n  //    return await this._transact('burn', [account, amount], accountAddress)\n  //  }\n  //  async mint(accountAddress, account, amount) {\n  //    return await this._transact('mint', [account, amount], accountAddress)\n  //  }\n  //  async setPool(accountAddress, newPool) {\n  //    return await this._transact('setPool', [newPool], accountAddress)\n  //  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const pTokenLiteAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"ApprovalForAll\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"amount\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdateMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"volume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"cost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"lastCumulativeFundingRate\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdatePosition\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"delta\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"addMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addSymbolId\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"exists\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getActiveSymbolIds\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256[]\",\n                \"name\": \"\",\n                \"type\": \"uint256[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getApproved\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getMargin\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getNumPositionHolders\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getPosition\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPTokenLite.Position\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getTokenId\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"isActiveSymbolId\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isApprovedForAll\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ownerOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeSymbolId\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bytes\",\n                \"name\": \"data\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"setApprovalForAll\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes4\",\n                \"name\": \"interfaceId\",\n                \"type\": \"bytes4\"\n            }\n        ],\n        \"name\": \"supportsInterface\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"toggleCloseOnly\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalMinted\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"margin\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"updateMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPTokenLite.Position\",\n                \"name\": \"position\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"updatePosition\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { pTokenLiteAbi } from '../abi/pTokenLiteAbi.js'\n\nexport class PTokenLite extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return deleteIndexedKey(res)\n  }\n  async exists(owner) {\n    const res = await this._call('exists', [owner])\n    return deleteIndexedKey(res)\n  }\n  async getActiveSymbolIds() {\n    const res = await this._call('getActiveSymbolIds', [])\n    return deleteIndexedKey(res)\n  }\n  //  async getApproved(tokenId) {\n  //    const res = await this._call('getApproved', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getMargin(owner) {\n    const res = await this._call('getMargin', [owner])\n    return deleteIndexedKey(res)\n  }\n  async getNumPositionHolders(symbolId) {\n    const res = await this._call('getNumPositionHolders', [symbolId])\n    return deleteIndexedKey(res)\n  }\n  async getPosition(owner, symbolId) {\n    const res = await this._call('getPosition', [owner, symbolId])\n    return deleteIndexedKey(res)\n  }\n  //  async getTokenId(owner) {\n  //    const res = await this._call('getTokenId', [owner])\n  //    return deleteIndexedKey(res)\n  //  }\n  async isActiveSymbolId(symbolId) {\n    const res = await this._call('isActiveSymbolId', [symbolId])\n    return deleteIndexedKey(res)\n  }\n  //  async isApprovedForAll(owner, operator) {\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async name() {\n  //    const res = await this._call('name', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async ownerOf(tokenId) {\n  //    const res = await this._call('ownerOf', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return deleteIndexedKey(res)\n  }\n  //  async supportsInterface(interfaceId) {\n  //    const res = await this._call('supportsInterface', [interfaceId])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async symbol() {\n  //    const res = await this._call('symbol', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async totalMinted() {\n  //    const res = await this._call('totalMinted', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async addMargin(accountAddress, owner, delta) {\n  //    return await this._transact('addMargin', [owner, delta], accountAddress)\n  //  }\n  //  async addSymbolId(accountAddress, symbolId) {\n  //    return await this._transact('addSymbolId', [symbolId], accountAddress)\n  //  }\n  //  async approve(accountAddress, operator, tokenId) {\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\n  //  }\n  //  async burn(accountAddress, owner) {\n  //    return await this._transact('burn', [owner], accountAddress)\n  //  }\n  //  async mint(accountAddress, owner) {\n  //    return await this._transact('mint', [owner], accountAddress)\n  //  }\n  //  async removeSymbolId(accountAddress, symbolId) {\n  //    return await this._transact('removeSymbolId', [symbolId], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  //  }\n  //  async setApprovalForAll(accountAddress, operator, approved) {\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  //  }\n  //  async setPool(accountAddress, newPool) {\n  //    return await this._transact('setPool', [newPool], accountAddress)\n  //  }\n  //  async toggleCloseOnly(accountAddress, symbolId) {\n  //    return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async updateMargin(accountAddress, owner, margin) {\n  //    return await this._transact('updateMargin', [owner, margin], accountAddress)\n  //  }\n  //  async updatePosition(accountAddress, owner, symbolId, position) {\n  //    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { contractFactory } from '../../shared/utils/index.js';\nimport {\n  perpetualPoolLiteAdapter,\n  lTokenLiteAdapter,\n  pTokenLiteAdapter,\n} from \"./adapter.js\";\n\nimport { PerpetualPoolLite } from './gen/PerpetualPoolLite.js';\nimport { LTokenLite } from './gen/LTokenLite.js';\nimport { PTokenLite } from './gen/PTokenLite.js';\n\n\nexport const perpetualPoolLiteDpmmFactory = contractFactory(\n  perpetualPoolLiteAdapter(PerpetualPoolLite)\n);\nexport const lTokenLiteFactory = contractFactory(lTokenLiteAdapter(LTokenLite));\nexport const pTokenLiteFactory = contractFactory(pTokenLiteAdapter(PTokenLite));\n","import {\n  deriToNatural,\n  fetchJson,\n  getHttpBase,\n  toChecksumAddress,\n  bg,\n} from '../../shared/utils';\nimport { ContractBase, ERC20Factory} from '../../shared/contract';\nimport { normalizeSymbolUnit } from '../../shared/config/token';\nimport { perpetualPoolLiteAbi } from './abis';\nimport { PTokenLite } from './p_token';\nimport { perpetualPoolLiteDpmmFactory } from '../../v2_lite_dpmm/contract/factory';\n\nexport class PerpetualPoolLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n  }\n\n  async init() {\n    await this._init();\n    if (!this.pTokenAddress || !this.pToken) {\n      await this.updateAddresses();\n      // console.log(this.addresses, this.parameters)\n      //this.bToken = bTokenFactory(this.chainId, bTokenAddress);\n      //this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress);\n    }\n  }\n\n  async updateAddresses() {\n    if (!this.bTokenAddress || !this.pTokenAddress) {\n      const res = await this._call('getAddresses');\n      // update this state\n      this.bTokenAddress = res.bTokenAddress;\n      this.lTokenAddress = res.lTokenAddress;\n      this.pTokenAddress = res.pTokenAddress;\n    }\n  }\n\n  async controller() {\n    const res = await this._call('controller');\n    return res;\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId]);\n    return {\n      symbol: res.symbol,\n      oracleAddress: res.oracleAddress,\n      multiplier: deriToNatural(res.multiplier),\n      feeRatio: deriToNatural(res.feeRatio),\n      fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n      price: deriToNatural(res.price),\n      cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n      tradersNetVolume: deriToNatural(res.tradersNetVolume),\n      tradersNetCost: deriToNatural(res.tradersNetCost),\n    };\n  }\n  async getSymbols() {\n    await this.updateAddresses();\n    if (!this.pToken) {\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress);\n    }\n    // update this state\n    this.symbolIds = await this.pToken.getActiveSymbolIds();\n    this.symbols = await Promise.all(\n      this.symbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\n    );\n    return this.symbols;\n  }\n\n  async getBTokenSymbol() {\n    await this.updateAddresses();\n    if (!this.bToken) {\n      this.bToken = ERC20Factory(this.chainId, this.bTokenAddress);\n    }\n    // update this state\n    this.bTokenSymbol = await this.bToken.symbol();\n    return this.bTokenSymbol;\n  }\n\n  async getLastUpdateBlock() {\n    const res = await this._call('getLastUpdateBlock');\n    return parseInt(res);\n  }\n\n  async migrationDestination() {\n    const res = await this._call('migrationDestination');\n    return res;\n  }\n\n  async migrationTimestamp() {\n    const res = await this._call('migrationTimestamp');\n    return res;\n  }\n\n  async isMigrationPrepared() {\n    const res = await this.migrationDestination();\n    return res !== '0x0000000000000000000000000000000000000000';\n  }\n\n  async isMigrationApproved() {\n    await this.init();\n    const poolAddress = toChecksumAddress(await this.pToken.pool());\n    return poolAddress !== toChecksumAddress(this.contractAddress);\n  }\n  async isMigrationExecuted() {\n    await this.init();\n    const poolAddress = toChecksumAddress(await this.pToken.pool());\n    if (poolAddress !== toChecksumAddress(this.contractAddress)) {\n      const pool = await perpetualPoolLiteDpmmFactory(\n        this.chainId,\n        poolAddress\n      );\n      const { liquidity } = await pool.getStateValues();\n      return bg(liquidity).gt(0);\n    } else {\n      return false;\n    }\n  }\n\n  async getPoolExtraInfo() {\n    const url = `${getHttpBase()}/pool_extra_info/${this.contractAddress}`;\n    const res = await fetchJson(url);\n    //console.log(res)\n    if (res.success) {\n      return res.data;\n    } else {\n      return {\n        chain_id: this.chainId,\n        pool: this.contractAddress,\n        block_number: '1000000000',\n        version: '',\n        target_pool: '',\n        migration_timestamp: '',\n      };\n    }\n  }\n\n  async getConfig() {\n    const [\n      bToken,\n      symbols,\n      extraInfo,\n      isMigrationPrepared,\n      isMigrationApproved,\n      isMigrationExecuted,\n    ] = await Promise.all([\n      this.getBTokenSymbol(),\n      this.getSymbols(),\n      this.getPoolExtraInfo(),\n      this.isMigrationPrepared(),\n      this.isMigrationApproved(),\n      this.isMigrationExecuted(),\n    ]);\n    const hasMigration = true;\n    return {\n      pool: this.contractAddress,\n      targetPool: extraInfo.target_pool || '',\n      migrationTimestamp: extraInfo.migration_timestamp || '',\n      pToken: this.pTokenAddress,\n      lToken: this.lTokenAddress,\n      bToken: this.bTokenAddress,\n      bTokenSymbol: bToken,\n      symbols: symbols.map((s, index) => ({\n        symbolId: this.symbolIds[index],\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      initialBlock: extraInfo.block_number || '',\n      type: 'future',\n      version: extraInfo.version || '',\n      versionId: 'v2_lite',\n      chainId: this.chainId,\n      hasMigration,\n      isMigrationPrepared: hasMigration && isMigrationPrepared,\n      isMigrationApproved: hasMigration && isMigrationApproved,\n      isMigrationExecuted: hasMigration && isMigrationExecuted,\n      isValid:\n        !(hasMigration && isMigrationExecuted) ||\n        (!hasMigration && !isMigrationApproved),\n    };\n  }\n\n  // reduce rest api call\n  async getConfigAlt() {\n    const [\n      bToken,\n      symbols,\n      //extraInfo,\n      isMigrationPrepared,\n      isMigrationApproved,\n      isMigrationExecuted,\n    ] = await Promise.all([\n      this.getBTokenSymbol(),\n      this.getSymbols(),\n      //this.getPoolExtraInfo(),\n      this.isMigrationPrepared(),\n      this.isMigrationApproved(),\n      this.isMigrationExecuted(),\n    ]);\n    const hasMigration = true;\n    return {\n      pool: this.contractAddress,\n      //targetPool: extraInfo.target_pool,\n      //migrationTimestamp: extraInfo.migration_timestamp,\n      pToken: this.pTokenAddress,\n      lToken: this.lTokenAddress,\n      bToken: this.bTokenAddress,\n      bTokenSymbol: bToken,\n      symbols: symbols.map((s, index) => ({\n        symbolId: this.symbolIds[index],\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      //initialBlock: extraInfo.block_number,\n      type: 'perpetual',\n      //version: extraInfo.version,\n      versionId: 'v2_lite',\n      chainId: this.chainId,\n      hasMigration,\n      isMigrationPrepared: hasMigration && isMigrationPrepared,\n      isMigrationApproved: hasMigration && isMigrationApproved,\n      isMigrationExecuted: hasMigration && isMigrationExecuted,\n      isValid:\n        !(hasMigration && isMigrationExecuted) ||\n        (!hasMigration && !isMigrationApproved),\n    };\n  }\n\n  // tx\n  async addSymbol(accountAddress, parameters) {\n    return await this._transact('addSymbol', parameters, accountAddress);\n  }\n\n  async removeSymbol(accountAddress, symbolId) {\n    return await this._transact('removeSymbol', [symbolId], accountAddress);\n  }\n\n  async prepareMigration(accountAddress, target, graceDays) {\n    return await this._transact(\n      'prepareMigration',\n      [target, graceDays],\n      accountAddress\n    );\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { perpetualPoolLiteManagerAbi } from './abis.js'\n\nexport class PerpetualPoolLiteManager extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteManagerAbi)\n  }\n\n  // query\n  async getNumPools() {\n    const res = await this._call('getNumPools', [])\n    return res\n  }\n  async poolTemplate() {\n    const res = await this._call('poolTemplate', [])\n    return res\n  }\n  async pools(poolId) {\n    const res = await this._call('pools', [poolId])\n    return res\n  }\n  async protocolFeeCollector() {\n    const res = await this._call('protocolFeeCollector', [])\n    return res\n  }\n  async protocolFeeCutRatio() {\n    const res = await this._call('protocolFeeCutRatio', [])\n    return res\n  }\n\n  // tx\n  async createPool(accountAddress, parameters, bTokenAddress, pairedTokenAddress) {\n    return await this._transact('createPool', [parameters, bTokenAddress, pairedTokenAddress], accountAddress)\n  }\n\n}","import { ContractBase } from '../../shared/contract/contract_base';\nimport { perpetualPoolLiteViewerAbi } from './abis';\n\nexport class PerpetualPoolLiteViewer extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\n  }\n  async getOffChainOracleSymbols(poolAddress) {\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\n    //return res.filter((s) => s && s !== '');\n    return res\n  }\n}\n","import { factory } from '../shared/utils/factory'\nimport { oracleFactoryChainlinkAdapter, oracleFactoryOffChainAdapter, perpetualPoolLiteManagerDpmmAdapter } from './adapter'\nimport { ChainlinkFeed } from './contract/chainlink_feed'\nimport { OracleFactoryChainlink } from './contract/gen/OracleFactoryChainlink'\nimport { OracleFactoryOffChain } from './contract/gen/OracleFactoryOffChain'\nimport { PerpetualPoolLiteManagerDpmm} from './contract/gen/PerpetualPoolLiteManagerDpmm'\n\nimport { PerpetualPoolLite } from './contract/perpetual_pool'\nimport { PerpetualPoolLiteManager } from './contract/perpetual_pool_lite_manager'\nimport { PerpetualPoolLiteViewer } from './contract/perpetual_pool_lite_viewer'\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite);\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer);\nexport const perpetualPoolLiteManagerFactory = factory(\n  PerpetualPoolLiteManager\n);\nexport const perpetualPoolLiteManagerDpmmFactory = factory(\n  perpetualPoolLiteManagerDpmmAdapter(PerpetualPoolLiteManagerDpmm)\n);\nexport const chainlinkFeedFactory = factory(ChainlinkFeed);\n\nexport const oracleFactoryChainlinkFactory = factory(\n  oracleFactoryChainlinkAdapter(OracleFactoryChainlink)\n);\nexport const oracleFactoryOffChainFactory = factory(\n  oracleFactoryOffChainAdapter(OracleFactoryOffChain)\n);","import { catchApiError } from \"../../shared/utils/api\"\nimport { getPoolViewerConfig } from \"../../shared/config/pool\"\nimport {\n  fetchJson,\n  getBlockInfo,\n  getHttpBase,\n  getPastEvents,\n  getNetworkName,\n} from '../../shared/utils';\nimport {\n  checkChainId,\n  checkAddress,\n  checkApiInputWithoutAccount,\n} from '../../shared/config/check'\nimport {\n  getOracleFactoryChainlinkConfig,\n  openPoolChainIds,\n} from '../config';\nimport {\n  oracleFactoryChainlinkFactory,\n  perpetualPoolLiteFactory,\n  perpetualPoolLiteManagerDpmmFactory,\n  perpetualPoolLiteManagerFactory,\n  perpetualPoolLiteViewerFactory,\n} from '../factory';\nimport { perpetualPoolLiteDpmmFactory } from \"../../v2_lite_dpmm/contract/factory\"\nimport { getConfigZone } from \"../../shared/config/version\"\nimport { OPEN_POOL_EXPIRE_TIME } from \"../../shared/config\";\n\nexport const getPoolOpenConfigList = async (env) => {\n  return catchApiError(\n    async () => {\n      let configs = [];\n      const chainIds = openPoolChainIds(env);\n      const url = `${getHttpBase(env)}/open_pools`;\n      const res = await fetchJson(url);\n      //console.log(res)\n      if (res.success && Array.isArray(res.data)) {\n        const addresses = res.data.filter((p) => chainIds.includes(p.chain_id));\n        configs = await Promise.all(\n          addresses.reduce((acc, config) => {\n            if (config.version_id === 'v2_lite_dpmm') {\n              return acc.concat([\n                perpetualPoolLiteDpmmFactory(\n                  config.chain_id,\n                  config.pool\n                ).getOpenzoneConfigAlt(),\n              ]);\n            } else {\n              return acc.concat([\n                perpetualPoolLiteFactory(\n                  config.chain_id,\n                  config.pool\n                ).getConfigAlt(),\n              ]);\n            }\n          }, [])\n        );\n        configs.forEach((config, index) => {\n          config.initialBlock = addresses[index].block_number;\n          config.migrationTimestamp =\n            addresses[index].migration_timestamp || '';\n          config.targetPool = addresses[index].target_pool || '';\n          config.version = addresses[index].version || 'v2_lite_open';\n          config.chain = getNetworkName(config.chainId);\n          config.zone = getConfigZone(config.version);\n          config.env = env;\n        });\n      }\n      return configs\n        .sort((a, b) => parseInt(b.initialBlock) - parseInt(a.initialBlock))\n        .filter((c) => c.isValid === true);\n    },\n    [],\n    []\n  );\n};\n\nexport const getPoolOpenConfig = async (chainId, poolAddress) => {\n  return catchApiError(async () => {\n    [chainId, poolAddress] = checkApiInputWithoutAccount(chainId, poolAddress)\n\n    const url = `${getHttpBase()}/open_pools`;\n    const res = await fetchJson(url);\n    if (res.success && res.data && res.data.length > 0) {\n      const address = res.data.find((c) => c.pool === poolAddress)\n      if (address && address.pool) {\n        if (address.version_id === 'v2_lite_dpmm') {\n          const perpetualPoolLite = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n          await perpetualPoolLite.init()\n          return await perpetualPoolLite.getOpenzoneConfig()\n        } else {\n          const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n          await perpetualPoolLite.init()\n          return await perpetualPoolLite.getConfig()\n        }\n\n      }\n    }\n    return {}\n  }, [], {});\n};\n\nexport const getPoolOpenOracleList = async(chainId, accountAddress) => {\n  return catchApiError(\n    async () => {\n    chainId = checkChainId(chainId)\n    const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\n    const oracleFactory = oracleFactoryChainlinkFactory(\n      chainId,\n      oracleFactoryConfig.address\n    );\n    await oracleFactory._init()\n    let eventBlock, oracles= [];\n    const res = await fetchJson(\n      `${getHttpBase()}/oracle/${chainId}/${accountAddress}`\n    );\n    if (res && res.success) {\n      eventBlock = parseInt(res.data.eventBlock);\n      if (res.data.oracles && Array.isArray(res.data.oracles)) {\n        oracles = res.data.oracles;\n      }\n      if (eventBlock === 0) {\n        eventBlock = parseInt(oracleFactoryConfig.initialBlock);\n      }\n      const toBlock = await getBlockInfo(chainId, 'latest');\n      // fetch online\n      let events = await getPastEvents(\n        chainId,\n        oracleFactory.contract,\n        'CreateOracle',\n        {},\n        eventBlock,\n        toBlock.number\n      );\n      if (events.length > 0) {\n        for (let i = 0; i < events.length; i++) {\n          const event = events[i];\n          const info = event.returnValues;\n          oracles.push({\n            chainId,\n            symbol: info.symbol,\n            address: info.oracle,\n            blockNumber: event.blockNumber,\n          });\n        }\n        return oracles\n          .sort((a, b) => parseInt(b.blockNumber) - parseInt(a.blockNumber))\n          .reduce((acc, i) => {\n            return acc.find((a) => a.symbol === i.symbol) ? acc : [...acc, i];\n          }, []);\n      } else {\n        return oracles\n      }\n    } else {\n      return [];\n    }\n      //return getOracleConfigList('v2_lite_open', DeriEnv.get()).filter((o) => o.chainId === chainId);\n    },\n    [],\n    []\n  );\n};\n\nexport const getPoolController = async(chainId, poolAddress) => {\n  chainId = checkChainId(chainId);\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      return await perpetualPoolLite.controller();\n    },\n    [chainId, poolAddress],\n    ''\n  );\n}\nexport const isPoolController = async (chainId, poolAddress, controller) => {\n  chainId = checkChainId(chainId);\n  return catchApiError(\n    async (chainId, poolAddress, controller) => {\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      const poolController = await perpetualPoolLite.controller();\n      return (\n        checkAddress(controller) === checkAddress(poolController)\n      );\n    },\n    [chainId, poolAddress, controller],\n    false\n  );\n};\n\n// export const getExpandedPoolOpenConfigList = async () => {\n//   const env = DeriEnv.get()\n//   //const version = 'v2_lite_open'\n//   let config = getJsonConfig(env);\n\n//   config =  await getPoolOpenConfigList()\n//   const pools = config.pools\n//   if (pools && Array.isArray(pools)) {\n//     for (let i = 0; i < pools.length; i++) {\n//       poolProcessor[version](pools[i])\n//       poolValidator[version](pools[i])\n//     }\n//   }\n//   return expandPoolConfigV2LiteOpen(config);\n// }\n\nexport const getPoolAllSymbolNames = async (chainId, poolAddress) => {\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      const viewerAddress = getPoolViewerConfig(chainId, 'v2_lite');\n      const poolViewer = perpetualPoolLiteViewerFactory(chainId, viewerAddress);\n      return await poolViewer.getOffChainOracleSymbols(poolAddress);\n    },\n    [chainId.toString(), poolAddress],\n    []\n  );\n};\n\nexport const getPoolAcitveSymbolIds = async (...args) => {\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      chainId = chainId.toString()\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPoolLite.init()\n      return await perpetualPoolLite.pToken.getActiveSymbolIds()\n    },\n    args,\n    []\n  );\n};\n\n\n// v2lite open config list cache\nexport const openConfigListCache = (() => {\n  let cache = {\n    data: [],\n    timestamp: 0,\n  };\n  return {\n    async update() {\n      const oldData = cache.data;\n      if (Date.now() / 1000 - cache.timestamp >= OPEN_POOL_EXPIRE_TIME) {\n        const res = await getPoolOpenConfigList();\n        if (res.success) {\n          cache.data = res.response.data;\n          cache.timestamp = Date.now() / 1000;\n        } else {\n          console.log(res.response.error && res.response.error.message);\n        }\n      }\n      return cache.data;\n    },\n    updatedAt() {\n      return cache.timestamp;\n    },\n    get() {\n      return cache.data;\n    },\n  };\n})()\n","import { AppError } from '../../shared/error/error';\nimport {\n  catchTxApiError,\n  getBlockInfo,\n  naturalToDeri,\n} from '../../shared/utils';\nimport {\n  checkAddress,\n  checkApiInput,\n} from '../../shared/config'\nimport { normalizeChainId } from '../../shared/utils/validate';\nimport { perpetualPoolLiteDpmmFactory } from '../../v2_lite_dpmm/contract/factory';\nimport {\n  getOracleFactoryChainlinkConfig,\n  getPoolV2LiteManagerDpmmConfig,\n} from '../config';\nimport {\n  chainlinkFeedFactory,\n  oracleFactoryChainlinkFactory,\n  perpetualPoolLiteFactory,\n  perpetualPoolLiteManagerDpmmFactory,\n  perpetualPoolLiteManagerFactory,\n} from '../factory';\n\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\nexport const createPool = async (...args) => {\n  return catchTxApiError(\n    async (\n      chainId,\n      accountAddress,\n      parameters,\n      bTokenAddress,\n      pairedTokenAddress\n    ) => {\n      chainId = normalizeChainId(chainId);\n      const { address: poolManagerAddress } = getPoolV2LiteManagerDpmmConfig(\n        chainId\n      );\n      const poolManager = perpetualPoolLiteManagerDpmmFactory(\n        chainId,\n        poolManagerAddress\n      );\n      // process parameters\n      const newParameters = parameters.map((p) => naturalToDeri(p).toString());\n      // send tx\n      return await poolManager.createPool(\n        accountAddress,\n        newParameters,\n        bTokenAddress,\n        pairedTokenAddress\n      );\n    },\n    args\n  );\n};\n\nexport const createMigrationPool = async (...args) => {\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const { address: poolManagerAddress } = getPoolV2LiteManagerDpmmConfig(\n      chainId\n    );\n    const poolManager = perpetualPoolLiteManagerDpmmFactory(\n      chainId,\n      poolManagerAddress\n    );\n    // send tx\n    return await poolManager.createMigrationPool(accountAddress, poolAddress);\n  }, args);\n};\n\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\nexport const addSymbol = async (...args) => {\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, parameters) => {\n      chainId = normalizeChainId(chainId);\n      const perpetualPoolLite = perpetualPoolLiteDpmmFactory(\n        chainId,\n        poolAddress\n      );\n      // process parameters\n      const newParameters = parameters.map((p, index) =>\n        index > 2 ? naturalToDeri(p).toString() : p\n      );\n      // send tx\n      return await perpetualPoolLite.addSymbol(accountAddress, newParameters);\n    },\n    args\n  );\n};\n\nexport const prepareMigration = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  targetPoolAddress\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    chainId = normalizeChainId(chainId);\n    const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n    // send tx\n    return await perpetualPoolLite.prepareMigration(\n      accountAddress,\n      targetPoolAddress,\n      3\n    );\n  }, []);\n};\n\nexport const approveMigration = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const perpetualPoolLite = perpetualPoolLiteDpmmFactory(\n      chainId,\n      poolAddress\n    );\n    // send tx\n    return await perpetualPoolLite.approveMigration(accountAddress);\n  }, []);\n};\n\nexport const executeMigration = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  oldPoolAddress\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const perpetualPoolLite = perpetualPoolLiteFactory(chainId, oldPoolAddress);\n    const lastUpdateBlock = await perpetualPoolLite.getLastUpdateBlock();\n    const lastTimestamp = (await getBlockInfo(chainId, lastUpdateBlock))\n      .timestamp;\n    const perpetualPoolLiteDpmm = perpetualPoolLiteDpmmFactory(\n      chainId,\n      poolAddress\n    );\n    // send tx\n    return await perpetualPoolLiteDpmm.executeMigrationWithTimestamp(\n      accountAddress,\n      oldPoolAddress,\n      lastTimestamp\n    );\n  }, []);\n};\n\nexport const createOracle = async (...args) => {\n  return catchTxApiError(async (chainId, accountAddress, feedAddress) => {\n    chainId = normalizeChainId(chainId);\n    feedAddress = checkAddress(feedAddress);\n    const feedContract = chainlinkFeedFactory(chainId, feedAddress);\n    const symbol = await feedContract.symbol();\n    if (typeof symbol === 'string' && symbol !== '') {\n      const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\n      const oracleFactory = oracleFactoryChainlinkFactory(\n        chainId,\n        oracleFactoryConfig.address\n      );\n      // process parameters\n      // send tx\n      return await oracleFactory.createOracle(accountAddress, symbol);\n    } else {\n      throw new AppError('INVALID_SYMBOL', symbol);\n    }\n  }, args);\n};\n","import {\n  //getPoolConfig,\n  ContractBase,\n  //isEqualSet,\n  ERC20Factory,\n} from '../../shared/contract';\nimport {\n  deriToNatural,\n  naturalToDeri,\n} from '../../shared/utils'\nimport { checkOffChainOracleSymbol, getPriceInfos } from '../../shared/utils/oracle';\nimport { perpetualPoolLiteOldAbi} from './abis';\nimport { lTokenLiteFactory, pTokenLiteFactory } from '../factory';\n\nexport class PerpetualPoolLiteOld extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteOldAbi);\n  }\n\n  async init() {\n    // init web3 and contract\n    await this._init();\n    // init address and parameters\n    if (!this.addresses || !this.pToken) {\n      [this.addresses, this.parameters] = await Promise.all([\n        this.getAddresses(),\n        this.getParameters(),\n      ]);\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\n      // init bToken, pToken and lToken\n      this.bToken = ERC20Factory(this.chainId, bTokenAddress);\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\n      this.bTokenSymbol = await this.bToken.symbol();\n    }\n    const symbolIds = await this.pToken.getActiveSymbolIds();\n    // update symbolIds\n    if (\n      !this.activeSymbolIds ||\n      this.activeSymbolIds.toString() !== symbolIds.toString() ||\n      this.offChainOracleSymbolIds == null\n    ) {\n      this.activeSymbolIds = symbolIds;\n      this.symbols = await Promise.all(\n        this.activeSymbolIds.reduce(\n          (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n          []\n        )\n      );\n      this.activeSymbolNames = this.symbols.map((s) => s.symbol);\n      this.offChainOracleSymbols = await Promise.all(\n        this.symbols\n          .map((s) => s.oracleAddress)\n          .reduce(\n            (acc, o, index) => [\n              ...acc,\n              checkOffChainOracleSymbol(\n                this.chainId,\n                o,\n                this.symbols[index].symbol\n              ),\n            ],\n            []\n          )\n      );\n      this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\n        (acc, i, index) => {\n          return this.offChainOracleSymbols[index] === '' ? acc : [...acc, i];\n        },\n        []\n      );\n      this.offChainOracleSymbols = this.offChainOracleSymbols.filter(\n        (s) => s && s !== ''\n      );\n      //console.log('offchain', this.offChainOracleSymbols);\n    }\n  }\n\n  // update symbols\n  async getSymbols() {\n    await this.init()\n    this.symbols = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n        []\n      )\n    );\n    return this.symbols\n  }\n\n  // update positions\n  async getPositions(accountAddress) {\n    await this.init()\n    this.positions = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, symbolId) => [\n          ...acc,\n          this.pToken.getPosition(accountAddress, symbolId),\n        ],\n        []\n      )\n    );\n    return this.positions\n  }\n\n  async getAddresses() {\n    const res = await this._call('getAddresses');\n    return res;\n  }\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      // decimals0: res.decimals0,\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getLastUpdateBlock() {\n    const res = await this._call('getLastUpdateBlock');\n    return parseInt(res);\n  }\n  async getProtocolFeeAccrued() {\n    const res = await this._call('getProtocolFeeAccrued');\n    return deriToNatural(res);\n  }\n  async getLiquidity() {\n    const res = await this._call('getLiquidity');\n    return deriToNatural(res);\n  }\n  // async getBTokenOracle(bTokenId) {\n  //   //bTokenId = parseInt(bTokenId)\n  //   return await this._call('getBTokenOracle', [bTokenId])\n  // }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res = await this._call('getSymbol', [symbolId]);\n      return {\n        symbol: res.symbol,\n        symbolId: res.symbolId,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n\n  // async getSymbolOracle(symbolId) {\n  //   //symbolId = parseInt(symbolId)\n  //   return await this._call('getSymbolOracle', [symbolId])\n  // }\n\n  async _getSymbolPrices() {\n    let prices = [];\n    await this.init()\n    if (this.offChainOracleSymbolIds.length > 0) {\n      const priceInfos = await getPriceInfos(this.offChainOracleSymbols);\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\n        acc.push([\n          this.offChainOracleSymbolIds[\n            this.offChainOracleSymbols.indexOf(Object.keys(priceInfos)[index])\n          ],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return prices;\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async addMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async trade(accountAddress, symbolId, newVolume) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(newVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import {\n  LTokenLite,\n  PTokenLite,\n  PerpetualPoolLiteViewer \n} from './contract';\nimport { PerpetualPoolLiteOld } from './contract/perpetual_pool_old';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\n// const factoryWithUpgrade = (klass, klassOld, newPoolList) => {\n//   let instances = {}\n//   return (chainId, address, initialBlock='') => {\n//     const key = address\n//     if (Object.keys(instances).includes(key)) {\n//       return instances[key];\n//     } else {\n//       if (Array.isArray(newPoolList) && newPoolList.includes(address)) {\n//         instances[key] = new klass(chainId, address, initialBlock);\n//         return instances[key];\n//       } else {\n//         instances[key] = new klassOld(chainId, address, initialBlock);\n//         return instances[key];\n//       }\n//     }\n//   }\n// }\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLiteOld);\n\nexport const lTokenLiteFactory = factory(LTokenLite)\n\nexport const pTokenLiteFactory = factory(PTokenLite)\n\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)","import { DeriEnv } from \"../shared/config\"\n\nexport const getPTokenAirdropConfig = (chainId, env) => {\n  chainId = chainId.toString()\n  env = env || DeriEnv.get();\n  const config = {\n    prod: [\n      {\n        chainId: '56',\n        address: '0x055FD7f825cCD1b87092A1Ee40462c4c60dDD8ba',\n      },\n    ],\n    dev: [\n      {\n        chainId: '97',\n        address: '0x632D0f5d642B0d915cE1ad0772677FC589cc724d',\n      },\n    ],\n  };\n\n  if (Object.keys(config).includes(env)) {\n    const res = config[env].find((c) => c.chainId === chainId);\n    if (res) {\n      return res\n    }\n  } \n  throw new Error(`-- getPTokenAirdropConfig(), invalid env(${env}) or chainId(${chainId})`)\n};\n\nexport const getDeriVoteConfig = (chainId, env) => {\n  chainId = chainId.toString()\n  env = env || DeriEnv.get();\n  const config = {\n    prod: [\n      {\n        chainId: '1',\n        address: '0xb2b6907AdDa5a13673849CBD448f31be9C4A7424',\n      },\n      {\n        chainId: '56',\n        address: '0x27c116474D4E08df0A13935AF508E8922271F891',\n      },\n      {\n        chainId: '128',\n        address: '0x3752D67bfBe945a89787c7F6758A47C2D52988d4',\n      },\n      {\n        chainId: '137',\n        address: '0x6d05Fd927b5d184A8f848DA7D57C7228AEf80b85',\n      },\n    ],\n    dev: [\n      {\n        chainId: '97',\n        address: '0x37f3432B2166c6dB487c844C481Cba47ac98AD00',\n      },\n    ],\n  };\n\n  if (Object.keys(config).includes(env)) {\n    const res = config[env].find((c) => c.chainId === chainId);\n    if (res) {\n      return res\n    }\n  } \n  throw new Error(`-- getDeriVoteConfig(): invalid env(${env}) or chainId(${chainId})`)\n};\n\nexport const getStakingMiningVaultRouterConfig = (chainId='56', env) => {\n  chainId = chainId.toString()\n  env = env || DeriEnv.get()\n  const configs = [\n    {\n      chainId: '56',\n      address: '0x224a441f7a4C6775009a1f506e725FE1D180950e',\n      env: 'prod',\n    }\n  ]\n  const res = configs.find((c) => c.chainId === chainId && c.env === env)\n  if (res) {\n    return res\n  } else {\n    throw new Error(`-- getStakingMiningVaultRouterConfig(): invalid env(${env}) or chainId(${chainId})`)\n  }\n}\n","import Web3 from \"web3\";\nimport { bg } from \"../shared/utils\";\n\n// lang\nexport const isObject = (value) => typeof value === 'object' && value !== null\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\nexport const isFunction = (value) => typeof value === 'function'\n\n// convert\nexport const toWei = (number, unit = \"ether\") => {\n  return Web3.utils.toWei(number, unit);\n};\n\nexport const fromWei = (number, unit = \"ether\") => {\n  return Web3.utils.fromWei(number, unit);\n};\n\n// factory\nexport const contractFactory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\n// adapter\nconst processObjectResult = (val, propList = []) => {\n  return Object.keys(val).reduce((acc, prop) => {\n    if (typeof val[prop] === \"string\" && propList.includes(prop)) {\n      acc[prop] = bg(fromWei(val[prop])).toString();\n    } else {\n      acc[prop] = val[prop];\n    }\n    return acc;\n  }, {});\n};\n\nconst processResult = (val, propList = []) => {\n  if (isArray(val)) {\n    return val.map((v) => processResult(v, propList));\n  } else if (isObject(val)) {\n    return processObjectResult(val, propList);\n  } else if (typeof val === \"string\") {\n    return bg(fromWei(val)).toString();\n  } else {\n    return val;\n  }\n};\n\nexport const processMethod = (klass, methodName, propList = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const res = await originMethod.apply(this, args);\n    return processResult(res, propList);\n  };\n  return klass;\n};\n\nexport const processTxMethod = (klass, methodName, toWeiArgPositions = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const newArgs = args.map((arg, index) =>\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\n    );\n    return await originMethod.apply(this, newArgs);\n  };\n  return klass;\n};","// this file is generated by script, don't modify it !!!\nexport const pTokenAirdropNULSAbi = [{\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"bTokenAddress\",\n                \"type\": \"address\"\n            }, {\n                \"internalType\": \"address\",\n                \"name\": \"pTokenAddress\",\n                \"type\": \"address\"\n            }, {\n                \"internalType\": \"address\",\n                \"name\": \"poolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    }, {\n        \"anonymous\": false,\n        \"inputs\": [{\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }, {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }, {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"index\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AirdropPToken\",\n        \"type\": \"event\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"airdropPToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"getBTokenBalance\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isAirdropPToken\",\n        \"outputs\": [{\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"isStartAirdrop\",\n        \"outputs\": [{\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"marginUnit\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"maxAirdropLimit\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"ownerAddress\",\n        \"outputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"marginUnit_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMarginUnit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"maxAirdropLimit_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMaxAirdropLimit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"int256\",\n                \"name\": \"tradeUnit_\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"setTradeUnit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"startAirdrop\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"stopAirdrop\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"totalAirdropCount\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"tradeUnit\",\n        \"outputs\": [{\n                \"internalType\": \"int256\",\n                \"name\": \"\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"withdrawBToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils'\nimport { pTokenAirdropNULSAbi } from '../abi/pTokenAirdropNULSAbi.js'\n\nexport class PTokenAirdropNULS extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenAirdropNULSAbi)\n  }\n\n  // query\n  //  async getBTokenBalance() {\n  //    const res = await this._call('getBTokenBalance', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async isAirdropPToken(account) {\n    const res = await this._call('isAirdropPToken', [account])\n    return deleteIndexedKey(res)\n  }\n  //  async isStartAirdrop() {\n  //    const res = await this._call('isStartAirdrop', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async marginUnit() {\n  //    const res = await this._call('marginUnit', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async maxAirdropLimit() {\n  //    const res = await this._call('maxAirdropLimit', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async ownerAddress() {\n  //    const res = await this._call('ownerAddress', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalAirdropCount() {\n    const res = await this._call('totalAirdropCount', [])\n    return deleteIndexedKey(res)\n  }\n  //  async tradeUnit() {\n  //    const res = await this._call('tradeUnit', [])\n  //    return deleteIndexedKey(res)\n  //  }\n\n  // tx\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n  //  async setMarginUnit(accountAddress, marginUnit_) {\n  //    return await this._transact('setMarginUnit', [marginUnit_], accountAddress)\n  //  }\n  //  async setMaxAirdropLimit(accountAddress, maxAirdropLimit_) {\n  //    return await this._transact('setMaxAirdropLimit', [maxAirdropLimit_], accountAddress)\n  //  }\n  //  async setTradeUnit(accountAddress, tradeUnit_) {\n  //    return await this._transact('setTradeUnit', [tradeUnit_], accountAddress)\n  //  }\n  //  async startAirdrop(accountAddress) {\n  //    return await this._transact('startAirdrop', [], accountAddress)\n  //  }\n  //  async stopAirdrop(accountAddress) {\n  //    return await this._transact('stopAirdrop', [], accountAddress)\n  //  }\n  //  async withdrawBToken(accountAddress) {\n  //    return await this._transact('withdrawBToken', [], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const deriVoteAbi = [\n  { \"inputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"voter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"votingId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"votingOption\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Vote\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"controller\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"topic\", \"type\": \"string\" },\n      { \"internalType\": \"uint256\", \"name\": \"nOptions\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint256\", \"name\": \"deadline\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"initializeVote\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"numVotingOptions\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" }\n    ],\n    \"name\": \"setController\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"votingOption\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"vote\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"votingDeadline\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"votingId\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" },\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }\n    ],\n    \"name\": \"votingOptions\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"name\": \"votingTopics\",\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils'\nimport { deriVoteAbi } from '../abi/deriVoteAbi.js'\n\nexport class DeriVote extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, deriVoteAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async controller() {\n    const res = await this._call('controller', [])\n    return deleteIndexedKey(res)\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  async numVotingOptions() {\n    const res = await this._call('numVotingOptions', [])\n    return deleteIndexedKey(res)\n  }\n  async votingDeadline() {\n    const res = await this._call('votingDeadline', [])\n    return deleteIndexedKey(res)\n  }\n  async votingId() {\n    const res = await this._call('votingId', [])\n    return deleteIndexedKey(res)\n  }\n  async votingOptions(votingId, voter) {\n    const res = await this._call(\"votingOptions\", [votingId, voter]);\n    return deleteIndexedKey(res);\n  }\n  async votingTopics(votingId) {\n    const res = await this._call('votingTopics', [votingId])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async initializeVote(accountAddress, topic, nOptions, deadline) {\n  //    return await this._transact('initializeVote', [topic, nOptions, deadline], accountAddress)\n  //  }\n  //  async setController(accountAddress, newController) {\n  //    return await this._transact('setController', [newController], accountAddress)\n  //  }\n  async vote(accountAddress, votingOption) {\n    return await this._transact('vote', [votingOption], accountAddress)\n  }\n\n}","import { contractFactory } from \"../utils\";\nimport { PTokenAirdropNULSAdapter, deriVoteAdapter } from \"./adapter\";\n\nimport { PTokenAirdropNULS } from \"./gen/PTokenAirdropNULS\";\nimport { DeriVote } from \"./gen/DeriVote.js\";\n\n// pToken airdrop\nexport const PTokenAirdropNULSFactory = contractFactory(\n  PTokenAirdropNULSAdapter(PTokenAirdropNULS)\n);\n\n// deri vote\nexport const deriVoteFactory = contractFactory(deriVoteAdapter(DeriVote));","import { catchApiError, catchTxApiError, bg } from \"../../shared/utils\";\nimport { perpetualPoolLiteFactory } from \"../../v2_lite/factory\";\nimport { getPTokenAirdropConfig } from \"../config\"\nimport { PTokenAirdropNULSFactory } from \"../contract/factory\"\n\nexport const isPTokenAirdropped = async (...args) => {\n  return catchApiError(async(chainId, accountAddress) => {\n    const config = getPTokenAirdropConfig(chainId);\n    return await PTokenAirdropNULSFactory(\n      chainId,\n      config.address\n    ).isAirdropPToken(accountAddress);\n  }, args, 'isPTokenAirdropped', '')\n};\n\nexport const totalAirdropCount = async (...args) => {\n  return catchApiError(async(chainId) => {\n    const config = getPTokenAirdropConfig(chainId);\n    return await PTokenAirdropNULSFactory(\n      chainId,\n      config.address\n    ).totalAirdropCount();\n  }, args, 'totalAirdropCount', '')\n};\n\nexport const isUserPTokenExist = async (...args) => {\n  return catchApiError(async (chainId, poolAddress, accountAddress) => {\n    let res = '';\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    const result = await pool.pToken.balanceOf(accountAddress);\n    if (result === '1') {\n      res = true;\n    } else if (result === '0') {\n      res = false;\n    }\n    return res;\n  }, args, 'isUserPTokenExist', '');\n};\n\nexport const isBTokenUnlocked = async(...args) => {\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    return await pool.bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, 'isUnlocked', '')\n}\n\nexport const hasRequiredBalance = async(...args) => {\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    const res = await pool.bToken.balanceOf(accountAddress)\n    console.log('res', res)\n    return bg(res).gte(100)\n  }, args, 'hasRequiredBalance', '')\n}\n\n\n// tx\nexport const unlockBToken = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    return await pool.bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const airdropPToken = async (...args) => {\n  return catchTxApiError(async (chainId, accountAddress) => {\n    const config = getPTokenAirdropConfig(chainId);\n    return await PTokenAirdropNULSFactory(\n      chainId,\n      config.address\n    ).airdropPToken(accountAddress);\n  }, args);\n};\n","import { DeriEnv } from '../../shared/config';\nimport {\n  databaseActivityFactory,\n  miningVaultRouterFactory,\n} from '../../shared/factory';\nimport {\n  catchApiError,\n  bg,\n  deriToNatural,\n  deriToString,\n  toChecksumAddress,\n  max,\n  catchTxApiError,\n} from '../../shared/utils';\nimport { databaseActivityClaimFactory } from '../../shared/factory/database';\nimport { getStakingMiningVaultRouterConfig } from '../config';\n\nconst range = (n) => new Array(n).fill(0).map((i, index) => index);\n\nconst keyPrefix = (epoch) => {\n  if (!epoch || epoch.toString() === '1') {\n    return DeriEnv.get() === 'prod' ? 'TE' : 'TE10';\n  } else if (epoch.toString() === '2') {\n    return DeriEnv.get() === 'prod' ? 'TE2' : 'TE7';\n  }\n};\nconst claimKeyPrefix = (epoch) => {\n  if (!epoch || epoch.toString() === '1') {\n    return DeriEnv.get() === 'prod' ? 'TE1' : 'TE11';\n  } else if (epoch.toString() === '2') {\n    return DeriEnv.get() === 'prod' ? 'TE2' : 'TE9';\n  }\n};\n\nexport const getStakingTop10Users = async (epoch) => {\n  return catchApiError(\n    async () => {\n      //console.log('key', keyPrefix(epoch))\n      const db = databaseActivityFactory();\n      const key = range(10).reduce(\n        (acc, i) =>\n          acc.concat([\n            `${keyPrefix(epoch)}.top.${i + 1}.account`,\n            `${keyPrefix(epoch)}.top.${i + 1}.fee`,\n            `${keyPrefix(epoch)}.top.${i + 1}.score`,\n            `${keyPrefix(epoch)}.top.${i + 1}.cont`,\n            `${keyPrefix(epoch)}.toppnl.${i + 1}.account`,\n            `${keyPrefix(epoch)}.toppnl.${i + 1}.pnl`,\n          ]),\n        []\n      );\n      //console.log(key)\n      const res = await db.getValues(key);\n      //console.log(res)\n      if (Array.isArray(res) && res.length === 6 * 10) {\n        let result = [],\n          resultPnl = [];\n        for (let i = 0; i < res.length; i++) {\n          if ((i + 1) % 6 === 0) {\n            const info = res.slice(i - 5, i + 1);\n            const index = (i + 1) / 6;\n            result.push({\n              no: index,\n              userAddr: info[0].slice(0, 42),\n              feePaid: deriToNatural(info[1]).toString(),\n              score: deriToNatural(info[2]).toString(),\n              evgCoeff: deriToNatural(info[1]).eq(0)\n                ? '0'\n                : bg(info[3]).div(info[1]).toString(),\n              specialRewardsA:\n                index <= 5\n                  ? index <= 4\n                    ? index <= 3\n                      ? index <= 2\n                        ? index <= 1\n                          ? '80000'\n                          : '60000'\n                        : '40000'\n                      : '20000'\n                    : '10000'\n                  : '8000',\n            });\n            resultPnl.push({\n              no: index,\n              userAddr: info[4].slice(0, 42),\n              pnl: deriToNatural(info[5]).toString(),\n              specialRewardsB:\n                index <= 5\n                  ? index <= 4\n                    ? index <= 3\n                      ? index <= 2\n                        ? index <= 1\n                          ? '80000'\n                          : '60000'\n                        : '40000'\n                      : '20000'\n                    : '10000'\n                  : '8000',\n            });\n          }\n        }\n        return {\n          top10: result.filter(\n            (r) => r.userAddr !== '0x0000000000000000000000000000000000000000'\n          ),\n          top10Pnl: resultPnl.filter(\n            (r) => r.userAddr !== '0x0000000000000000000000000000000000000000'\n          ),\n        };\n      } else {\n        return { top10: [], top10Pnl: [] };\n      }\n    },\n    [],\n    'getStakingTop10Users',\n    { top10: [], top10Pnl: [] }\n  );\n};\n\nexport const getUserStakingInfo = async (accountAddress, epoch) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async (accountAddress) => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseActivityFactory();\n      const key = [\n        `${keyPrefix(epoch)}.Q1.cont`,\n        `${keyPrefix(epoch)}.Q2.cont`,\n        `${keyPrefix(epoch)}.Q3.cont`,\n        `${keyPrefix(epoch)}.Q4.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q1.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q2.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q3.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q4.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.fee`,\n        `${keyPrefix(epoch)}.${accountAddress}.coef`,\n      ];\n      const res = await db.getValues(key);\n      const scoreQ1 = bg(res[0]).eq(0)\n        ? '0'\n        : bg(10000).times(bg(res[4]).div(res[0]));\n      const scoreQ2 = bg(res[1]).eq(0)\n        ? '0'\n        : bg(20000).times(bg(res[5]).div(res[1]));\n      const scoreQ3 = bg(res[2]).eq(0)\n        ? '0'\n        : bg(30000).times(bg(res[6]).div(res[2]));\n      const scoreQ4 = bg(res[3]).eq(0)\n        ? '0'\n        : bg(50000).times(bg(res[7]).div(res[3]));\n\n      const coef = deriToNatural(res[9]);\n      return {\n        userAddr: accountAddress,\n        feePaid: deriToNatural(res[8]).toString(),\n        coef: max(coef, bg(1)).toString(),\n        score: bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4).toString(),\n      };\n    },\n    args,\n    'getUserStakingInfo',\n    {\n      userAddr: '',\n      feePaid: '',\n      coef: '',\n      score: '',\n    }\n  );\n};\n\nexport const getUserStakingReward = async (accountAddress, epoch) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async (accountAddress) => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseActivityFactory();\n      const key = [\n        `${keyPrefix(epoch)}.Q1.cont`,\n        `${keyPrefix(epoch)}.Q2.cont`,\n        `${keyPrefix(epoch)}.Q3.cont`,\n        `${keyPrefix(epoch)}.Q4.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q1.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q2.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q3.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q4.cont`,\n        `${keyPrefix(epoch)}.top.1.account`,\n        `${keyPrefix(epoch)}.top.2.account`,\n        `${keyPrefix(epoch)}.top.3.account`,\n        `${keyPrefix(epoch)}.top.4.account`,\n        `${keyPrefix(epoch)}.top.5.account`,\n        `${keyPrefix(epoch)}.top.6.account`,\n        `${keyPrefix(epoch)}.top.7.account`,\n        `${keyPrefix(epoch)}.top.8.account`,\n        `${keyPrefix(epoch)}.top.9.account`,\n        `${keyPrefix(epoch)}.top.10.account`,\n        `${keyPrefix(epoch)}.toppnl.1.account`,\n        `${keyPrefix(epoch)}.toppnl.2.account`,\n        `${keyPrefix(epoch)}.toppnl.3.account`,\n        `${keyPrefix(epoch)}.toppnl.4.account`,\n        `${keyPrefix(epoch)}.toppnl.5.account`,\n        `${keyPrefix(epoch)}.toppnl.6.account`,\n        `${keyPrefix(epoch)}.toppnl.7.account`,\n        `${keyPrefix(epoch)}.toppnl.8.account`,\n        `${keyPrefix(epoch)}.toppnl.9.account`,\n        `${keyPrefix(epoch)}.toppnl.10.account`,\n      ];\n      const res = await db.getValues(key);\n      const scoreQ1 = bg(res[0]).eq(0)\n        ? '0'\n        : bg(10000).times(bg(res[4]).div(res[0]));\n      const scoreQ2 = bg(res[1]).eq(0)\n        ? '0'\n        : bg(20000).times(bg(res[5]).div(res[1]));\n      const scoreQ3 = bg(res[2]).eq(0)\n        ? '0'\n        : bg(30000).times(bg(res[6]).div(res[2]));\n      const scoreQ4 = bg(res[3]).eq(0)\n        ? '0'\n        : bg(50000).times(bg(res[7]).div(res[3]));\n      const score = bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4);\n      const rewardDERI = bg(1000000).times(bg(score).div(110000)).toString();\n\n      const topUsers = res\n        .slice(8, 18)\n        .map((u) => toChecksumAddress(u.slice(0, 42)));\n      const topPnlUsers = res\n        .slice(18)\n        .map((u) => toChecksumAddress(u.slice(0, 42)));\n      let specialRewardsA = '0';\n      if (topUsers.includes(accountAddress)) {\n        if (accountAddress === topUsers[0]) {\n          specialRewardsA = '80000';\n        } else if (accountAddress === topUsers[1]) {\n          specialRewardsA = '60000';\n        } else if (accountAddress === topUsers[2]) {\n          specialRewardsA = '40000';\n        } else if (accountAddress === topUsers[3]) {\n          specialRewardsA = '20000';\n        } else if (accountAddress === topUsers[4]) {\n          specialRewardsA = '10000';\n        } else {\n          specialRewardsA = '8000';\n        }\n      }\n      let specialRewardsB = '0';\n      if (topPnlUsers.includes(accountAddress)) {\n        if (accountAddress === topPnlUsers[0]) {\n          specialRewardsB = '80000';\n        } else if (accountAddress === topPnlUsers[1]) {\n          specialRewardsB = '60000';\n        } else if (accountAddress === topPnlUsers[2]) {\n          specialRewardsB = '40000';\n        } else if (accountAddress === topPnlUsers[3]) {\n          specialRewardsB = '20000';\n        } else if (accountAddress === topPnlUsers[4]) {\n          specialRewardsB = '10000';\n        } else {\n          specialRewardsB = '8000';\n        }\n      }\n      return {\n        userAddr: accountAddress,\n        rewardDERI,\n        specialRewardsA,\n        specialRewardsB,\n      };\n    },\n    args,\n    'getUserStakingReward',\n    { userAddr: '', rewardDERI: '', specialRewardsA: '', specialRewardsB: '' }\n  );\n};\n\nexport const getUserStakingContribution = async (accountAddress, epoch) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async (accountAddress) => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseActivityFactory();\n      const key = [\n        `${keyPrefix(epoch)}.Q1.cont`,\n        `${keyPrefix(epoch)}.Q2.cont`,\n        `${keyPrefix(epoch)}.Q3.cont`,\n        `${keyPrefix(epoch)}.Q4.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q1.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q2.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q3.cont`,\n        `${keyPrefix(epoch)}.${accountAddress}.Q4.cont`,\n      ];\n      const res = await db.getValues(key);\n      const scoreQ1 = bg(res[0]).eq(0)\n        ? '0'\n        : bg(10000).times(bg(res[4]).div(res[0]));\n      const scoreQ2 = bg(res[1]).eq(0)\n        ? '0'\n        : bg(20000).times(bg(res[5]).div(res[1]));\n      const scoreQ3 = bg(res[2]).eq(0)\n        ? '0'\n        : bg(30000).times(bg(res[6]).div(res[2]));\n      const scoreQ4 = bg(res[3]).eq(0)\n        ? '0'\n        : bg(50000).times(bg(res[7]).div(res[3]));\n\n      return {\n        userAddr: accountAddress,\n        totalContrib: deriToNatural(\n          bg(res[0]).plus(res[1]).plus(res[2]).plus(res[3])\n        ).toString(),\n        userContrib: deriToNatural(\n          bg(res[4]).plus(res[5]).plus(res[6]).plus(res[7])\n        ).toString(),\n        Q1Contrib: deriToNatural(res[0]).toString(),\n        Q2Contrib: deriToNatural(res[1]).toString(),\n        Q3Contrib: deriToNatural(res[2]).toString(),\n        Q4Contrib: deriToNatural(res[3]).toString(),\n        userQ1Contrib: deriToNatural(res[4]).toString(),\n        userQ2Contrib: deriToNatural(res[5]).toString(),\n        userQ3Contrib: deriToNatural(res[6]).toString(),\n        userQ4Contrib: deriToNatural(res[7]).toString(),\n        userQ1Point: scoreQ1.toString(),\n        userQ2Point: scoreQ2.toString(),\n        userQ3Point: scoreQ3.toString(),\n        userQ4Point: scoreQ4.toString(),\n      };\n    },\n    args,\n    'getUserStakingContribution',\n    { userAddr: '', totalContrib: '', userContrib: '' }\n  );\n};\n\nexport const getUserStakingClaimInfo = async (accountAddress, epoch) => {\n  return catchApiError(\n    async () => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseActivityClaimFactory();\n      const key = [\n        `${claimKeyPrefix(epoch)}.${accountAddress}.claimed.amount`,\n        `${claimKeyPrefix(epoch)}.${accountAddress}.unclaimed.amount`,\n        `${claimKeyPrefix(epoch)}.${accountAddress}.claimable.amount`,\n      ];\n      // console.log('key',key)\n      const res = await db.getValues(key);\n      const claimable = deriToNatural(res[2]).toString();\n      return {\n        claimed: deriToNatural(res[0]).toString(),\n        // unclaimed: deriToNatural(res[1]).toString(),\n        locked: deriToNatural(res[1]).minus(claimable).toString(),\n        claimable,\n        // deriPrice: '0.56',\n        // bnbPrice: '640.7',\n      };\n    },\n    [],\n    'getUserStakingClaimInfo',\n    {\n      claimed: '',\n      unclaimed: '',\n      claimable: '',\n      deriPrice: '',\n      bnbPrice: '',\n    }\n  );\n};\n\nexport const claimMyStaking = async (accountAddress, epoch) => {\n  return catchTxApiError(async () => {\n    const chainId = '56';\n    accountAddress = toChecksumAddress(accountAddress);\n    const db = databaseActivityClaimFactory();\n    const key = [\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.amount`,\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.deadline`,\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.nonce`,\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.v1`,\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.r1`,\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.s1`,\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.v2`,\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.r2`,\n      `${claimKeyPrefix(epoch)}.${accountAddress}.claim.s2`,\n    ];\n    //console.log('key', key);\n    const res = await db.getValues(key);\n    const [amount, deadline, nonce, v1, r1, s1, v2, r2, s2] = res;\n    //\n    const claimArgs = [\n      accountAddress,\n      amount,\n      deriToString(deadline),\n      deriToString(nonce),\n      deriToString(v1),\n      r1,\n      s1,\n      deriToString(v2),\n      r2,\n      s2,\n    ];\n\n    const miningVaultAddress = getStakingMiningVaultRouterConfig(\n      chainId,\n      'prod'\n    ).address;\n    //console.log('miningVaultAddress', miningVaultAddress);\n    if (miningVaultAddress) {\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      //console.log(claimArgs)\n      return await miningVaultRouter.mint(...claimArgs);\n    }\n  }, []);\n};\n","import { DeriEnv } from '../../shared/config/env';\nimport {\n  catchApiError,\n  catchTxApiError,\n  fromWei,\n  hexToNumberString,\n  toChecksumAddress,\n} from '../../shared/utils';\nimport { databaseDeriVoteFactory } from '../../shared/factory/database';\nimport { getDeriVoteConfig } from '../config';\nimport { deriVoteFactory } from '../contract/factory';\n\nconst votingId = '2';\nconst keyPrefix = () => (DeriEnv.get() === 'prod' ? `VID${votingId}` : 'VID1');\n\nexport const getVotingResult = async () => {\n  return catchApiError(\n    async () => {\n      const db = databaseDeriVoteFactory();\n      const keys = [\n        `${keyPrefix()}.OP1.count`,\n        `${keyPrefix()}.OP2.count`,\n        `${keyPrefix()}.OP3.count`,\n      ];\n      const res = await db.getValues(keys);\n      return res.map((v) => fromWei(hexToNumberString(v)));\n    },\n    [],\n    'getOptionsVotingPowers',\n    ['', '', '']\n  );\n};\n\nexport const getUserVotingPower = async (accountAddress) => {\n  return catchApiError(\n    async () => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseDeriVoteFactory();\n      const keys = [`${keyPrefix()}.${accountAddress}.count`];\n      const res = await db.getValues(keys);\n      return res.map((v) => fromWei(hexToNumberString(v)))[0];\n    },\n    [accountAddress],\n    'getUserVotingPowers',\n    ''\n  );\n};\n\nexport const getUserVotingResult = async (accountAddress) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async () => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseDeriVoteFactory();\n      const keys = [\n        `${keyPrefix()}.${accountAddress}.count`,\n        `${keyPrefix()}.${accountAddress}.option`,\n        `${keyPrefix()}.${accountAddress}.timestamp`,\n      ];\n      const res = await db.getValues(keys);\n      return {\n        votingPower: fromWei(hexToNumberString(res[0])),\n        option: hexToNumberString(res[1]),\n        timestamp: hexToNumberString(res[2]),\n      };\n    },\n    args,\n    'getVoteResult',\n    ''\n  );\n};\n\nexport const vote = async (chainId, accountAddress, votingOption) => {\n  const args = [chainId, accountAddress, votingOption];\n  return catchTxApiError(async () => {\n    chainId = chainId.toString();\n    accountAddress = toChecksumAddress(accountAddress);\n    const config = getDeriVoteConfig(chainId);\n    const deriVote = deriVoteFactory(chainId, config.address);\n    const voteId = await deriVote.votingId();\n    if (voteId !== votingId) {\n      throw new Error(\n        `Deri Vote: votingId is not match (${votingId} !== ${voteId}) `\n      );\n    }\n    return await deriVote.vote(accountAddress, votingOption);\n  }, args);\n};\n","import { checkEnv } from '../shared/config';\nimport { getJsonConfig } from '../shared/config/config';\nimport { catchApiError } from '../shared/utils';\nimport { getPoolOpenConfigList } from '../v2_lite_open/api/query_api';\n\nexport const getPoolConfigList = async (env, type=null, includeOpenPools = false) => {\n  return catchApiError(async () => {\n    env = checkEnv(env);\n    let res = getJsonConfig(env);\n    // add v1 config\n    // res= res.concat(getPoolV1ConfigList(env));\n    if (includeOpenPools) {\n      const result = await getPoolOpenConfigList();\n      if (result.success) {\n        res = [...res, ...result.response.data];\n      } else {\n        console.log(result.response.error && result.response.error.message);\n      }\n    }\n    if (!!type) {\n      res = res.filter((c) => c.version === type)\n    }\n    return res;\n  }, [env, type, includeOpenPools]);\n};\n","import {\n  //naturalToDeri,\n  deriToNatural,\n  // hexToString,\n  // toChecksumAddress,\n  // hexToNumber,\n  // hexToNumberString,\n  bg,\n} from '../../shared/utils';\nimport { getPoolV1Config } from '../../shared/config';\n\n//import { databaseFactory } from '../../shared/factory';\nimport { perpetualPoolFactory } from '../factory';\n\n//import { getPoolV1Config } from '../../shared/config';\nimport { getHttpBase, fetchJson, catchApiError } from '../../shared/utils';\n// import {\n//   getTradeHistoryOnline,\n// } from './trade_history_api';\n//import { perpetualPoolFactory } from '../factory';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  bTokenSymbol,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier,\n    feeRatio\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: bg(volume).times(multiplier).toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  // console.log(JSON.stringify(res))\n  return res;\n};\n\n// const processLiquidateEvent = async (\n//   info,\n//   txHash,\n//   bTokenSymbol,\n//   multiplier\n// ) => {\n//   // console.log(info)\n//   const volume = deriToNatural(info.volume).abs();\n//   // const cost = deriToNatural(info.cost).abs()\n//   // const margin = info.margin\n//   const timestamp = `${info.timestamp}000`;\n//   const price = deriToNatural(info.price);\n//   // const liquidator = info.liquidator\n//   // const reward = info.reward\n//   const national = volume.times(price).times(multiplier);\n//   // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\n\n//   const res = {\n//     direction: 'Liquidation',\n//     baseToken: bTokenSymbol,\n//     price: price.toString(),\n//     notional: national.toString(),\n//     volume: bg(volume).times(multiplier).toString(),\n//     transactionFee: '0',\n//     transactionHash: txHash.toString(),\n//     time: timestamp,\n//     // cost: naturalToDeri(cost).toString(),\n//     // margin: margin.toString(),\n//     // liquidator,\n//     // reward: reward.toString(),\n//   };\n//   return res;\n// };\n\n// export const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\n//   const keyMeta = `${chainId}.${poolAddress}`;\n//   const db = databaseFactory();\n//   let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\n//     db.getValues([`${keyMeta}.tradeHistoryBlock`]),\n//     db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\n//   ]);\n//   tradeFromBlock = hexToNumber(tradeFromBlock[0]);\n//   liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\n//   if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n//     // console.log(tradeFromBlock, liquidateFromBlock)\n//     const [\n//       tradeHistoryOffline,\n//       tradeHistoryOnline,\n//       liquidateHistoryOffline,\n//       liquidateHistoryOnline,\n//     ] = await Promise.all([\n//       getTradeHistoryOffline(chainId, poolAddress, accountAddress),\n//       getTradeHistoryOnline(\n//         chainId,\n//         poolAddress,\n//         accountAddress,\n//         tradeFromBlock + 1\n//       ),\n//       getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\n//       getLiquidateHistoryOnline(\n//         chainId,\n//         poolAddress,\n//         accountAddress,\n//         liquidateFromBlock + 1\n//       ),\n//     ]);\n//     const result = tradeHistoryOnline\n//       .concat(liquidateHistoryOnline)\n//       .concat(tradeHistoryOffline)\n//       .concat(liquidateHistoryOffline);\n//     return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n//   } else {\n//     const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n//     tradeFromBlock = parseInt(initialBlock);\n//     liquidateFromBlock = parseInt(initialBlock);\n//     const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n//       getTradeHistoryOnline(\n//         chainId,\n//         poolAddress,\n//         accountAddress,\n//         tradeFromBlock + 1\n//       ),\n//       getLiquidateHistoryOnline(\n//         chainId,\n//         poolAddress,\n//         accountAddress,\n//         liquidateFromBlock + 1\n//       ),\n//     ]);\n//     const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n//     return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n//   }\n// };\n\n// // get trade history combined from cache and from online pull\n// const getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\n//   // console.log(chainId, poolAddress, accountAddress)\n//   let result = [];\n//   // use dev database\n//   const db = databaseFactory();\n//   const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\n//   const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n//     accountAddress\n//   )}.trade`;\n//   //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n//   const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n//   const count = hexToNumber(res);\n\n//   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n//   const {\n//     multiplier,\n//   } = await perpetualPool.getParameters();\n//   try {\n//     if (count && count >= 0) {\n//       let keyArray = [];\n//       for (let i = count; i > 0; i--) {\n//         const key = `${keyMeta}.${i.toString()}`;\n//         keyArray = keyArray.concat([\n//           `${key}.direction`,\n//           `${key}.baseToken`,\n//           `${key}.price`,\n//           `${key}.notional`,\n//           `${key}.volume`,\n//           `${key}.transactionFee`,\n//           `${key}.transactionHash`,\n//           `${key}.time`,\n//         ]);\n//       }\n//       // console.log(keyArray)\n//       const tradeHistoryLength = keyArray.length / 8;\n//       // console.log(`trade history length: ${tradeHistoryLength}`)\n//       const resp = await db.getValues(keyArray);\n//       for (let i = 0; i < tradeHistoryLength; i++) {\n//         const indexBase = i * 8;\n//         //console.log(resp[indexBase + 6].trim());\n//         const item = {\n//           direction: hexToString(resp[indexBase]).trim(),\n//           baseToken: hexToString(resp[indexBase + 1]).trim(),\n//           price: deriToNatural(resp[indexBase + 2]).toString(),\n//           notional: deriToNatural(resp[indexBase + 3]).toString(),\n//           volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\n//           transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n//           transactionHash: resp[indexBase + 6],\n//           time: hexToNumberString(resp[indexBase + 7]).toString(),\n//         };\n//         result.push(item);\n//       }\n//     } else {\n//       result = [];\n//     }\n//   } catch (err) {\n//     console.log(err);\n//     result = [];\n//   }\n//   return result;\n// };\n\n// get trade history online from the Block number\nexport const getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const {\n    multiplier,\n    feeRatio,\n    minInitialMarginRatio,\n  } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processTradeEvent(\n      perpetualPool,\n      bTokenSymbol,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      minInitialMarginRatio\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get liquidate history online from the Block number\n// export const getLiquidateHistoryOnline = async (\n//   chainId,\n//   poolAddress,\n//   accountAddress,\n//   fromBlock\n// ) => {\n//   const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n//   // console.log(poolAddr, bTokenAddress);\n//   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n//   //perpetualPool.setAccount(accountAddress);\n//   const toBlock = await perpetualPool._getBlockInfo('latest');\n//   fromBlock = parseInt(fromBlock);\n//   const filters = { owner: accountAddress };\n//   const events = await perpetualPool._getPastEvents(\n//     'Liquidate',\n//     filters,\n//     fromBlock,\n//     toBlock.number\n//   );\n//   const { multiplier } = await perpetualPool.getParameters();\n\n//   const result = [];\n//   // console.log(\"events length:\", events.length);\n//   for (let i = 0; i < events.length; i++) {\n//     const item = events[i];\n//     // const info = item.returnValues;\n//     const res = await processLiquidateEvent(\n//       item.returnValues,\n//       item.transactionHash,\n//       bTokenSymbol,\n//       multiplier\n//     );\n//     result.unshift(res);\n//   }\n//   return result;\n// };\n\n// // get trade history combined from cache and from online pull\n// const getLiquidateHistoryOffline = async (\n//   chainId,\n//   poolAddress,\n//   accountAddress\n// ) => {\n//   let result = [];\n//   // use dev database\n//   const db = databaseFactory();\n//   const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\n//   const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n//     accountAddress\n//   )}.liquidate`;\n//   //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n//   const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n//   const count = hexToNumber(res);\n\n//   const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n//   const {\n//     multiplier,\n//   } = await perpetualPool.getParameters();\n//   try {\n//     if (count && count >= 0) {\n//       let keyArray = [];\n//       for (let i = count; i > 0; i--) {\n//         const key = `${keyMeta}.${i.toString()}`;\n//         keyArray = keyArray.concat([\n//           `${key}.direction`,\n//           `${key}.baseToken`,\n//           `${key}.price`,\n//           `${key}.notional`,\n//           `${key}.volume`,\n//           `${key}.transactionFee`,\n//           `${key}.transactionHash`,\n//           `${key}.time`,\n//         ]);\n//       }\n//       // console.log(keyArray)\n//       const liquidateHistoryLength = keyArray.length / 8;\n//       const resp = await db.getValues(keyArray);\n//       for (let i = 0; i < liquidateHistoryLength; i++) {\n//         const indexBase = i * 8;\n//         const item = {\n//           direction: hexToString(resp[indexBase]).trim(),\n//           baseToken: hexToString(resp[indexBase + 1]).trim(),\n//           price: deriToNatural(resp[indexBase + 2]).toString(),\n//           notional: deriToNatural(resp[indexBase + 3]).toString(),\n//           volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\n//           transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n//           transactionHash: resp[indexBase + 6],\n//           time: hexToNumberString(resp[indexBase + 7]).toString(),\n//         };\n//         result.push(item);\n//       }\n//     } else {\n//       result = [];\n//     }\n//   } catch (err) {\n//     console.log(err);\n//     result = [];\n//   }\n//   return result;\n// };\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    let tradeFromBlock, liquidateFromBlock, tradeHistory;\n    const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\n      tradeHistory = res.data.tradeHistory;\n    }\n\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const { multiplier } = await perpetualPool.getParameters();\n    tradeHistory = tradeHistory\n      .filter((i) => i)\n      .map((i) => {\n        return {\n          direction: i.direction.trim(),\n          baseToken: bTokenSymbol,\n          price: deriToNatural(i.price).toString(),\n          notional: deriToNatural(i.notional).toString(),\n          volume: deriToNatural(i.volume).times(multiplier).toString(),\n          transactionFee: deriToNatural(i.transactionFee).toString(),\n          transactionHash: i.transactionHash,\n          time: i.time.toString(),\n        };\n      });\n    if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n      tradeFromBlock = parseInt(initialBlock);\n      liquidateFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  }, [], []);\n};\n","import { perpetualPoolFactory } from '../factory';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { io } from 'socket.io-client';\n\n/** @module apiCache */\n/**\n * fundingRateCache Object\n * @name fundingRateCache\n * @property {function} get - Get the funding rate from cache\n * @property {function} set - set the funding rate cache\n */\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress) {\n      const key = `${chainId}.${contractAddress}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`Cache key is not in resourceMap: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, resource) {\n      const key = `${chainId}.${contractAddress}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const accountAddressCache = (function () {\n  let _accountAddress = '';\n  return {\n    get() {\n      if (_accountAddress === '') {\n        console.log(\"please init 'accountAddress' first\");\n      }\n      return _accountAddress;\n    },\n    set(value) {\n      if (typeof value === 'string' && value !== '') {\n        _accountAddress = value;\n      }\n    },\n  };\n})();\n\n/**\n * priceCache Object\n * @name priceCache\n * @property {function} get - Get the price from cache\n * @property {function} update - Set the price to automatic update during a time interval\n * @property {function} clear - Clear the the automatic update of the price\n */\nexport const priceCache = (function () {\n  let _price = '';\n  let _interval = null;\n  return {\n    get() {\n      if (_price === '') {\n        console.log(\"please init 'price' first\");\n      }\n      return _price;\n    },\n    async _update(poolAddress, symbol) {\n      try {\n        const res = await getPriceFromRest(symbol);\n        if (res !== '') {\n          _price = res;\n        }\n      } catch (err) {\n        console.log(`priceCache.update: ${err}`)\n      }\n    },\n    update(poolAddress, symbol) {\n      const self = this;\n      _interval = setInterval(() => {\n        // console.log('tick')\n        self._update(poolAddress, symbol);\n      }, 3000);\n    },\n    clear() {\n      if (_interval) {\n        clearInterval(_interval);\n      }\n      _price = '';\n    },\n  };\n})();\n\n/**\n * PerpetualPoolParametersCache Object\n * @name PerpetualPoolParametersCache\n * @property {function} get - Get the perpetualPoolParameters from cache\n * @property {function} update - Set the perpetualPoolParameters\n */\n\nexport const PerpetualPoolParametersCache = (function () {\n  let _parameters = {};\n  return {\n    get() {\n      if (!_parameters.multiplier) {\n        console.log(\"please init 'perpetual pool parameters' first\");\n      }\n      return _parameters;\n    },\n    async update(chainId, poolAddress) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      const res = await perpetualPool.getParameters();\n      if (res.multiplier) {\n        _parameters = res;\n      }\n      return res;\n    },\n  };\n})();\n\n// // websocket instance\n// export const wsInstance = (function(){\n//   let _ws = null;\n//   return {\n//     get() {\n//       if (_ws) {\n//         return _ws\n//       } else {\n//         console.log('wsInstance.get() error: ws instance is not init')\n//       }\n//     },\n//     set(url) {\n//       try {\n//         const ws = io(url, {\n//           transports: ['websocket'],\n//           path: '/ws',\n//         });\n//         ws.on('connect', () => {\n//           console.log('hello from ws:', ws.id);\n//         })\n//         if (ws) {\n//           _ws = ws\n//         } else {\n//           console.log('wsInstance.get() error: ws instance is not init')\n//         }\n//       } catch (err) {\n//         console.log('wsInstance.set():', err)\n//       }\n//     },\n//     getOrSet(url) {\n//       if (!_ws) {\n//         this.set(url)\n//       }\n//       return _ws\n//     }\n//   }\n// })();\n","import {\n  validateArgs,\n  naturalWithPercentage,\n  deriToNatural,\n  bg,\n  catchApiError,\n  toChecksumAddress,\n} from '../../shared/utils';\n// import {\n//   bTokenFactory,\n// } from '../../shared/factory';\nimport { getPoolV1Config } from '../../shared/config/pool_v1';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { getPoolInfoApy } from '../../shared/api/database_api';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport {\n  fundingRateCache,\n  PerpetualPoolParametersCache,\n  priceCache,\n} from './api_v1_globals';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  calculateShareValue,\n  calculateMaxRemovableShares,\n  calculateEntryPrice,\n  calculateMarginHeld,\n  calculatePnl,\n  calculateLiquidationPrice,\n  processFundingRate,\n} from '../calculation';\nimport { ERC20Factory } from '../../shared/contract';\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress\n  //accountAddress,\n) => {\n  return catchApiError(async () => {\n    const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    const {\n      multiplier,\n      feeRatio,\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minAddLiquidity,\n      redemptionFeeRatio,\n      fundingRateCoefficient,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      priceDelayAllowance,\n    } = await pPool.getParameters();\n    let symbol = await pPool.symbol();\n    const bTokenSymbol = await bToken.symbol();\n    return {\n      addresses: poolAddress,\n      symbol,\n      bTokenSymbol,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      minAddLiquidity: minAddLiquidity.toString(),\n      redemptionFeeRatio: redemptionFeeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      priceDelayAllowance: priceDelayAllowance.toString(),\n    };\n  });\n};\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\n  return catchApiError(async () => {\n    poolAddress = toChecksumAddress(poolAddress);\n    accountAddress = toChecksumAddress(accountAddress);\n    const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n    const {\n      multiplier,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = await pPool.getParameters();\n    const symbol = await pPool.symbol();\n    const { volume, margin, cost } = await pToken.getPositionInfo(\n      accountAddress\n    );\n    const price = await getPriceFromRest(symbol);\n    if (price === '') {\n      return {\n        price,\n        volume: bg(volume).times(multiplier).toString(),\n        averageEntryPrice: calculateEntryPrice(\n          volume,\n          cost,\n          multiplier\n        ).toString(),\n        margin: margin.toString(),\n        marginHeld: '',\n        unrealizedPnl: '',\n        liquidationPrice: calculateLiquidationPrice(\n          volume,\n          margin,\n          cost,\n          multiplier,\n          minMaintenanceMarginRatio\n        ).toString(),\n      };\n    } else {\n      return {\n        price,\n        volume: bg(volume).times(multiplier).toString(),\n        averageEntryPrice: calculateEntryPrice(\n          volume,\n          cost,\n          multiplier\n        ).toString(),\n        margin: margin.toString(),\n        marginHeld: calculateMarginHeld(\n          price,\n          volume,\n          multiplier,\n          minInitialMarginRatio\n        ).toString(),\n        unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n        liquidationPrice: calculateLiquidationPrice(\n          volume,\n          margin,\n          cost,\n          multiplier,\n          minMaintenanceMarginRatio\n        ).toString(),\n      };\n    }\n  });\n};\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    const { lTokenAddress } = getPoolV1Config(chainId, poolAddress);\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    //pPool.setAccount(accountAddress);\n    const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n    //lToken.setAccount(accountAddress);\n\n    const [lTokenBalance, lTokenTotalSupply, symbol] = await Promise.all([\n      lToken.balanceOf(accountAddress),\n      lToken.totalSupply(),\n      pPool.symbol(),\n    ]);\n    const price = await getPriceFromRest(symbol);\n    const {\n      liquidity,\n      tradersNetCost,\n      tradersNetVolume,\n    } = await pPool.getStateValues();\n    const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n    const poolDynamicEquity = liquidity.plus(\n      tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\n    );\n\n    return {\n      totalSupply: lTokenTotalSupply.toString(),\n      poolLiquidity: liquidity.toString(),\n      shares: lTokenBalance.toString(),\n      shareValue: calculateShareValue(\n        lTokenTotalSupply,\n        poolDynamicEquity\n      ).toString(),\n      maxRemovableShares: calculateMaxRemovableShares(\n        lTokenBalance,\n        lTokenTotalSupply,\n        liquidity,\n        tradersNetVolume,\n        tradersNetCost,\n        multiplier,\n        minPoolMarginRatio,\n        price\n      ).toString(),\n    };\n  });\n};\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    const balance = await bToken.balanceOf(accountAddress);\n    return balance.toString();\n  });\n};\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  return catchApiError(async () => {\n    const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    return await bToken.isUnlocked(accountAddress, poolAddress);\n  });\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage\n) => {\n  return catchApiError(async () => {\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    //pPool.setAccount(accountAddress);\n    const { multiplier } = await pPool.getParameters();\n    const symbol = await pPool.symbol();\n    const price = await getPriceFromRest(symbol);\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .div(bg(leverage))\n      .toString();\n  }, [], '');\n};\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\n  return catchApiError(async () => {\n    // const price = await getBTCUSDPrice(chainId, poolAddress);\n    let price = priceCache.get();\n    let parameters = PerpetualPoolParametersCache.get();\n    if (price === '') {\n      const pPool = perpetualPoolFactory(chainId, poolAddress);\n      const symbol = await pPool.symbol();\n      await priceCache._update(poolAddress, symbol);\n      price = priceCache.get();\n    }\n    // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\n    // const { multiplier, feeRatio } = await pPool.getParameters();\n    if (!parameters.multiplier) {\n      parameters = await PerpetualPoolParametersCache.update(\n        chainId,\n        poolAddress\n      );\n    }\n    //console.log('price', price);\n    const { multiplier, feeRatio } = parameters;\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  });\n};\n\nexport const getFundingRate = async (chainId, poolAddress) => {\n  return catchApiError(async () => {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n    const res = await perpetualPool\n      .getFundingRate()\n      .catch((err) => console.log('getFundingRate', err));\n    fundingRateCache.set(chainId, poolAddress, res);\n    const poolInfo = await getPoolInfoApy(chainId, poolAddress);\n\n    if (res) {\n      const {\n        fundingRate,\n        fundingRatePerBlock,\n        liquidity,\n        tradersNetVolume,\n        multiplier,\n      } = res;\n      const volume = poolInfo.volume24h;\n\n      return {\n        fundingRate0: naturalWithPercentage(fundingRate),\n        fundingRatePerBlock: bg(fundingRatePerBlock).toExponential(10),\n        liquidity: liquidity.toString(),\n        volume: deriToNatural(volume).toString(),\n        tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\n      };\n    }\n  });\n};\n\nexport const getFundingRateCache = async(chainId, poolAddress) => {\n  return fundingRateCache.get(chainId, poolAddress)\n}\n\nexport const getEstimatedFundingRate = async (chainId, poolAddress, newNetVolume) => {\n  return catchApiError(async () => {\n    let fundingRate1;\n    let res;\n    res = fundingRateCache.get(chainId, poolAddress);\n    if (!res) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      res = await perpetualPool.getFundingRate();\n    }\n    if (res) {\n      const parameters = [\n        bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n        res.price,\n        res.multiplier,\n        res.liquidity,\n        res.fundingRateCoefficient,\n      ];\n      if (!validateArgs(...parameters)) {\n        return {\n          fundingRate1: '0',\n        };\n      }\n      // console.log(parameters)\n      fundingRate1 = calculateFundingRate(...parameters);\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\n      return {\n        fundingRate1: naturalWithPercentage(fundingRate1),\n      };\n    }\n  });\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  return catchApiError(async () => {\n    let res;\n    res = fundingRateCache.get(chainId, poolAddress);\n    if (!res) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      res = await perpetualPool.getFundingRate();\n    }\n    if (res) {\n      const { liquidityUsed } = res;\n      return {\n        liquidityUsed0: naturalWithPercentage(liquidityUsed),\n      };\n    }\n  });\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  return catchApiError(async () => {\n    let res;\n    res = fundingRateCache.get(chainId, poolAddress);\n    if (!res) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      res = await perpetualPool\n        .getFundingRate()\n        .catch((err) => console.log('getLiquidityUsed', err));\n    }\n    if (res) {\n      const parameters = [\n        bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n        res.price,\n        res.multiplier,\n        res.liquidity,\n        res.poolMarginRatio,\n      ];\n      if (!validateArgs(...parameters)) {\n        return {\n          liquidityUsed1: '0',\n        };\n      }\n      const liquidityUsed1 = calculateLiquidityUsed(...parameters);\n      return {\n        liquidityUsed1: naturalWithPercentage(liquidityUsed1),\n      };\n    }\n  });\n};\n","import {\n  bg,\n  formatBN,\n  naturalToDeri,\n  deriToNatural,\n} from '../../shared/utils';\nimport {\n  getPoolV1Config,\n} from '../../shared/config';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle'\nimport {\n  calculateMaxRemovableShares,\n  isOrderValid,\n} from '../calculation';\nimport { catchTxApiError } from '../../shared/utils';\nimport { AppError } from '../../shared/error/error';\nimport { ERC20Factory } from '../../shared/contract';\n\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  return catchTxApiError(async () => {\n    const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress, poolAddress);\n\n    return await bToken.unlock(accountAddress, poolAddress);\n  });\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  return catchTxApiError(async () => {\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\n  });\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  return catchTxApiError(async () => {\n    //let res;\n    //const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    //pPool.setAccount(accountAddress);\n    //const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n    //pToken.setAccount(accountAddress);\n\n    // const price = deriToNatural(\n    //   (await getPriceInfoForV1(symbol)).price\n    // ).toString();\n    // const { volume, margin, cost } = await pToken.getPositionInfo(\n    //   accountAddress\n    // );\n    // const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\n\n    // const maxWithdrawMargin = calculateMaxWithdrawMargin(\n    //   price,\n    //   volume,\n    //   margin,\n    //   cost,\n    //   multiplier,\n    //   minInitialMarginRatio\n    // );\n    return await pPool._transact(\n      'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n  });\n};\n\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\n  return catchTxApiError(async () => {\n    const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n    const bToken = ERC20Factory(chainId, bTokenAddress, poolAddress);\n    const decimals = await bToken.decimals();\n    const BONE = 10 ** decimals;\n    amount = formatBN(bg(amount).multipliedBy(BONE));\n    return await bToken._transact('mint', [amount], accountAddress);\n  });\n};\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  return catchTxApiError(async () => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  return await pPool._transact(\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n  })\n};\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares\n) => {\n  return catchTxApiError(async () => {\n    const { lTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n    const price = deriToNatural(\n      (await getPriceInfoForV1(symbol)).price\n    ).toString();\n\n    const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n      lToken.balance(accountAddress),\n      lToken.totalSupply(),\n    ]);\n    const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n    const {\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n    } = await pPool.getStateValues();\n\n    const maxRemovableShares = calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n      multiplier,\n      minPoolMarginRatio,\n      price\n    );\n    if (bg(shares).lte(maxRemovableShares)) {\n      return await pPool._transact(\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(shares)],\n        accountAddress\n      );\n    } else {\n      throw new AppError('UNKOWN_ERROR', 'removeLiquidity');\n    }\n  });\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  return catchTxApiError(async () => {\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minPoolMarginRatio,\n  } = await pPool.getParameters();\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\n  let res;\n  const orderValidation = isOrderValid(\n    price,\n    margin,\n    volume,\n    liquidity,\n    tradersNetVolume,\n    multiplier,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    bg(newVolume),\n    bg(amount)\n  );\n  if (orderValidation.success) {\n      return await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\n        accountAddress\n      );\n  } else {\n    throw new AppError('UNKOWN_ERROR', 'tradeWithMargin');\n  }\n})\n};\n\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\n  return catchTxApiError(async () => {\n    const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n    let { volume } = await pToken.getPositionInfo(accountAddress);\n    volume = volume.negated();\n    if (!volume.eq(0)) {\n      return await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(volume), '0'],\n        accountAddress\n      );\n    } else {\n      //res = { success: false, error: 'no position to close' };\n      throw new AppError('UNKOWN_ERROR', 'closePosition');\n    }\n  });\n};\n","// export shared api\n// import { priceCache, fundingRateCache } from './api_v1_globals';\n\n// export {\n//   mint,\n// } from './contract_transaction_api';\n\n// export v1 api\nimport { getTradeHistory } from './trade_history_api';\n\nimport {\n  getLiquidityInfo,\n  getPositionInfo,\n  isUnlocked,\n  getEstimatedMargin,\n  getEstimatedFee,\n  getEstimatedFundingRate,\n  getEstimatedLiquidityUsed,\n  getWalletBalance,\n  getSpecification,\n  getFundingRate,\n  getLiquidityUsed,\n  getFundingRateCache,\n} from './contract_query_api';\n\n// export {\n//   addLiquidity2,\n//   removeLiquidity2,\n//   tradeWithMargin2,\n//   closePosition2,\n//   depositMargin2,\n//   withdrawMargin2,\n// } from './contract_transaction_api_v2';\n\nimport {\n  unlock,\n  addLiquidity,\n  removeLiquidity,\n  tradeWithMargin,\n  closePosition,\n  depositMargin,\n  withdrawMargin,\n} from './contract_transaction_api';\n\nexport const api = {\n  // mining\n  getLiquidityInfo,\n  addLiquidity,\n  removeLiquidity,\n  // trading\n  getSpecification,\n  getPositionInfo,\n  //getPositionInfos,\n  getWalletBalance,\n  isUnlocked,\n  getEstimatedFee,\n  getEstimatedMargin,\n  getFundingRate,\n  getEstimatedFundingRate,\n  getLiquidityUsed,\n  getEstimatedLiquidityUsed,\n  //getEstimatedTimePrice,\n  getFundingRateCache,\n\n  unlock,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n  // tradeHistory\n  getTradeHistory,\n  // extra for v2\n  //getPoolBTokensBySymbolId,\n  //getFundingFee,\n};\n","import { bg, max } from '../../shared/utils';\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\n// export const calculateMaxWithdrawMargin = (\n//   price,\n//   volume,\n//   margin,\n//   cost,\n//   multiplier,\n//   minInitialMarginRatio\n// ) => {\n//   if (volume.eq(0)) {\n//     return margin;\n//   }\n//   const held = calculateMarginHeld(\n//     price,\n//     volume,\n//     multiplier,\n//     minInitialMarginRatio\n//   );\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n//   return withdrawable;\n// };\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  dynamicCost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = bg(cost).minus(margin);\n  let res = bg(volume).gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  //price,\n  margin,\n  marginHeld,\n  liquidity,\n  liquidityUsed,\n  // multiplier,\n  // minPoolMarginRatio,\n  // newVolume,\n) => {\n  const minMargin = marginHeld;\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\n  //   .div(minPoolMarginRatio)\n  //   .div(price)\n  //   .div(multiplier);\n  if (margin.gte(minMargin)) {\n    // if (\n    //   newVolume.lte(poolMaxVolume) &&\n    //   newVolume.gte(poolMaxVolume.negated())\n    // ) {\n    if (liquidity.minus(liquidityUsed).gte(0)) {\n      return { success: true };\n    }\n    return { success: false, error: 'Pool has insufficient liquidity' };\n  }\n  return { success: false, error: 'Trader has insufficient margin' };\n};\n\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};","import { bg, getDailyBlockNumber, validateArgs } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(multiplier)\n      .times(poolMarginRatio)\n      .div(liquidity)\n      .abs();\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio,\n    ];\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\n  }\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    )\n  ) {\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\n      .times(price)\n      // .times(price)\n      // .times(multiplier)\n      .times(multiplier)\n      .times(fundingRateCoefficient)\n      .div(liquidity);\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    ];\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\n  }\n};\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n\nexport const calculateFundingFee = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  fundingRateCoefficient,\n  dynamicEquity,\n  cumulativeFundingRate,\n  lastCumulativeFundingRate,\n  lastUpdatedBlockNumber,\n  latestBlockNumber,\n  volume,\n) => {\n  if (bg(volume).eq(0)) {\n    return '0'\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      dynamicEquity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    ];\n    if (\n      validateArgs(...args)\n    ) {\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\n        .times(price)\n        .times(multiplier)\n        .times(price)\n        .times(multiplier)\n        .times(fundingRateCoefficient)\n        .div(dynamicEquity)\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\n        .plus(cumulativeFundingRate)\n        .minus(lastCumulativeFundingRate)\n        .times(volume)\n    } else {\n      console.log(`calculateFundingFee: invalid args: ${args}`);\n      return 'NaN'\n    }\n  }\n};","import { bg, max, min } from '../../shared/utils'\n\nexport const calculateBTokenDynamicEquities = (bTokens) => {\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\n  return totalDynamicEquity\n}\n\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  const b = bTokens['0']\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\n  // use 1 as efficient\n  if (\n    !totalDynamicEquity.eq(0) &&\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\n  ) {\n    return { success: false, error: 'Trader has insufficient bToken0' };\n  } else {\n    return { success: true };\n  }\n}\n\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\n  if (bg(amount).gte(userLiquidity)) {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\n  } else {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\n  }\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  let totalCost = bg(0)\n  for (let i=0; i<symbols.length; i++) {\n    const s = symbols[i]\n    if (!bg(s.tradersNetVolume).eq(0)) {\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\n      totalCost = totalCost.plus(cost.abs())\n    }\n  }\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\n  if (\n    !totalCost.eq(0) &&\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\n  ) {\n    return { success: false, error: 'Trader has insufficient liquidity' };\n  } else {\n    return { success: true };\n  }\n}\n\n\nexport const calculateMaxRemovableLiquidity = (\n  bToken,\n  userLiquidity,\n  cost,\n  pnl,\n  restLiquidity,\n  minPoolMarginRatio,\n) => {\n  if (bg(cost).eq(0)) {\n    return userLiquidity;\n  } else {\n    return max(\n      min(\n        bg(bToken.liquidity).minus(\n          bg(minPoolMarginRatio)\n            .times(cost)\n            .plus(pnl)\n            .minus(restLiquidity)\n            .div(bToken.price)\n            .div(bToken.discount)\n        ).times('0.98'),\n        bg(userLiquidity)\n      ),\n      bg(0)\n    );\n  }\n};\n\n// for v1 mining\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\n\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  value,\n  cost,\n  minPoolMarginRatio,\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const removable = bg(liquidity)\n    .plus(cost)\n    .minus(value)\n    .minus(bg(value).abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n","// this file is generated by script, don't modify it !!!\n// import { processMethod } from \"../../shared/utils/index.js\";\n\nimport { bg, toWei, fromWei, deriToNatural, processResult, getBlockInfo } from \"../../shared/utils/index.js\";\nimport { normalizeSymbolUnit, SECONDS_IN_A_DAY } from \"../../shared/config\";\n// import {\n//   processResult,\n// } from \"../../shared/utils/contract.js\";\n//import { range } from '../../shared/utils/lang.js'\nimport { bTokenOracle1Factory, ERC20Factory, offChainOracleFactory } from \"../../shared/contract/factory.js\";\nimport { lTokenFactory, perpetualPoolRouterDpmmFactory, pTokenFactory } from \"./factory.js\";\n\n\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\nimport { calculateDpmmCost, calculateDpmmPrice, calculateK } from \"../../v2_lite_dpmm/calc.js\";\n\nconst range = (n) => {\n  if (typeof n === 'string' && /^\\d+$/.test(n) ) {\n    n = parseInt(n)\n  }\n  return [...Array(n).keys()]\n}\n\nconst addMethods = (klass, fns = []) => {\n  if (fns.length > 0) {\n    for (let i = 0; i < fns.length; i++) {\n      klass = fns[i](klass);\n    }\n    return klass;\n  } else {\n    return klass;\n  }\n};\nconst overrideMethods = (klass, fns = []) => {\n  if (fns.length > 0) {\n    for (let i = 0; i < fns.length; i++) {\n      const fn = fns[i][0]\n      const args = fns[i].slice(1)\n      // console.log(fn, args)\n      klass = fn(klass)(...args);\n    }\n    return klass;\n  } else {\n    return klass;\n  }\n};\nconst processMethod = (klass) => (methodName, propList = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const res = await originMethod.apply(this, args);\n    return processResult(res, propList);\n  };\n  return klass;\n};\n\nconst processTxMethod = (klass) => (methodName, toWeiArgPositions = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    //const prices = await this._getSymbolPrices()\n    let newArgs = args.map((arg, index) =>\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\n    );\n    //newArgs.push(prices)\n    return await originMethod.apply(this, newArgs);\n  };\n  return klass;\n};\n\n\nconst init = (klass) => {\n  klass.prototype.init = async function (isEstimatedApi = false) {\n    await this._init();\n    if (!this.addresses || !this.parameters) {\n      [this.addresses, this.parameters, this.state, this.lengths] =\n        await Promise.all([\n          this.getAddresses(),\n          this.getParameters(),\n          this.getPoolStateValues(),\n          this.getLengths(),\n        ]);\n      this.fundingPeriod = (3 * 24 * 3600).toString();\n      const { pTokenAddress, lTokenAddress, routerAddress } = this.addresses;\n      this.lToken = lTokenFactory(this.chainId, lTokenAddress);\n      this.pToken = pTokenFactory(this.chainId, pTokenAddress);\n      this.router = perpetualPoolRouterDpmmFactory(this.chainId, routerAddress)\n    }\n    if (!isEstimatedApi) {\n      const lengths = await this.getLengths();\n      if (\n        !this.symbols ||\n        !this.bTokens ||\n        this.lengths.toString() !== lengths.toString()\n      ) {\n        this.bTokenIds = range(lengths[0]).map((i) => i.toString());\n        this.activeSymbolIds = range(lengths[1]).map((i) => i.toString());\n        this.bTokens = await Promise.all(\n          this.bTokenIds.reduce(\n            (acc, bTokenId) => [...acc, this.getBToken(bTokenId)],\n            []\n          )\n        );\n        // update bToken price\n        for (let i = 0; i < this.bTokenIds.length; i++) {\n          if (i === 0) {\n            this.bTokens[i].price = \"1\";\n          } else {\n            // this.bTokens[i].price = await offChainOracleFactory(\n            //   this.chainId,\n            //   this.bTokens[i].oracleAddress\n            // ).getPrice();\n            this.bTokens[i].price = await bTokenOracle1Factory(\n              this.chainId,\n              this.bTokens[i].oracleAddress\n            ).getPrice();\n          }\n          this.bTokens[i].equity = bg(this.bTokens[i].liquidity)\n            .times(this.bTokens[i].price)\n            .times(this.bTokens[i].discount)\n            .plus(this.bTokens[i].pnl)\n            .toString();\n        }\n        this.bTokenSymbols = await Promise.all(\n          this.bTokens.reduce(\n            (acc, bToken) => [\n              ...acc,\n              ERC20Factory(this.chainId, bToken.bTokenAddress).symbol(),\n            ],\n            []\n          )\n        );\n        this.symbols = await Promise.all(\n          this.activeSymbolIds.reduce(\n            (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n            []\n          )\n        );\n        this.activeSymbolNames = this.symbols.map((s) => s.symbol);\n\n        // init\n        this.positions = [];\n        this.userState = {};\n        this.offChainOracleSymbolIds = [];\n        this.offChainOracleSymbolNames = [];\n\n        await this.getLiquidity()\n      }\n    }\n  };\n  return klass;\n};\nconst getConfig = (klass) => {\n  klass.prototype.getConfig = async function () {\n    return {\n      pool: this.contractAddress,\n      pToken: this.addresses.pTokenAddress,\n      lToken: this.addresses.lTokenAddress,\n      router: this.addresses.routerAddress,\n      // bTokenSymbols: this.bTokenSymbols,\n      bTokens: this.bTokens.map((b, index) => ({\n        bTokenId: index.toString(),\n        bTokenSymbol: this.bTokenSymbols[index].toUpperCase(),\n        bToken: b.bTokenAddress,\n      })),\n      symbols: this.symbols.map((s, index) => ({\n        symbolId: index.toString(),\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      initialBlock: this.initialBlock,\n      type: \"perpetual\",\n      version: 'v2',\n      versionId: \"v2_dpmm\",\n      chainId: this.chainId,\n    };\n  };\n  return klass;\n};\n\nconst getLiquidity = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype.getLiquidity = async function () {\n    await this._init()\n    const res = this.bTokens.reduce((acc, b) => acc.plus(b.equity), bg(0)).toString()\n    this.state = this.state || {}\n    this.state.liquidity = res\n    return res\n  }\n  return klass\n}\n\nexport const getLastTimestamp = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype.getLastTimestamp = async function () {\n    const res = await this._call('getPoolStateValues', []);\n      return res[0]\n    }\n  return klass\n}\nexport const getProtocolFeeAccrued = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype.getProtocolFeeAccrued = async function () {\n    const res = await this._call('getPoolStateValues', []);\n      return fromWei(res[1])\n    }\n  return klass\n}\n\n// getStateValues\nconst getStateValues = (klass) => {\n  klass.prototype.getStateValues = async function () {\n    const res = await this.getPoolStateValues()\n    // update\n    this.state= { ...this.state, ...res}\n    return this.state\n  }\n  return klass\n}\n\nconst getBTokens = (klass) => {\n  klass.prototype.getBTokens = async function (bTokenId) {\n    const bTokenIds = bTokenId ? [bTokenId] : this.bTokenIds\n    const bTokens = await Promise.all(\n      bTokenIds.reduce(\n        (acc, bTokenId) => [...acc, this.getBToken(bTokenId)],\n        []\n      )\n    );\n    // update bToken price\n    for (let i = 0; i < this.bTokenIds.length; i++) {\n      if (i === 0) {\n        bTokens[i].price = \"1\";\n      } else {\n        bTokens[i].price = await offChainOracleFactory(\n          this.chainId,\n          this.bTokens[i].oracleAddress\n        ).getPrice();\n      }\n      bTokens[i].equity = bg(this.bTokens[i].liquidity)\n        .times(this.bTokens[i].price)\n        .times(this.bTokens[i].discount)\n        .plus(this.bTokens[i].pnl)\n        .toString();\n    }\n\n    // update\n    if (bTokenId) {\n      const bTokenIndex = this.bTokenIds.indexOf(bTokenId)\n      if (bTokenIndex > -1) {\n        this.bTokens[bTokenIndex] = bTokens[0]\n      }\n    } else {\n      this.bTokens = bTokens\n    }\n    return bTokens\n  };\n  return klass\n};\n\n// getSymbols()\nconst getSymbols = (klass) => {\n  klass.prototype.getSymbols = async function (symbolId) {\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\n    const symbols = await Promise.all(\n      symbolIds.reduce(\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n        []\n      )\n    );\n\n    const indexPrices = await Promise.all(\n      symbols.map((s) => {\n        const oracleAddress = this.offChainOracleSymbolIds.includes(s.symbolId)\n          ? ''\n          : s.oracleAddress;\n        return getOraclePriceFromCache2.get(\n          this.chainId,\n          s.symbol,\n          oracleAddress\n        );\n      })\n    );\n    symbols.forEach((s, index) => {\n      s.indexPrice = indexPrices[index];\n      s.tradersNetPosition = bg(s.tradersNetVolume).times(s.multiplier).toString();\n      s.notional = bg(s.tradersNetPosition).abs().times(s.indexPrice).toString(),\n      s.K = calculateK(s.indexPrice, this.state.liquidity, s.alpha).toString();\n      s.dpmmPrice = calculateDpmmPrice(\n        s.indexPrice,\n        s.K,\n        s.tradersNetVolume,\n        s.multiplier\n      );\n\n      const pnl = calculateDpmmCost(\n        s.indexPrice,\n        s.K,\n        s.tradersNetVolume,\n        s.multiplier,\n        bg(s.tradersNetVolume).negated().toString()\n      )\n        .negated()\n        .minus(s.tradersNetCost);\n      const ratePerSecond = bg(s.dpmmPrice)\n        .minus(s.indexPrice)\n        .times(s.multiplier)\n        .div(this.fundingPeriod)\n        .toString();\n      const diff = bg(Math.floor(Date.now() / 1000)).minus(\n        this.state.lastTimestamp\n      );\n      s.fundingPerSecond = ratePerSecond\n      s.funding = bg(ratePerSecond).times(SECONDS_IN_A_DAY).toString()\n      s.pnl = pnl.toString()\n      s.undistributedPnl = bg(s.distributedUnrealizedPnl)\n        .minus(pnl)\n        .plus(bg(ratePerSecond).times(diff).times(s.tradersNetVolume))\n        .toString();\n    });\n\n    // update\n    if (symbolId) {\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\n      this.symbols[symbolIndex] = symbols[0]\n    } else {\n      this.symbols = symbols\n    }\n    \n    return symbols\n  };\n  return klass\n};\n\n// get traders positions\nconst getPositions = (klass) => {\n  klass.prototype.getPositions = async function (account, symbolId) {\n    const symbolIds = symbolId ? [symbolId] : this.activeSymbolIds\n    const positions = await Promise.all(\n      symbolIds.reduce(\n        (acc, symbolId) => [...acc, this.pToken.getPosition(account, symbolId)],\n        []\n      )\n    );\n    const timeDiff = bg(Math.floor(Date.now() / 1000)).minus(\n      this.state.lastTimestamp\n    );\n    positions.forEach((p, index) => {\n      const symbol = this.symbols[index];\n      p.fundingAccrued = bg(p.volume)\n        .times(\n          bg(symbol.cumulativeFundingRate)\n            .plus(bg(timeDiff).times(this.symbols[index].fundingPerSecond))\n            .minus(p.lastCumulativeFundingRate)\n        )\n        .toString();\n      p.traderPnl = calculateDpmmCost(\n        symbol.indexPrice,\n        symbol.K,\n        symbol.tradersNetVolume,\n        symbol.multiplier,\n        bg(p.volume).negated().toString()\n      )\n        .negated()\n        .minus(p.cost).toString();\n\n      p.notional = bg(p.volume).abs().times(symbol.indexPrice).times(symbol.multiplier).toString()\n    });\n\n    // update\n    if (symbolId) {\n      const symbolIndex = this.activeSymbolIds.indexOf(symbolId)\n      if (symbolIndex > -1) {\n        this.positions[symbolIndex] = positions[0]\n      }\n    } else {\n      this.positions = positions\n    }\n\n    return positions\n  };\n  return klass\n};\n\nconst isBTokensUpdated = (klass) => {\n  klass.prototype.isBTokensUpdated = function() {\n    return Array.isArray(this.bTokens) && this.bTokens.length > 0 && this.bTokens[0].price != null\n  }\n  return klass\n}\nconst isSymbolsUpdated = (klass) => {\n  klass.prototype.isSymbolsUpdated = function() {\n    return Array.isArray(this.symbols) && this.symbols.length > 0 && this.symbols[0].indexPrice != null\n  }\n  return klass\n}\nconst isPositionsUpdated = (klass) => {\n  klass.prototype.isPositionsUpdated = function() {\n    return Array.isArray(this.positions) && this.positions.length > 0 && this.positions[0].fundingAccrued != null\n  }\n  return klass\n}\n\nconst getDynamicEquity = (klass) => {\n  klass.prototype['getDynamicEquity'] = async function() {\n    if (!this.isSymbolsUpdated()) {\n      await this.getSymbols();\n    }\n    //console.log(this.symbols)\n    const res = bg(this.state.liquidity)\n      .plus(\n        this.symbols.reduce((acc, s) => acc.plus(s.undistributedPnl), bg(0))\n      )\n      .toString();\n    this.state.dynamicEquity = res;\n    return res;\n  }\n  return klass\n}\n\nconst getTraderLiquidity = (klass) => {\n  klass.prototype[\"getTraderLiquidity\"] = async function(account) {\n    return await this.lToken.balanceOf(account)\n  }\n  return klass\n}\n\nconst getPoolRequiredMargin = (klass) => {\n  klass.prototype['getPoolRequiredMargin'] = async function () {\n    if (!this.isSymbolsUpdated()) {\n      await this.getSymbols()\n    }\n    const { minPoolMarginRatio } = this.parameters;\n    return this.symbols\n      .reduce(\n        (acc, s) =>\n          acc.plus(\n            bg(s.notional)\n          ),\n        bg(0)\n      )\n      .times(minPoolMarginRatio).toString()\n  };\n  return klass\n}\n\nconst getTraderMarginStatus = (klass) => {\n  klass.prototype['getTraderMarginStatus'] = async function (account) {\n    if (!this.isBTokensUpdated()) {\n      await this.getSymbols()\n    }\n    if (!this.isSymbolsUpdated()) {\n      await this.getSymbols()\n    }\n    if (!this.isPositionsUpdated()) {\n      await this.getPositions(account)\n    }\n    if (!this.userState.margins) {\n      this.userState.margins = await this.pToken.getMargins(account);\n    }\n\n    this.userState.totapPnl = this.positions.reduce((acc, p) => acc.plus(p.traderPnl), bg(0)).toString()\n    //this.userState.totalEquity = bg(this.userState.totalPnl).plus(this.userState.margins[0])\n    this.userState.totalEquity = this.userState.margins.reduce(\n      (acc, m, i) =>\n        acc.plus(\n          bg(m).times(this.bTokens[i].price).times(this.bTokens[i].discount)\n        ),\n      bg(this.userState.totalPnl)\n    );\n\n    this.userState.totalNotional = this.positions.reduce(\n      (acc, p) => acc.plus(p.notional),\n      bg(0)\n    );\n\n    return [this.userState.totalEquity, this.userState.totalNotional];\n  };\n  return klass\n}\n\nconst formatTradeEvent = (klass) => {\n  klass.prototype['formatTradeEvent'] = async function (event) {\n    const info = event.returnValues;\n    const tradeVolume = deriToNatural(info.tradeVolume);\n    const block = await getBlockInfo(this.chainId, event.blockNumber);\n    const symbolId = info.symbolId;\n    const index = this.activeSymbolIds.indexOf(symbolId);\n    const symbol = this.symbols[index];\n    const tradeFee = info.tradeFee;\n\n    const direction =\n      tradeFee !== '-1'\n        ? bg(tradeVolume).gt(0)\n          ? 'LONG'\n          : 'SHORT'\n        : 'LIQUIDATION';\n    const price = bg(info.tradeCost)\n      .div(info.tradeVolume)\n      .div(symbol.multiplier)\n      .toString();\n    const notional = bg(tradeVolume)\n      .abs()\n      .times(price)\n      .times(symbol.multiplier)\n      .toString();\n\n    const res = {\n      symbolId: info.symbolId,\n      symbol: symbol.symbol,\n      trader: info.trader,\n      direction,\n      volume: bg(tradeVolume).abs().toString(),\n      price: price,\n      indexPrice: deriToNatural(info.indexPrice).toString(),\n      notional: notional,\n      transactionFee:\n        tradeFee === '-1' ? '0' : deriToNatural(tradeFee).toString(),\n      transactionHash: event.transactionHash,\n      time: block.timestamp * 1000,\n      extra: {},\n    };\n    return res;\n  };\n  return klass;\n};\n\n\nexport const perpetualPoolDpmmAdapter = (klass) => {\n    // klass = processMethod(klass, 'symbol', []);\n    klass = addMethods(klass, [\n        init,\n        getConfig,\n        getLiquidity,\n        getLastTimestamp,\n        getProtocolFeeAccrued,\n        getStateValues,\n        getBTokens,\n        getSymbols,\n        getPositions,\n        isBTokensUpdated,\n        isSymbolsUpdated,\n        isPositionsUpdated,\n        getDynamicEquity,\n        getTraderLiquidity,\n        getTraderMarginStatus,\n        getPoolRequiredMargin,\n        formatTradeEvent,\n    ])\n    klass = overrideMethods(klass, [\n      [\n        processMethod,\n        \"getParameters\",\n        [\n          \"initialMarginRatio\",\n          \"liquidationCutRatio\",\n          \"maintenanceMarginRatio\",\n          \"maxLiquidationReward\",\n          \"minBToken0Ratio\",\n          \"minPoolMarginRatio\",\n          \"protocolFeeCollectRatio\",\n        ],\n      ],\n      [\n        processMethod,\n        \"getBToken\",\n        [\"discount\", \"price\", \"liquidity\", \"pnl\", \"cumulativePnl\"],\n      ],\n      [\n        processMethod,\n        \"getSymbol\",\n        [\n          \"multiplier\",\n          \"feeRatio\",\n          //\"fundingRateCoefficient\",\n          \"alpha\",\n          \"distributedUnrealizedPnl\",\n          //\"price\",\n          \"cumulativeFundingRate\",\n          \"tradersNetVolume\",\n          \"tradersNetCost\",\n        ],\n      ],\n      [processMethod, \"getPoolStateValues\", [\"protocolFeeAccrued\"]],\n    ]);\n    return klass\n}\nexport const perpetualPoolRouterDpmmAdapter = (klass) => {\n  // klass = processMethod(klass, 'symbol', []);\n  klass = overrideMethods(klass, [\n    [processTxMethod, 'addLiquidity', ['2']],\n    //[processTxMethod, 'addLiquidityWithPrices', ['2']],\n    [processTxMethod, 'removeLiquidity', ['2']],\n    //[processTxMethod, 'removeLiquidityWithPrices', ['2']],\n    [processTxMethod, 'addMargin', ['2']],\n    //[processTxMethod, 'addMarginWithPrices', ['2']],\n    [processTxMethod, 'removeMargin', ['2']],\n    //[processTxMethod, 'removeMarginWithPrices', ['2']],\n    [processTxMethod, 'trade', ['2']],\n    //[processTxMethod, 'tradeWithPrices', ['2']],\n  ]);\n  return klass;\n};\n\nexport const lTokenAdapter = (klass) => {\n  // klass = processMethod(klass, 'symbol', []);\n  klass = overrideMethods(klass, [\n    [processMethod, 'getAsset', ['liquidity', 'pnl', 'lastCumulativePnl']],\n    [processMethod, 'getAssets', ['liquidity', 'pnl', 'lastCumulativePnl']],\n  ]);\n  return klass;\n};\n\nexport const pTokenAdapter = (klass) => {\n  klass = overrideMethods(klass, [\n    [processMethod, 'getMargins'],\n    [\n      processMethod,\n      'getPosition',\n      ['cost', 'volume', 'lastCumulativeFundingRate'],\n    ],\n    [\n      processMethod,\n      'getPositions',\n      ['cost', 'volume', 'lastCumulativeFundingRate'],\n    ],\n  ]);\n  return klass;\n};","// this file is generated by script, don't modify it !!!\nexport const lTokenAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"numBTokens_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"ApprovalForAll\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"liquidity\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"pnl\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"lastCumulativePnl\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdateAsset\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"exists\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getApproved\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getAsset\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct ILToken.Asset\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getAssets\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct ILToken.Asset[]\",\n                \"name\": \"\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getTokenId\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isApprovedForAll\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"numBTokens\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ownerOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bytes\",\n                \"name\": \"data\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"setApprovalForAll\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"num\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setNumBTokens\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes4\",\n                \"name\": \"interfaceId\",\n                \"type\": \"bytes4\"\n            }\n        ],\n        \"name\": \"supportsInterface\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalMinted\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct ILToken.Asset\",\n                \"name\": \"asset\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"updateAsset\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { lTokenAbi } from '../abi/lTokenAbi.js'\n\nexport class LToken extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, lTokenAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return deleteIndexedKey(res)\n  }\n  //  async exists(owner) {\n  //    const res = await this._call('exists', [owner])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async getApproved(tokenId) {\n  //    const res = await this._call('getApproved', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getAsset(owner, bTokenId) {\n    const res = await this._call('getAsset', [owner, bTokenId])\n    return deleteIndexedKey(res)\n  }\n  async getAssets(owner) {\n    const res = await this._call('getAssets', [owner])\n    return deleteIndexedKey(res)\n  }\n  //  async getTokenId(owner) {\n  //    const res = await this._call('getTokenId', [owner])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async isApprovedForAll(owner, operator) {\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async name() {\n  //    const res = await this._call('name', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async numBTokens() {\n  //    const res = await this._call('numBTokens', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async ownerOf(tokenId) {\n  //    const res = await this._call('ownerOf', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async pool() {\n  //    const res = await this._call('pool', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async supportsInterface(interfaceId) {\n  //    const res = await this._call('supportsInterface', [interfaceId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  //  async totalMinted() {\n  //    const res = await this._call('totalMinted', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async approve(accountAddress, operator, tokenId) {\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\n  //  }\n  //  async burn(accountAddress, owner) {\n  //    return await this._transact('burn', [owner], accountAddress)\n  //  }\n  //  async mint(accountAddress, owner) {\n  //    return await this._transact('mint', [owner], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  //  }\n  //  async setApprovalForAll(accountAddress, operator, approved) {\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  //  }\n  //  async setNumBTokens(accountAddress, num) {\n  //    return await this._transact('setNumBTokens', [num], accountAddress)\n  //  }\n  //  async setPool(accountAddress, newPool) {\n  //    return await this._transact('setPool', [newPool], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async updateAsset(accountAddress, owner, bTokenId, asset) {\n  //    return await this._transact('updateAsset', [owner, bTokenId, asset], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const pTokenAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"numSymbols_\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"numBTokens_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"ApprovalForAll\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"amount\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdateMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"volume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"cost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"lastCumulativeFundingRate\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"UpdatePosition\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"exists\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getApproved\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getMargin\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getMargins\",\n        \"outputs\": [\n            {\n                \"internalType\": \"int256[]\",\n                \"name\": \"\",\n                \"type\": \"int256[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getPosition\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPToken.Position\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getPositions\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPToken.Position[]\",\n                \"name\": \"\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getTokenId\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isApprovedForAll\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"numBTokens\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"numSymbols\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ownerOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bytes\",\n                \"name\": \"data\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"safeTransferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"setApprovalForAll\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"num\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setNumBTokens\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"num\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setNumSymbols\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes4\",\n                \"name\": \"interfaceId\",\n                \"type\": \"bytes4\"\n            }\n        ],\n        \"name\": \"supportsInterface\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalMinted\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"amount\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"updateMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"int256[]\",\n                \"name\": \"margins\",\n                \"type\": \"int256[]\"\n            }\n        ],\n        \"name\": \"updateMargins\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"volume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"lastCumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPToken.Position\",\n                \"name\": \"position\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"updatePosition\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { pTokenAbi } from '../abi/pTokenAbi.js'\n\nexport class PToken extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, pTokenAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return deleteIndexedKey(res)\n  }\n  async exists(owner) {\n    const res = await this._call('exists', [owner])\n    return deleteIndexedKey(res)\n  }\n  //  async getApproved(tokenId) {\n  //    const res = await this._call('getApproved', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getMargin(owner, bTokenId) {\n    const res = await this._call('getMargin', [owner, bTokenId])\n    return deleteIndexedKey(res)\n  }\n  async getMargins(owner) {\n    const res = await this._call('getMargins', [owner])\n    return deleteIndexedKey(res)\n  }\n  async getPosition(owner, symbolId) {\n    const res = await this._call('getPosition', [owner, symbolId])\n    return deleteIndexedKey(res)\n  }\n  async getPositions(owner) {\n    const res = await this._call('getPositions', [owner])\n    return deleteIndexedKey(res)\n  }\n  //  async getTokenId(owner) {\n  //    const res = await this._call('getTokenId', [owner])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async isApprovedForAll(owner, operator) {\n  //    const res = await this._call('isApprovedForAll', [owner, operator])\n  //    return deleteIndexedKey(res)\n  //  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  async numBTokens() {\n    const res = await this._call('numBTokens', [])\n    return deleteIndexedKey(res)\n  }\n  async numSymbols() {\n    const res = await this._call('numSymbols', [])\n    return deleteIndexedKey(res)\n  }\n  //  async ownerOf(tokenId) {\n  //    const res = await this._call('ownerOf', [tokenId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return deleteIndexedKey(res)\n  }\n  //  async supportsInterface(interfaceId) {\n  //    const res = await this._call('supportsInterface', [interfaceId])\n  //    return deleteIndexedKey(res)\n  //  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalMinted() {\n    const res = await this._call('totalMinted', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async approve(accountAddress, operator, tokenId) {\n  //    return await this._transact('approve', [operator, tokenId], accountAddress)\n  //  }\n  //  async burn(accountAddress, owner) {\n  //    return await this._transact('burn', [owner], accountAddress)\n  //  }\n  //  async mint(accountAddress, owner) {\n  //    return await this._transact('mint', [owner], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  //  }\n  //  async setApprovalForAll(accountAddress, operator, approved) {\n  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  //  }\n  //  async setNumBTokens(accountAddress, num) {\n  //    return await this._transact('setNumBTokens', [num], accountAddress)\n  //  }\n  //  async setNumSymbols(accountAddress, num) {\n  //    return await this._transact('setNumSymbols', [num], accountAddress)\n  //  }\n  //  async setPool(accountAddress, newPool) {\n  //    return await this._transact('setPool', [newPool], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, tokenId) {\n  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  //  }\n  //  async updateMargin(accountAddress, owner, bTokenId, amount) {\n  //    return await this._transact('updateMargin', [owner, bTokenId, amount], accountAddress)\n  //  }\n  //  async updateMargins(accountAddress, owner, margins) {\n  //    return await this._transact('updateMargins', [owner, margins], accountAddress)\n  //  }\n  //  async updatePosition(accountAddress, owner, symbolId, position) {\n  //    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const perpetualPoolAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256[9]\",\n                \"name\": \"parameters\",\n                \"type\": \"uint256[9]\"\n            },\n            {\n                \"internalType\": \"address[4]\",\n                \"name\": \"addresses\",\n                \"type\": \"address[4]\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AddLiquidity\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AddMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"liquidator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"reward\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Liquidate\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"collector\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ProtocolFeeCollection\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"RemoveLiquidity\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"RemoveMargin\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"indexPrice\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeCost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"int256\",\n                \"name\": \"tradeFee\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"Trade\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"bTokenAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"swapperAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"decimals\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"discount\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\n                \"name\": \"info\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"addBToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"string\",\n                        \"name\": \"symbol\",\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"multiplier\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"feeRatio\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"alpha\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"distributedUnrealizedPnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetVolume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetCost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\n                \"name\": \"info\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"name\": \"addSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"approveBTokenForTargetPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"collectProtocolFee\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getAddresses\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"pTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"routerAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"protocolFeeCollector\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getBToken\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"bTokenAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"swapperAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"decimals\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"discount\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"liquidity\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"pnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativePnl\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPool.BTokenInfo\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getLengths\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getParameters\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"decimals0\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"minBToken0Ratio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"minPoolMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"initialMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"maintenanceMarginRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"minLiquidationReward\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"maxLiquidationReward\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"liquidationCutRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeCollectRatio\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPoolStateValues\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeAccrued\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getSymbol\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"string\",\n                        \"name\": \"symbol\",\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"oracleAddress\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"multiplier\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"feeRatio\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"alpha\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"distributedUnrealizedPnl\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetVolume\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"tradersNetCost\",\n                        \"type\": \"int256\"\n                    },\n                    {\n                        \"internalType\": \"int256\",\n                        \"name\": \"cumulativeFundingRate\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPool.SymbolInfo\",\n                \"name\": \"\",\n                \"type\": \"tuple\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getSymbolOracle\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"liquidator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sourcePool\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"balance\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"bTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"swapperAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"decimals\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"discount\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"liquidity\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"pnl\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"cumulativePnl\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"migrateBToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"protocolFeeAccrued\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"migratePoolStateValues\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"multiplier\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"alpha\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"distributedUnrealizedPnl\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradersNetVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradersNetCost\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"cumulativeFundingRate\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"migrateSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lp\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"swapperAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"discount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setBTokenParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"targetPool\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPoolForLTokenAndPToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setSymbolParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"trade\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { perpetualPoolAbi } from '../abi/perpetualPoolAbi.js'\n\nexport class PerpetualPool extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, perpetualPoolAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async getAddresses() {\n    const res = await this._call('getAddresses', [])\n    return deleteIndexedKey(res)\n  }\n  async getBToken(bTokenId) {\n    const res = await this._call('getBToken', [bTokenId])\n    return deleteIndexedKey(res)\n  }\n  async getLengths() {\n    const res = await this._call('getLengths', [])\n    return deleteIndexedKey(res)\n  }\n  async getParameters() {\n    const res = await this._call('getParameters', [])\n    return deleteIndexedKey(res)\n  }\n  async getPoolStateValues() {\n    const res = await this._call('getPoolStateValues', [])\n    return deleteIndexedKey(res)\n  }\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId])\n    return deleteIndexedKey(res)\n  }\n  //  async getSymbolOracle(symbolId) {\n  //    const res = await this._call('getSymbolOracle', [symbolId])\n  //    return deleteIndexedKey(res)\n  //  }\n\n  // tx\n  //  async addBToken(accountAddress, info) {\n  //    return await this._transact('addBToken', [info], accountAddress)\n  //  }\n  //  async addLiquidity(accountAddress, lp, bTokenId, bAmount) {\n  //    return await this._transact('addLiquidity', [lp, bTokenId, bAmount], accountAddress)\n  //  }\n  //  async addMargin(accountAddress, trader, bTokenId, bAmount) {\n  //    return await this._transact('addMargin', [trader, bTokenId, bAmount], accountAddress)\n  //  }\n  //  async addSymbol(accountAddress, info) {\n  //    return await this._transact('addSymbol', [info], accountAddress)\n  //  }\n  //  async approveBTokenForTargetPool(accountAddress, bTokenId, targetPool) {\n  //    return await this._transact('approveBTokenForTargetPool', [bTokenId, targetPool], accountAddress)\n  //  }\n  //  async collectProtocolFee(accountAddress) {\n  //    return await this._transact('collectProtocolFee', [], accountAddress)\n  //  }\n  //  async liquidate(accountAddress, liquidator, trader) {\n  //    return await this._transact('liquidate', [liquidator, trader], accountAddress)\n  //  }\n  //  async migrateBToken(accountAddress, sourcePool, balance, bTokenAddress, swapperAddress, oracleAddress, decimals, discount, liquidity, pnl, cumulativePnl) {\n  //    return await this._transact('migrateBToken', [sourcePool, balance, bTokenAddress, swapperAddress, oracleAddress, decimals, discount, liquidity, pnl, cumulativePnl], accountAddress)\n  //  }\n  //  async migratePoolStateValues(accountAddress, lastTimestamp, protocolFeeAccrued) {\n  //    return await this._transact('migratePoolStateValues', [lastTimestamp, protocolFeeAccrued], accountAddress)\n  //  }\n  //  async migrateSymbol(accountAddress, symbol, oracleAddress, multiplier, feeRatio, alpha, distributedUnrealizedPnl, tradersNetVolume, tradersNetCost, cumulativeFundingRate) {\n  //    return await this._transact('migrateSymbol', [symbol, oracleAddress, multiplier, feeRatio, alpha, distributedUnrealizedPnl, tradersNetVolume, tradersNetCost, cumulativeFundingRate], accountAddress)\n  //  }\n  //  async removeLiquidity(accountAddress, lp, bTokenId, bAmount) {\n  //    return await this._transact('removeLiquidity', [lp, bTokenId, bAmount], accountAddress)\n  //  }\n  //  async removeMargin(accountAddress, trader, bTokenId, bAmount) {\n  //    return await this._transact('removeMargin', [trader, bTokenId, bAmount], accountAddress)\n  //  }\n  //  async setBTokenParameters(accountAddress, bTokenId, swapperAddress, oracleAddress, discount) {\n  //    return await this._transact('setBTokenParameters', [bTokenId, swapperAddress, oracleAddress, discount], accountAddress)\n  //  }\n  //  async setPoolForLTokenAndPToken(accountAddress, targetPool) {\n  //    return await this._transact('setPoolForLTokenAndPToken', [targetPool], accountAddress)\n  //  }\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\n  //  }\n  //  async trade(accountAddress, trader, symbolId, tradeVolume) {\n  //    return await this._transact('trade', [trader, symbolId, tradeVolume], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const perpetualPoolRouterAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"lTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"pTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"liquidatorQualifierAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"oldController\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"newController\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ChangeController\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"migrationTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ExecuteMigration\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"migrationTimestamp\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"source\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"PrepareMigration\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"bTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"swapperAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"discount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addBToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"addLiquidityWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"addMarginWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"multiplier\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"addSymbol\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"approveMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimNewController\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"controller\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sourceRouter\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"executeMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sourceRouter\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"lastTimestamp\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"executeMigrationWithTimestamp\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"pTokenId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"pTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"liquidateWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"trader\",\n                \"type\": \"address\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"liquidateWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"liquidatorQualifier\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"migrationDestination\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"migrationTimestamp\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"target\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"graceDays\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"prepareMigration\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeLiquidity\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"removeLiquidityWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"removeMargin\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"removeMarginWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"bTokenId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"swapperAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"discount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setBTokenParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"qualifierAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setLiquidatorQualifier\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newController\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setNewController\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"poolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"oracleAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"feeRatio\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"alpha\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setSymbolParameters\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"trade\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"symbolId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"tradeVolume\",\n                \"type\": \"int256\"\n            },\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"symbolId\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"timestamp\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"price\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint8\",\n                        \"name\": \"v\",\n                        \"type\": \"uint8\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"r\",\n                        \"type\": \"bytes32\"\n                    },\n                    {\n                        \"internalType\": \"bytes32\",\n                        \"name\": \"s\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\",\n                \"name\": \"infos\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"name\": \"tradeWithPrices\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { perpetualPoolRouterAbi } from '../abi/perpetualPoolRouterAbi.js'\n\nexport class PerpetualPoolRouter extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async controller() {\n    const res = await this._call('controller', [])\n    return deleteIndexedKey(res)\n  }\n  //  async liquidatorQualifier() {\n  //    const res = await this._call('liquidatorQualifier', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async migrationDestination() {\n  //    const res = await this._call('migrationDestination', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async migrationTimestamp() {\n  //    const res = await this._call('migrationTimestamp', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async addBToken(accountAddress, bTokenAddress, swapperAddress, oracleAddress, discount) {\n  //    return await this._transact('addBToken', [bTokenAddress, swapperAddress, oracleAddress, discount], accountAddress)\n  //  }\n  async addLiquidity(accountAddress, bTokenId, bAmount) {\n    return await this._transact('addLiquidity', [bTokenId, bAmount], accountAddress)\n  }\n  async addLiquidityWithPrices(accountAddress, bTokenId, bAmount, infos) {\n    return await this._transact('addLiquidityWithPrices', [bTokenId, bAmount, infos], accountAddress)\n  }\n  async addMargin(accountAddress, bTokenId, bAmount) {\n    return await this._transact('addMargin', [bTokenId, bAmount], accountAddress)\n  }\n  async addMarginWithPrices(accountAddress, bTokenId, bAmount, infos) {\n    return await this._transact('addMarginWithPrices', [bTokenId, bAmount, infos], accountAddress)\n  }\n  //  async addSymbol(accountAddress, symbol, oracleAddress, multiplier, feeRatio, alpha) {\n  //    return await this._transact('addSymbol', [symbol, oracleAddress, multiplier, feeRatio, alpha], accountAddress)\n  //  }\n  //  async approveMigration(accountAddress) {\n  //    return await this._transact('approveMigration', [], accountAddress)\n  //  }\n  //  async claimNewController(accountAddress) {\n  //    return await this._transact('claimNewController', [], accountAddress)\n  //  }\n  //  async executeMigration(accountAddress, sourceRouter) {\n  //    return await this._transact('executeMigration', [sourceRouter], accountAddress)\n  //  }\n  //  async executeMigrationWithTimestamp(accountAddress, sourceRouter, lastTimestamp) {\n  //    return await this._transact('executeMigrationWithTimestamp', [sourceRouter, lastTimestamp], accountAddress)\n  //  }\n  async liquidate(accountAddress, trader) {\n    return await this._transact('liquidate', [trader], accountAddress)\n  }\n  async liquidateWithPrices(accountAddress, trader, infos) {\n    return await this._transact('liquidateWithPrices', [trader, infos], accountAddress)\n  }\n  //  async prepareMigration(accountAddress, target, graceDays) {\n  //    return await this._transact('prepareMigration', [target, graceDays], accountAddress)\n  //  }\n  async removeLiquidity(accountAddress, bTokenId, bAmount) {\n    return await this._transact('removeLiquidity', [bTokenId, bAmount], accountAddress)\n  }\n  async removeLiquidityWithPrices(accountAddress, bTokenId, bAmount, infos) {\n    return await this._transact('removeLiquidityWithPrices', [bTokenId, bAmount, infos], accountAddress)\n  }\n  async removeMargin(accountAddress, bTokenId, bAmount) {\n    return await this._transact('removeMargin', [bTokenId, bAmount], accountAddress)\n  }\n  async removeMarginWithPrices(accountAddress, bTokenId, bAmount, infos) {\n    return await this._transact('removeMarginWithPrices', [bTokenId, bAmount, infos], accountAddress)\n  }\n  //  async setBTokenParameters(accountAddress, bTokenId, swapperAddress, oracleAddress, discount) {\n  //    return await this._transact('setBTokenParameters', [bTokenId, swapperAddress, oracleAddress, discount], accountAddress)\n  //  }\n  //  async setLiquidatorQualifier(accountAddress, qualifierAddress) {\n  //    return await this._transact('setLiquidatorQualifier', [qualifierAddress], accountAddress)\n  //  }\n  //  async setNewController(accountAddress, newController) {\n  //    return await this._transact('setNewController', [newController], accountAddress)\n  //  }\n  //  async setPool(accountAddress, poolAddress) {\n  //    return await this._transact('setPool', [poolAddress], accountAddress)\n  //  }\n  //  async setSymbolParameters(accountAddress, symbolId, oracleAddress, feeRatio, alpha) {\n  //    return await this._transact('setSymbolParameters', [symbolId, oracleAddress, feeRatio, alpha], accountAddress)\n  //  }\n  async trade(accountAddress, symbolId, tradeVolume) {\n    return await this._transact('trade', [symbolId, tradeVolume], accountAddress)\n  }\n  async tradeWithPrices(accountAddress, symbolId, tradeVolume, infos) {\n    return await this._transact('tradeWithPrices', [symbolId, tradeVolume, infos], accountAddress)\n  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { contractFactory } from '../../shared/utils/index.js';\nimport { perpetualPoolDpmmAdapter, perpetualPoolRouterDpmmAdapter, lTokenAdapter, pTokenAdapter } from './adapter.js';\n\nimport { LToken } from './gen/LToken.js';\nimport { PToken } from './gen/PToken.js';\nimport { PerpetualPool} from './gen/PerpetualPool';\nimport { PerpetualPoolRouter} from './gen/PerpetualPoolRouter';\n\nexport const lTokenFactory = contractFactory(lTokenAdapter(LToken));\nexport const pTokenFactory = contractFactory(pTokenAdapter(PToken));\n\n// dpmm\nexport const perpetualPoolDpmmFactory = contractFactory(perpetualPoolDpmmAdapter(PerpetualPool));\nexport const perpetualPoolRouterDpmmFactory = contractFactory(perpetualPoolRouterDpmmAdapter(PerpetualPoolRouter));\n","\nexport const ObjectCache = (function () {\n  let _cache = {};\n  return {\n    get(poolAddress, name) {\n      const key = `${poolAddress}.${name}`;\n      if (Object.keys(_cache).includes(key)) {\n        return _cache[key];\n      }\n      return null\n    },\n    set(poolAddress, name, val) {\n      const key = `${poolAddress}.${name}`;\n      const timestamp = Math.floor(Date.now() / 1000);\n      if (typeof val === 'object' && val != null && !Array.isArray(val)) {\n        val.timestamp = timestamp;\n        _cache[key] = val;\n      }\n    },\n  };\n})();","import { contractFactory } from \"../../activity/utils\"\nimport { bg, max, min } from \"../../shared/utils\"\nimport { SECONDS_IN_A_DAY, checkSymbolId  } from \"../../shared/config\";\nimport { getIndexInfo } from \"../../shared/config/token\"\nimport {\n  calculateLiquidationPrice,\n  calculateMaxRemovableLiquidity,\n} from '../../v2/calculation';\nimport { perpetualPoolDpmmFactory } from './factory';\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\nimport { calculateDpmmPrice } from \"../../v2_lite_dpmm/calc\";\nimport { ERC20Factory } from \"../../shared/contract/factory\";\nimport { liquidatePriceCache } from \"../../shared/api/api_globals\";\nimport { ObjectCache } from \"../../shared/cache\";\nimport { ErrorCode } from \"../../shared/error/error_code\";\nimport { AppError } from \"../../shared/error/error\";\n\n// PoolApi \nexport class PoolApi {\n  constructor(chainId, poolAddress) {\n    this.chainId = chainId;\n    this.poolAddress = poolAddress;\n    this.pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n  }\n\n  async init(usedByEstimatedApi) {\n    await this.pool.init(usedByEstimatedApi);\n  }\n\n  // API\n  async getUserStakeInfo(accountAddress) {\n    const pool = this.pool;\n    const assets = await Promise.all(\n      pool.bTokens.reduce(\n        (acc, b, index) => [\n          ...acc,\n          pool.lToken.getAsset(accountAddress, index.toString()),\n        ],\n        []\n      )\n    );\n\n    return {\n      chainId: this.chainId,\n      poolAddress: this.poolAddress,\n      isStaked: assets.filter((a) => bg(a.liquidity).gt(0)).length > 0,\n      bTokens: assets.map((a, index) => ({\n        bTokenId: index.toString(),\n        isStaked: bg(a.liquidity).gt(0),\n      })),\n    };\n  }\n  async getLiquidityInfo(accountAddress, bTokenId) {\n    const pool = this.pool;\n    const [lTokenAsset, bTokens, symbols] = await Promise.all([\n      pool.lToken.getAsset(accountAddress, bTokenId),\n      pool.getBTokens(),\n      pool.getSymbols(),\n    ]);\n    const assets = await Promise.all(\n      pool.bTokens.reduce(\n        (acc, b, index) => [\n          ...acc,\n          pool.lToken.getAsset(accountAddress, index.toString()),\n        ],\n        []\n      )\n    );\n    const { minPoolMarginRatio } = pool.parameters;\n    const bTokenIndex = pool.bTokenIds.indexOf(bTokenId.toString());\n    const { liquidity: poolLiquidity } = bTokens[bTokenIndex];\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\n    const cost = symbols.reduce((acc, s) => acc.plus(s.notional), bg(0));\n    const totalPnl = symbols.reduce((acc, s) => acc.plus(s.pnl), bg(0));\n\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\n      if (index === parseInt(bTokenId)) {\n        return accum.plus(b.pnl);\n      } else {\n        return accum.plus(\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n        );\n      }\n    }, bg(0));\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\n      bTokens[bTokenIndex],\n      liquidity,\n      cost,\n      totalPnl,\n      restLiquidity,\n      minPoolMarginRatio\n    ).toString();\n    const approximatePnl = bg(pnl)\n      .plus(\n        bg(bTokens[bTokenIndex].cumulativePnl)\n          .minus(lastCumulativePnl)\n          .times(liquidity)\n      )\n      .toString();\n\n    ObjectCache.set(this.poolAddress, 'liquidity_info', {\n      assets,\n      bTokens,\n    });\n    return {\n      poolLiquidity,\n      shares: liquidity,\n      maxRemovableShares,\n      pnl: approximatePnl,\n      bToken0Symbol: pool.bTokenSymbols[0],\n      swappedPnl: bTokens[bTokenIndex].price ? bg(approximatePnl).div(bTokens[bTokenIndex].price).toString() : '',\n    };\n  }\n\n  async getEstimatedLiquidityInfo(accountAddress, newAmount, bTokenId) {\n    //await this.init();\n    //const pool = this.pool;\n    const res = ObjectCache.get(this.poolAddress, 'liquidity_info');\n    if (res && res.assets) {\n      const {\n        assets,\n        bTokens,\n      } = res;\n      //console.log(assets, bTokens)\n      const index = parseInt(bTokenId)\n      return {\n        percentage1: bg(assets[index].liquidity)\n          .plus(newAmount)\n          .div(bg(bTokens[index].liquidity).plus(newAmount)),\n        shareValue1: ''\n      };\n    } else {\n      throw new AppError(ErrorCode.INVALID_CACHE, {\n        name: `${this.poolAddress}.liquidity_info`,\n        data: res,\n      });\n    }\n  }\n\n  async getSpecification(symbolId) {\n    await this.init();\n    const pool = this.pool\n    const {\n      minPoolMarginRatio,\n      initialMarginRatio,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      maintenanceMarginRatio,\n      minBToken0Ratio,\n    } = pool.parameters;\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbolInfo = pool.symbols[symbolIndex];\n\n    const { symbol, multiplier, feeRatio } = symbolInfo;\n\n    return {\n      symbol,\n      bTokenSymbol: pool.bTokenSymbols,\n      bTokenMultiplier: pool.bTokens.map((b) => b.discount),\n      multiplier,\n      feeRatio,\n      fundingRateCoefficient: bg(1).div(pool.fundingPeriod).toString(),\n      minPoolMarginRatio,\n      minInitialMarginRatio: initialMarginRatio,\n      minMaintenanceMarginRatio: maintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n      indexConstituents: getIndexInfo(symbol),\n    };\n  }\n\n  async getPositionInfo(accountAddress, symbolId) {\n    const pool = this.pool;\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const oracleAddress =\n      pool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n        ? ''\n        : pool.symbols[symbolIndex].oracleAddress;\n    const [\n      bTokens,\n      symbols,\n      lastTimestamp,\n      margins,\n      price,\n    ] = await Promise.all([\n      pool.getBTokens(),\n      pool.getSymbols(),\n      pool.getLastTimestamp(),\n      pool.pToken.getMargins(accountAddress),\n      getOraclePriceFromCache2.get(\n        this.chainId,\n        pool.symbols[symbolIndex].symbol,\n        oracleAddress\n      ),\n    ]);\n    const positions = await pool.getPositions(accountAddress)\n\n    const symbol = symbols[symbolIndex];\n    const position = positions[symbolIndex];\n    // const { volume } = position\n    // const { multiplier, indexPrice } = symbol\n    const margin = bTokens\n      .reduce(\n        (acc, b, index) =>\n          acc.plus(bg(b.price).times(b.discount).times(margins[index])),\n        bg(0)\n      )\n      .toString();\n    const marginHeld = symbols.reduce((acc, s, index) => {\n      return acc.plus(\n        bg(s.indexPrice)\n          .times(s.multiplier)\n          .times(positions[index].volume)\n          .times(initialMarginRatio)\n          .abs()\n      );\n    }, bg(0));\n    const marginHeldBySymbol = bg(position.volume)\n      .times(symbol.multiplier)\n      .times(symbol.indexPrice)\n      .times(initialMarginRatio)\n      .abs();\n\n    const unrealizedPnl = positions.reduce(\n      (acc, p) => acc.plus(p.traderPnl),\n      bg(0)\n    );\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, positions[index].traderPnl];\n    });\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\n    const dynamicCost = symbols.reduce((acc, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return acc.plus(\n          bg(positions[index].volume).times(s.dpmmPrice).times(s.multiplier)\n        );\n      } else {\n        return acc;\n      }\n    }, bg(0));\n    const fundingFee = bg(symbol.cumulativeFundingRate)\n      .minus(position.lastCumulativeFundingRate)\n      .plus(\n        bg(symbol.dpmmPrice)\n          .minus(symbol.indexPrice)\n          .times(symbol.multiplier)\n          .div(pool.fundingPeriod)\n          .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\n      )\n      .times(position.volume)\n      .toString();\n\n    // set liquidatePrice cache\n    liquidatePriceCache.set(this.poolAddress, {\n      volume: position.volume,\n      margin,\n      totalCost,\n      dynamicCost,\n      price,\n      multiplier: symbol.multiplier,\n      minMaintenanceMarginRatio: maintenanceMarginRatio,\n    });\n\n    return {\n      symbol: symbol.symbol,\n      price: price,\n      markPrice: symbol.dpmmPrice.toString(),\n      volume: bg(position.volume).times(symbol.multiplier).toString(),\n      averageEntryPrice: bg(position.volume).eq(0)\n        ? '0'\n        : bg(position.cost)\n            .div(position.volume)\n            .div(symbol.multiplier)\n            .toString(),\n      margin: margin,\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      fundingFee,\n      liquidationPrice: calculateLiquidationPrice(\n        position.volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        symbol.multiplier,\n        maintenanceMarginRatio\n      ).toString(),\n    };\n  }\n\n  async getPositionInfos(accountAddress) {\n    const pool = this.pool;\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\n    const [\n      bTokens,\n      symbols,\n      lastTimestamp,\n      margins,\n    ] = await Promise.all([\n      pool.getBTokens(),\n      pool.getSymbols(),\n      //pool.getPositions(accountAddress),\n      pool.getLastTimestamp(),\n      pool.pToken.getMargins(accountAddress),\n    ]);\n    const positions = await pool.getPositions(accountAddress)\n\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\n\n    return positions\n      .map((p, index) => {\n        const symbolIndex = index;\n        const symbol = symbols[symbolIndex];\n        const position = positions[symbolIndex];\n        const margin = bTokens\n          .reduce(\n            (acc, b, index) =>\n              acc.plus(bg(b.price).times(b.discount).times(margins[index])),\n            bg(0)\n          )\n          .toString();\n        const marginHeld = symbols.reduce((acc, s, index) => {\n          return acc.plus(\n            bg(s.indexPrice)\n              .times(s.multiplier)\n              .times(positions[index].volume)\n              .times(initialMarginRatio)\n              .abs()\n          );\n        }, bg(0));\n        const marginHeldBySymbol = bg(position.volume)\n          .times(symbol.multiplier)\n          .times(symbol.indexPrice)\n          .times(initialMarginRatio)\n          .abs();\n        const unrealizedPnl = p.traderPnl\n        const dynamicCost = symbols.reduce((acc, s, idx) => {\n          if (idx !== index) {\n            return acc.plus(\n              bg(positions[idx].volume).times(s.dpmmPrice).times(s.multiplier)\n            );\n          } else {\n            return acc;\n          }\n        }, bg(0));\n        const fundingFee = bg(symbol.cumulativeFundingRate)\n          .minus(position.lastCumulativeFundingRate)\n          .plus(\n            bg(symbol.dpmmPrice)\n              .minus(symbol.indexPrice)\n              .times(symbol.multiplier)\n              .div(pool.fundingPeriod)\n              .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\n          )\n          .times(position.volume)\n          .toString();\n        return {\n          symbolId: symbolIndex.toString(),\n          symbol: symbol.symbol,\n          price: symbol.indexPrice,\n          markPrice: symbol.dpmmPrice.toString(),\n          volume: bg(position.volume).times(symbol.multiplier).toString(),\n          averageEntryPrice: bg(position.volume).eq(0)\n            ? '0'\n            : bg(position.cost)\n                .div(position.volume)\n                .div(symbol.multiplier)\n                .toString(),\n          margin: margin,\n          marginHeld: marginHeld.toString(),\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\n          unrealizedPnl: unrealizedPnl.toString(),\n          fundingFee,\n          liquidationPrice: calculateLiquidationPrice(\n            position.volume,\n            margin,\n            totalCost,\n            dynamicCost,\n            symbol.multiplier,\n            maintenanceMarginRatio\n          ).toString(),\n        };\n      })\n      .filter((p) => p.volume !== '0');\n  }\n\n  async getEstimatedMargin(accountAddress, volume, leverage, symbolId) {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const { multiplier, indexPrice } = pool.symbols[symbolIndex];\n    return bg(volume)\n      .abs()\n      .times(multiplier)\n      .times(indexPrice)\n      .div(leverage)\n      .toString();\n  }\n\n  async getEstimatedFee(volume, symbolId) {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const { multiplier, indexPrice, feeRatio } = pool.symbols[symbolIndex];\n    return bg(volume)\n      .abs()\n      .times(multiplier)\n      .times(indexPrice)\n      .times(feeRatio)\n      .toString();\n  }\n\n  async getFundingRate(symbolId) {\n    await this.init()\n    const pool = this.pool\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const {funding, fundingPerSecond, tradersNetVolume, multiplier } = pool.symbols[symbolIndex]\n    const liquidity = pool.state.liquidity\n    return {\n      funding0: bg(funding).div(multiplier).toString(),\n      fundingPerSecond: bg(fundingPerSecond).div(multiplier).toString(),\n      liquidity: liquidity,\n      volume: '-',\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\n    };\n  }\n\n\n  async getEstimatedFundingRate(newVolume, symbolId) {\n    const pool = this.pool\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = { ...pool.symbols[symbolIndex] };\n    symbol.dpmmPrice = calculateDpmmPrice(\n      symbol.indexPrice,\n      symbol.K,\n      bg(symbol.tradersNetVolume).plus(newVolume).toString(),\n      symbol.multiplier\n    ).toString();\n    symbol.fundingPerSecond = bg(symbol.dpmmPrice)\n      .minus(symbol.indexPrice)\n      //.times(symbol.multiplier)\n      .div(pool.fundingPeriod)\n      .toString();\n    return {\n      funding1: bg(symbol.fundingPerSecond).times(SECONDS_IN_A_DAY).toString(),\n    };\n  }\n\n  async getLiquidityUsed() {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const { minPoolMarginRatio } = pool.parameters;\n    return pool.symbols\n      .reduce(\n        (acc, s) =>\n          acc.plus(\n            bg(s.tradersNetVolume)\n              .abs()\n              .times(s.indexPrice)\n              .times(s.multiplier)\n              .times(minPoolMarginRatio)\n          ),\n        bg(0)\n      )\n      .div(pool.state.liquidity)\n      .toString();\n  }\n\n  async getEstimatedLiquidityUsed(newVolume, symbolId) {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n\n    const { minPoolMarginRatio } = pool.parameters;\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    //console.log(pool.symbols, poolMarginRatio, pool.stateValues)\n    return pool.symbols\n      .reduce(\n        (acc, s, index) =>\n          index === symbolIndex\n            ? acc.plus(\n                bg(s.tradersNetVolume)\n                  .plus(newVolume)\n                  .abs()\n                  .times(s.indexPrice)\n                  .times(s.multiplier)\n                  .times(minPoolMarginRatio)\n              )\n            : acc.plus(\n                bg(s.tradersNetVolume)\n                  .abs()\n                  .times(s.indexPrice)\n                  .times(s.multiplier)\n                  .times(minPoolMarginRatio)\n              ),\n        bg(0)\n      )\n      .div(pool.state.liquidity)\n      .toString();\n  }\n\n  async getUserBTokensInfo(accountAddress) {\n    const pool = this.pool;\n    await pool.getSymbols();\n    await pool.getPositions(accountAddress);\n    const { initialMarginRatio } = pool.parameters\n    const margins = await pool.pToken.getMargins(accountAddress);\n    const balances = await Promise.all(\n      pool.bTokens.reduce(\n        (acc, i) => [\n          ...acc,\n          ERC20Factory(this.chainId, i.bTokenAddress).balanceOf(accountAddress),\n        ],\n        []\n      )\n    );\n\n    const margin = pool.bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0)).toString()\n    const marginHeld = pool.symbols.reduce((acc, s, index) => {\n      return acc.plus(\n        bg(s.indexPrice)\n          .times(s.multiplier)\n          .times(pool.positions[index].volume)\n          .times(initialMarginRatio)\n          .abs()\n      );\n    }, bg(0)).toString();\n    const pnl = pool.positions.reduce((acc, p) => acc.plus(p.traderPnl), bg(0)).toString();\n\n    for (let i = 0; i < pool.bTokenIds.length; i++) {\n      const bToken = pool.bTokens[i]\n      bToken.walletBalance = balances[i]\n      bToken.availableBalance = max(\n        min(\n          bg(margin)\n            .minus(marginHeld)\n            .plus(pnl)\n            .div(pool.bTokens[i].price)\n            .div(pool.bTokens[i].discount),\n          bg(margins[i])\n        ),\n        bg(0)\n      ).toString();\n    }\n    return pool.bTokens.map((b, index) => {\n      return {\n        bTokenId: index.toString(),\n        bTokenAddress: b.bTokenAddress,\n        bTokenSymbol: pool.bTokenSymbols[index],\n        availableBalance: b.availableBalance,\n        walletBalance: b.walletBalance,\n      }\n    })\n  }\n\n  async getFundingFee(accountAddress, symbolId) {\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    if (!pool.isPositionsUpdated()) {\n      await pool.getPositions(accountAddress);\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    return pool.positions[symbolIndex].fundingAccrued;\n  }\n}\n\n\n\n\nexport const poolApiFactory = contractFactory(PoolApi);","import {\n  checkApiInput,\n  checkApiInputWithoutAccount,\n  checkSymbolId,\n  checkTokenId,\n  checkAmount,\n} from '../../shared/config';\nimport { catchApiError } from '../../shared/utils/api';\nimport { poolApiFactory } from '../contract/PoolApi';\nimport { ERC20Factory } from '../../shared/contract/factory';\nimport { calculateDpmmCost } from '../../v2_lite_dpmm/calc';\nimport { bg } from '../../shared/utils';\n\nexport const getUserStakeInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const api = poolApiFactory(chainId, poolAddress);\n    await api.init();\n    return await api.getUserStakeInfo(accountAddress);\n  });\n};\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  return catchApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    bTokenId = checkTokenId(bTokenId);\n    const api = poolApiFactory(chainId, poolAddress);\n    await api.init();\n    return await api.getLiquidityInfo(accountAddress, bTokenId);\n  });\n};\n\nexport const getEstimatedLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newAmount,\n  bTokenId,\n) => {\n  return catchApiError(async() => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    bTokenId = checkTokenId(bTokenId)\n    newAmount = checkAmount(newAmount)\n    const api = poolApiFactory(chainId, poolAddress);\n    await api.init()\n    return await api.getEstimatedLiquidityInfo(accountAddress, newAmount, bTokenId)\n  })\n}\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getSpecification(symbolId);\n    },\n  );\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    symbolId = checkTokenId(symbolId);\n    const api = poolApiFactory(chainId, poolAddress);\n    await api.init();\n    return await api.getPositionInfo(accountAddress, symbolId);\n  });\n};\n\nexport const getPositionInfos = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getPositionInfos(accountAddress);\n    },\n    [],\n    []\n  );\n};\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      bTokenId = checkTokenId(bTokenId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      const bTokenIndex = checkSymbolId(bTokenId, api.pool.bTokenIds);\n      const bTokenAddress = api.pool.bTokens[bTokenIndex].bTokenAddress;\n      const bToken = ERC20Factory(chainId, bTokenAddress);\n      return await bToken.balanceOf(accountAddress);\n    },\n    [],\n    ''\n  );\n};\n\nexport const isUnlocked = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      bTokenId = checkTokenId(bTokenId);\n      const bTokenAddress = api.pool.bTokens[parseInt(bTokenId)].bTokenAddress;\n      const bToken = ERC20Factory(chainId, bTokenAddress);\n      return await bToken.isUnlocked(accountAddress, poolAddress);\n    },\n    [],\n    ''\n  );\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init(true);\n      return await api.getEstimatedMargin(\n        accountAddress,\n        volume,\n        leverage,\n        symbolId\n      );\n    },\n    [],\n    ''\n  );\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init(true);\n      return await api.getEstimatedFee(volume, symbolId);\n    },\n    [],\n    ''\n  );\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getFundingRate(symbolId);\n    },\n    [],\n    ''\n  );\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newVolume,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init(true);\n      return await api.getEstimatedFundingRate(newVolume, symbolId);\n    },\n    [],\n    ''\n  );\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getLiquidityUsed();\n    },\n    [],\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newVolume,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init(true);\n      return await api.getEstimatedLiquidityUsed(newVolume, symbolId);\n    },\n    [],\n    ''\n  );\n};\n\nexport const getUserBTokensInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      //symbolId = checkTokenId(symbolId)\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getUserBTokensInfo(accountAddress);\n    },\n    [],\n    []\n  );\n};\n\nexport const getFundingFee = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getFundingFee(accountAddress, symbolId);\n    },\n    [],\n    ''\n  );\n};\n\nexport const getEstimatedTimePrice = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      const pool = api.pool;\n      const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n      if (!pool.isSymbolsUpdated()) {\n        await pool.getSymbols();\n      }\n      const symbol = pool.symbols[symbolIndex];\n      const cost = calculateDpmmCost(\n        symbol.indexPrice,\n        symbol.K,\n        symbol.tradersNetVolume,\n        symbol.multiplier,\n        newNetVolume\n      );\n      return bg(cost).div(symbol.multiplier).div(newNetVolume).toString();\n    },\n    [],\n    ''\n  );\n};\n","import {\n  deriToNatural,\n  getBlockInfo,\n  getPastEvents,\n  getHttpBase,\n  fetchJson,\n  bg,\n  catchTxApiError,\n  catchApiError,\n} from '../../shared/utils';\n// import {\n//   getPoolConfig,\n// } from '../../shared/config';\nimport { perpetualPoolDpmmFactory, } from '../contract/factory';\n\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const perpetualPool = perpetualPoolDpmmFactory(chainId, poolAddress);\n  await perpetualPool.init()\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  const filters = { account: accountAddress };\n  let events = await getPastEvents(\n    chainId,\n    perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  //events = events.filter((i) => i.returnValues.symbolId === symbolId);\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await perpetualPool.formatTradeEvent(item);\n    if (res) {\n      const symbolIndex = perpetualPool.activeSymbolIds.indexOf(res.symbolId);\n      result.unshift({\n        baseToken: '',\n        direction: res.direction,\n        volume: bg(res.volume)\n          .times(perpetualPool.symbols[symbolIndex].multiplier)\n          .toString(),\n        price: res.price,\n        indexPrice: res.indexPrice,\n        notional: res.notional,\n        symbol: res.symbol,\n        symbolId: res.symbolId,\n        time: res.time,\n        transactionFee: res.transactionFee,\n        transactionHash: res.transactionHash,\n      });\n    }\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchApiError(async () => {\n    let tradeFromBlock,\n      tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const perpetualPool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await perpetualPool.init();\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .map((i) => {\n          const symbolIndex = perpetualPool.activeSymbolIds.indexOf(i.symbolId);\n          if (symbolIndex > -1) {\n            return {\n              direction: i.direction.trim(),\n              baseToken: '',\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              volume: deriToNatural(i.volume)\n                .times(perpetualPool.symbols[symbolIndex].multiplier)\n                .toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else if (i.direction === 'LIQUIDATION') {\n            return {\n              direction: i.direction.trim(),\n              baseToken: '',\n              symbolId: i.symbolId ? i.symbolId : '',\n              symbol: i.symbol ? i.symbol : '',\n              price: i.price ? deriToNatural(i.price).toString() : '',\n              notional: i.notional ? deriToNatural(i.notional).toString() : '',\n              volume: i.volume\n                ? deriToNatural(i.volume)\n                    .times(perpetualPool.symbols[symbolIndex].multiplier)\n                    .toString()\n                : '',\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            return null;\n          }\n        })\n        .filter((i) => i != null);\n    }\n    //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      //const { initialBlock } = getPoolConfig(poolAddress);\n      const initialBlock = 100000000\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  });\n};\n","// import {\n//   getPoolInfoApy,\n//   getPoolLiquidity,\n// } from '../../v2/api/mining_query_api';\nimport {\n  getEstimatedFee,\n  getEstimatedFundingRate,\n  getEstimatedLiquidityUsed,\n  getEstimatedMargin,\n  getFundingRate,\n  getUserStakeInfo,\n  getLiquidityInfo,\n  getEstimatedLiquidityInfo,\n  getLiquidityUsed,\n  getPositionInfo,\n  getPositionInfos,\n  getSpecification,\n  getWalletBalance,\n  isUnlocked,\n  getUserBTokensInfo,\n  getFundingFee,\n  getEstimatedTimePrice,\n} from './query_api';\nimport { getTradeHistory } from './trade_history_api';\nimport {\n  addLiquidity,\n  closePosition,\n  depositMargin,\n  removeLiquidity,\n  tradeWithMargin,\n  unlock,\n  withdrawMargin,\n} from './transaction_api';\n\nexport const api = {\n  // mining\n  getLiquidityInfo,\n  getUserStakeInfo,\n  getEstimatedLiquidityInfo,\n  // getPoolLiquidity,\n  // getPoolInfoApy,\n  addLiquidity,\n  removeLiquidity,\n  // trading\n  getSpecification,\n  getPositionInfo,\n  getPositionInfos,\n  getWalletBalance,\n  isUnlocked,\n  getEstimatedFee,\n  getEstimatedMargin,\n  getFundingRate,\n  getEstimatedFundingRate,\n  getLiquidityUsed,\n  getEstimatedLiquidityUsed,\n  getEstimatedTimePrice,\n  getFundingRateCache: () => {},\n  unlock,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n  // tradeHistory\n  getTradeHistory,\n  // extra for v2\n  getUserBTokensInfo,\n  getFundingFee,\n};\n","import {\n  checkApiInput,\n  checkAmount,\n  checkSymbolId,\n  checkTokenId,\n  MAX_INT256,\n} from '../../shared/config';\nimport { bg, deriToNatural } from '../../shared/utils';\nimport { ERC20Factory } from '../../shared/contract/factory';\nimport { catchTxApiError } from '../../shared/utils/api';\nimport { perpetualPoolDpmmFactory } from '../contract/factory.js';\n\n// mining\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    amount = checkAmount(amount);\n    bTokenId = checkTokenId(bTokenId);\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.router.addLiquidity(accountAddress, bTokenId, amount);\n  }, []);\n};\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    amount = checkAmount(amount);\n    bTokenId = checkTokenId(bTokenId);\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    if (isMaximum) {\n      amount = deriToNatural(MAX_INT256).toString();\n    }\n    return await pool.router.removeLiquidity(accountAddress, bTokenId, amount);\n  }, []);\n};\n\n//trading\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    bTokenId = checkTokenId(bTokenId);\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    const bTokenIndex = checkSymbolId(bTokenId, pool.bTokenIds);\n    const bTokenAddress = pool.bTokens[bTokenIndex].bTokenAddress;\n    const bToken = ERC20Factory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  }, []);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    amount = checkAmount(amount);\n    bTokenId = checkTokenId(bTokenId);\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.router.addMargin(accountAddress, bTokenId, amount);\n  }, []);\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    amount = checkAmount(amount);\n    bTokenId = checkTokenId(bTokenId);\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.router.removeMargin(accountAddress, bTokenId, amount);\n  }, []);\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    newVolume = checkAmount(newVolume);\n    symbolId = checkTokenId(symbolId);\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const { multiplier } = pool.symbols[symbolIndex];\n    return await pool.router.trade(\n      accountAddress,\n      symbolId,\n      bg(newVolume).div(multiplier).toString()\n    );\n  }, []);\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    symbolId = checkTokenId(symbolId);\n    const pool = perpetualPoolDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    const { volume } = await pool.pToken.getPosition(accountAddress, symbolId);\n    if (!bg(volume).eq(0)) {\n      const newVolume = bg(volume).negated().toString();\n      return await pool.router.trade(accountAddress, symbolId, newVolume);\n    } else {\n      throw new Error('no position to close');\n    }\n  }, []);\n};\n","import { catchApiError, bg, deriToNatural, getNetworkName } from '../../shared/utils';\nimport { databaseFactory } from '../../shared/factory';\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../v1/calculation';\nimport { perpetualPoolLiteFactory } from '../factory';\n\n\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  //const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', null, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  await perpetualPool.init()\n  // const bTokenSymbol = perpetualPool.bTokenSymbol\n  // const lToken = lTokenLiteFactory(chainId, lTokenAddress)\n  // const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const lToken = perpetualPool.lToken\n  // const pToken = perpetualPool.pToken\n  const parameterInfo = perpetualPool.parameters\n  const symbolIds = perpetualPool.activeSymbolIds\n  //const symbolIndex = symbolIds.indexOf(symbolId)\n  //const symbols = perpetualPool.symbols\n\n  const [liquidity, lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    //perpetualPool.getParameters(),\n    perpetualPool.getLiquidity(),\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    //pToken.getActiveSymbolIds(),\n  ])\n  const { minPoolMarginRatio } = parameterInfo;\n  let promises = []\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises)\n  const totalPnl = symbols.reduce((acc, s) => {\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\n  }, bg(0))\n  const poolDynamicEquity = liquidity.minus(totalPnl)\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      minPoolMarginRatio\n    ).toString(),\n  };\n}\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      // totalSupply: '',\n      // poolLiquidity: '',\n      // shares: '',\n      // shareValue: '',\n      // maxRemovableShares: '',\n    }\n  );\n}\n\n// replace by database api\n\n// export const getPoolLiquidity = async (chainId, poolAddress) => {\n//   // use the dev database\n//   const db = databaseFactory();\n//   try {\n//     const res = await db\n//       .getValues([`${chainId}.${poolAddress}.liquidity`])\n//       .catch((err) => console.log('getPoolLiquidity', err));\n//     if (res) {\n//       const [liquidity] = res;\n//       return {\n//         liquidity: deriToNatural(liquidity).toString(),\n//         symbol:'',\n//       };\n//     }\n//   } catch (err) {\n//     console.log(`${err}`)\n//   }\n//   return {\n//     // liquidity: '',\n//     // symbol:'',\n//   };\n// };\n\n// export const getPoolInfoApy = async (chainId, poolAddress) => {\n//   const db = databaseFactory(true);\n//   try {\n//     const poolNetwork = getNetworkName(chainId);\n//     const res = await db\n//       .getValues([\n//         `${poolNetwork}.${poolAddress}.apy`,\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\n//       ])\n//       .catch((err) => console.log('getPoolInfoApy', err));\n//     if (res) {\n//       const [apy, volume1h, volume24h] = res;\n//       return {\n//         apy: deriToNatural(apy).toString(),\n//         volume1h: deriToNatural(volume1h).toString(),\n//         volume24h: deriToNatural(volume24h).toString(),\n//       };\n//     }\n//   } catch (err) {\n//     console.log(`${err}`)\n//   }\n// };\n","import { catchTxApiError } from '../../shared/utils';\nimport { perpetualPoolLiteFactory } from '../factory.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import { fromWei } from \"../shared/utils\";\nimport { getOraclePriceFromCache2, oraclePricesCache } from \"../shared/utils/oracle\";\n\nexport const getSymbolPrices = async (chainId, symbols, offChainSymbolIds, offChainSymbolNames) => {\n  const onChainOracleAddressWithPlaceHolder = symbols.map((s) =>\n    offChainSymbolIds.indexOf(s.symbolId) > -1\n      ? ''\n      : s.oracleAddress\n  );\n\n  const onChainSymbolPrices = await Promise.all(\n    onChainOracleAddressWithPlaceHolder\n      .reduce((acc, address, index) => {\n        const _symbol = symbols.map((s) => s.symbol)[index];\n        if (address !== '') {\n          return acc.concat(\n            getOraclePriceFromCache2.get(chainId, _symbol, address)\n          );\n        } else {\n          return acc.concat('');\n        }\n      }, [])\n      .filter((f) => f !== '')\n  );\n\n  const res =  await oraclePricesCache.get(offChainSymbolNames)\n  const offChainSymbolPrices = offChainSymbolNames.map((s) => fromWei(res[s].price))\n\n  // combine offChain and onChain symbol prices\n  const symbolPrices = onChainOracleAddressWithPlaceHolder.map((o) => {\n    if (o !== '') {\n      return onChainSymbolPrices.shift();\n    } else {\n      return offChainSymbolPrices.shift();\n    }\n  });\n  return symbolPrices\n};","import {\n  calculateEntryPrice,\n  calculateFundingRate,\n  calculateLiquidationPrice,\n  processFundingRate,\n  calculateFundingFee,\n} from '../../v2/calculation';\n//import { getPoolConfig } from \"../../shared/config\"\n//import { bTokenFactory } from \"../../shared/factory\"\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from \"../factory.js\"\nimport {\n  bg,\n  catchApiError,\n  getLatestBlockNumber,\n} from '../../shared/utils';\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\nimport { getIndexInfo } from '../../shared/config/token';\nimport { getSymbolPrices } from '../utils';\nimport {\n  checkApiInput,\n  checkApiInputWithoutAccount,\n} from '../../shared/config';\nimport { AppError } from '../../shared/error/error';\n\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    [chainId, poolAddress] = checkApiInputWithoutAccount(chainId, poolAddress);\n    //const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const bTokenSymbol = perpetualPool.bTokenSymbol\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo;\n\n    return {\n      symbol,\n      bTokenSymbol,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n      indexConstituents: getIndexInfo(symbol),\n    }\n  }, args, {\n    // symbol: '',\n    // bTokenSymbol: '',\n    // multiplier: '',\n    // feeRatio: '',\n    // fundingRateCoefficient: '',\n    // minPoolMarginRatio: '',\n    // minInitialMarginRatio: '',\n    // minMaintenanceMarginRatio: '',\n    // minLiquidationReward: '',\n    // maxLiquidationReward: '',\n    // liquidationCutRatio: '',\n    // protocolFeeCollectRatio: '',\n    // indexConstituents: { url: '', tokens: [] },\n  })\n}\n\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const pToken = perpetualPool.pToken\n    const parameterInfo = perpetualPool.parameters \n    const symbolIds = perpetualPool.activeSymbolIds\n    const symbolIndex = symbolIds.indexOf(symbolId)\n\n    if (symbolIndex > -1) {\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      //const symbol = symbols[symbolIndex].symbol\n      //const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n      //const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\n      const [\n        symbolInfo,\n        liquidity,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        positionInfo,\n        margin,\n        //latestPrice,\n      ] = await Promise.all([\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n        perpetualPool.getSymbol(symbolId),\n        perpetualPool.getLiquidity(),\n        perpetualPool.getLastUpdateBlock(),\n        getLatestBlockNumber(chainId),\n        pToken.getPosition(accountAddress, symbolId),\n        pToken.getMargin(accountAddress),\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\n      ]);\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n      const { volume, cost, lastCumulativeFundingRate } = positionInfo;\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        tradersNetVolume,\n        cumulativeFundingRate,\n      } = symbolInfo;\n      const {\n        minInitialMarginRatio,\n        minMaintenanceMarginRatio,\n      } = parameterInfo;\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      // }\n      //const symbols = await Promise.all(promises);\n\n      const symbolPrices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\n      //   const address = isOffchain ? '' : symbols[i].oracleAddress\n      //   const _symbol = symbolList[i]\n      //   promises.push(\n      //     getOraclePriceFromCache2.get(chainId, _symbol, address),\n      //   );\n      // }\n      // const symbolPrices = await Promise.all(promises);\n      let price;\n      if (symbolIndex === '-1') {\n        price = '0';\n      } else {\n        price = symbolPrices[symbolIndex];\n        priceCache.set(poolAddress, symbolId, price);\n      }\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      const marginHeld = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .times(minInitialMarginRatio)\n            .abs()\n        );\n      }, bg(0));\n      const marginHeldBySymbol = bg(volume)\n        .abs()\n        .times(multiplier)\n        .times(price)\n        .times(minInitialMarginRatio);\n\n      const unrealizedPnl = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .minus(positions[index].cost)\n        );\n      }, bg(0));\n      const unrealizedPnlList = symbols.map((s, index) => {\n        return [\n          s.symbol,\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .minus(positions[index].cost)\n            .toString(),\n        ];\n      }, bg(0));\n\n      const totalCost = positions.reduce((accum, p) => {\n        return accum.plus(bg(p.cost));\n      }, bg(0));\n      const dynamicCost = symbols.reduce((accum, s, index) => {\n        if (index !== symbolIndex) {\n          return accum.plus(\n            bg(positions[index].volume)\n              .times(symbolPrices[index])\n              .times(s.multiplier)\n          );\n        } else {\n          return accum;\n        }\n      }, bg(0));\n\n      const fundingFee = calculateFundingFee(\n        tradersNetVolume,\n        price,\n        multiplier,\n        fundingRateCoefficient,\n        liquidity,\n        cumulativeFundingRate,\n        lastCumulativeFundingRate,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        volume\n      );\n\n      liquidatePriceCache.set(poolAddress, {\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        price,\n        multiplier,\n        minMaintenanceMarginRatio,\n      });\n\n      return {\n        symbol:symbols[symbolIndex].symbol,\n        price,\n        volume: bg(volume).times(symbols[symbolIndex].multiplier).toString(),\n        averageEntryPrice: calculateEntryPrice(\n          volume,\n          cost,\n          multiplier\n        ).toString(),\n        margin: margin.toString(),\n        marginHeld: marginHeld.toString(),\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\n        unrealizedPnl: unrealizedPnl.toString(),\n        unrealizedPnlList,\n        fundingFee: fundingFee.toString(),\n        liquidationPrice: calculateLiquidationPrice(\n          volume,\n          margin,\n          totalCost,\n          dynamicCost,\n          multiplier,\n          minMaintenanceMarginRatio\n        ).toString(),\n      };\n    } else {\n      throw new AppError('INVALID_SYMBOL_ID', symbolId)\n    }\n  }, args)\n}\n\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const pToken = perpetualPool.pToken\n    const parameterInfo = perpetualPool.parameters \n    const symbolIds = perpetualPool.activeSymbolIds\n    //const symbolIndex = symbolIds.indexOf(symbolId)\n\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      // const symbol = symbols[symbolIndex].symbol\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\n      const [\n        liquidity,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        margin,\n      ] = await Promise.all([\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n        //perpetualPool.getSymbol(symbolId),\n        perpetualPool.getLiquidity(),\n        perpetualPool.getLastUpdateBlock(),\n        getLatestBlockNumber(chainId),\n        //pToken.getPosition(accountAddress, symbolId),\n        pToken.getMargin(accountAddress),\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\n      ]);\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n      const {\n        minInitialMarginRatio,\n        minMaintenanceMarginRatio,\n      } = parameterInfo;\n\n      const symbolList = symbols.map((s) => s.symbol);\n\n      const symbolPrices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\n      //   const address = isOffchain ? '' : symbols[i].oracleAddress\n      //   const _symbol = symbolList[i]\n      //   promises.push(\n      //     getOraclePriceFromCache2.get(chainId, _symbol, address)\n      //   );\n      // }\n      // const symbolPrices = await Promise.all(promises);\n\n      const marginHeld = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .times(minInitialMarginRatio)\n            .abs()\n        );\n      }, bg(0));\n\n      const totalCost = positions.reduce((accum, p) => {\n        return accum.plus(bg(p.cost));\n      }, bg(0));\n\n      return positions.map((p, index) => {\n      const symbolId = symbolList[index]\n      const symbol = symbols[index]\n      const price = symbolPrices[index]\n\n      const { volume, cost, lastCumulativeFundingRate } = p\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        tradersNetVolume,\n        cumulativeFundingRate,\n      } = symbol;\n      priceCache.set(poolAddress, symbolId, price);\n\n      const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\n\n      const dynamicCost = symbols.reduce((accum, s, idx) => {\n        if (idx !== index) {\n          return accum.plus(\n            bg(positions[idx].volume)\n              .times(symbolPrices[idx])\n              .times(s.multiplier)\n          );\n        } else {\n          return accum;\n        }\n      }, bg(0));\n      const fundingFee = calculateFundingFee(\n        tradersNetVolume,\n        price,\n        multiplier,\n        fundingRateCoefficient,\n        liquidity,\n        cumulativeFundingRate,\n        lastCumulativeFundingRate,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        volume\n      );\n      const marginHeldBySymbol = bg(volume)\n        .abs()\n        .times(multiplier)\n        .times(price)\n        .times(minInitialMarginRatio);\n\n        return {\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          price,\n          volume: bg(volume).times(symbols[index].multiplier).toString(),\n          averageEntryPrice: calculateEntryPrice(\n            volume,\n            cost,\n            multiplier\n          ).toString(),\n          margin: margin.toString(),\n          marginHeld: marginHeld.toString(),\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\n          unrealizedPnl: unrealizedPnl.toString(),\n          //unrealizedPnlList,\n          fundingFee: fundingFee.toString(),\n          liquidationPrice: calculateLiquidationPrice(\n            volume,\n            margin,\n            totalCost,\n            dynamicCost,\n            multiplier,\n            minMaintenanceMarginRatio\n          ).toString(),\n        };\n      }).filter((p) => p.volume !== '0')\n  }, args, [])\n}\n\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const balance = await perpetualPool.bToken.balanceOf(accountAddress)\n    return balance.toString()\n  }, args, '')\n}\n\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    return await perpetualPool.bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, '')\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  await perpetualPool.init()\n  const parameterInfo = perpetualPool.parameters\n  const symbolIds = perpetualPool.activeSymbolIds\n  const symbolIndex = symbolIds.indexOf(symbolId)\n\n  let promises = [];\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises);\n\n  if (symbolIndex > -1) {\n    const symbolInfo = symbols[symbolIndex];\n    // const symbol = symbols[symbolIndex].symbol;\n    // const isOffchainOracleSymbol =\n    //   perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\n    // const oracleAddress = isOffchainOracleSymbol\n    //   ? ''\n    //   : symbols[symbolIndex].oracleAddress;\n    const [liquidity, prices] = await Promise.all([\n      perpetualPool.getLiquidity(),\n      getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      ),\n    ]);\n    const price = prices[symbolIndex]\n    priceCache.set(poolAddress, symbolId, price);\n    const {\n      multiplier,\n      fundingRateCoefficient,\n      tradersNetVolume,\n      feeRatio,\n    } = symbolInfo;\n    const { minPoolMarginRatio } = parameterInfo;\n    const fundingRateArgs = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient,\n    ];\n    const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs);\n    const fundingRate = processFundingRate(chainId, fundingRatePerBlock);\n\n    const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n      return accum.plus(\n        bg(a.tradersNetVolume)\n          .times(a.price)\n          .times(a.multiplier)\n          .times(minPoolMarginRatio)\n          .abs()\n      );\n    }, bg(0));\n\n    const res = {\n      price,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      tradersNetVolume: tradersNetVolume.toString(),\n      liquidity: liquidity.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      fundingRatePerBlock: fundingRatePerBlock,\n      fundingRate: fundingRate,\n      liquidityUsed: liquidityUsedInAmount.div(liquidity),\n    };\n    fundingRateCache.set(chainId, poolAddress, symbolId, res);\n    return res;\n  } else {\n    throw new AppError('INVALID_SYMBOL_ID', symbolId)\n  }\n}\n\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\n  const args = [chainId, poolAddress, volume, symbolId]\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n\n    const symbolIds = perpetualPool.activeSymbolIds\n    const symbolIndex = perpetualPool.activeSymbolIds.indexOf(symbolId)\n\n    let promises = [];\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\n    }\n    const symbols = await Promise.all(promises);\n    //const symbol = symbols[symbolIndex]\n    let price = priceCache.get(poolAddress, symbolId)\n    //console.log('symbol',symbol)\n\n    if (!price) {\n      // const symbolName = symbol.symbol;\n      // const isOffchainOracleSymbol =\n      //   perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbol.oracleAddress;\n      const prices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n      price = prices[symbolIndex]\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  }, args, '')\n}\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\n    //const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const symbolIds = perpetualPool.activeSymbolIds\n    const symbolIndex = symbolIds.indexOf(symbolId)\n    let promises = [];\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\n    }\n    const symbols = await Promise.all(promises);\n    if (symbolIndex > -1) {\n      // const symbol = symbols[symbolIndex].symbol\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n      //const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\n\n      const prices = await getSymbolPrices(\n        chainId,\n        symbols,\n        perpetualPool.offChainOracleSymbolIds,\n        perpetualPool.offChainOracleSymbols\n      );\n      const price = prices[symbolIndex]\n      priceCache.set(poolAddress, symbolId, price)\n      const { multiplier } = symbols[symbolIndex]\n      return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n    } else {\n      throw new Error(`-- getEstimatedMargin: invalid symbolId(${symbolId})`)\n    }\n\n  }, args, '')\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    [chainId, poolAddress ] = checkApiInput(\n      chainId,\n      poolAddress\n    );\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume, multiplier} = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString()\n    }\n  }, args, {\n    // fundingRate0: '',\n    // fundingRatePerBlock: '',\n    // liquidity: '',\n    // volume: '',\n    // tradersNetVolume: '',\n  })\n}\n\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const args = [\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n        res.price,\n        res.multiplier,\n        res.liquidity,\n        res.fundingRateCoefficient,\n      ];\n      let fundingRate1 = calculateFundingRate(...args);\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\n      return {\n        fundingRate1: fundingRate1.times(100).toString(),\n      };\n    },\n    args,\n    ''\n  );\n}\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n    [chainId, poolAddress ] = checkApiInputWithoutAccount(\n      chainId,\n      poolAddress,\n    );\n\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async () => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   symbolId,\n      //   'v2_lite'\n      // );\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      const pToken = perpetualPool.pToken\n      const symbolIds = await pToken.getActiveSymbolIds();\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(s.tradersNetVolume.plus(newNetVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\n          );\n        }\n      }, bg(0));\n      const liquidityUsed1 = liquidityUsed0\n        .times(res.minPoolMarginRatio)\n        .div(res.liquidity);\n      return {\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\n      };\n    },\n    args,\n    ''\n  );\n}\n","import { catchTxApiError, bg } from '../../shared/utils';\nimport { isOrderValid } from '../../v2/calculation';\nimport { perpetualPoolLiteFactory } from '../factory.js';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    // const { bToken: bTokenAddress } = getPoolConfig(\n    //   poolAddress,\n    //   '0',\n    //   null,\n    //   'v2_lite'\n    // );\n    // const bToken = bTokenFactory(chainId, bTokenAddress);\n    return await perpetualPool.bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n      await perpetualPool.init()\n      return await perpetualPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      return await perpetualPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'v2_lite'\n      // );\n      // const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      // const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = perpetualPool.pToken\n      const parameterInfo = perpetualPool.parameters\n      // const symbols = perpetualPool.symbols\n      const symbolIds = perpetualPool.activeSymbolIds\n      const [liquidity, margin] = await Promise.all([\n        //perpetualPool.getParameters(),\n        perpetualPool.getLiquidity(),\n        pToken.getMargin(accountAddress),\n        //pToken.getActiveSymbolIds(),\n      ]);\n      const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      let promises = [];\n\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      let marginHeld = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(positions[index].volume.plus(newVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n          );\n        }\n      }, bg(0));\n      marginHeld = marginHeld.times(minInitialMarginRatio);\n\n      let liquidityUsed = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newVolume)\n              .times(s.price)\n              .times(s.multiplier)\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n          );\n        }\n      }, bg(0));\n      liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      const symbol = symbols.find((s) => s.symbolId === symbolId);\n      const { multiplier } = symbol;\n\n      const orderValidation = isOrderValid(\n        margin,\n        marginHeld,\n        liquidity,\n        liquidityUsed\n      );\n      if (orderValidation.success) {\n        return await perpetualPool.trade(\n          accountAddress,\n          symbolId,\n          bg(newVolume).div(multiplier).toString()\n        );\n      } else {\n        throw new Error(orderValidation.error);\n      }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'v2_lite'\n      // );\n\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      //const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const pToken = perpetualPool.pToken\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!volume.eq(0)) {\n        const newVolume = volume.negated();\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import { bg, deriToNatural, getBlockInfo, getPastEvents, getHttpBase, fetchJson, catchTxApiError } from '../../shared/utils';\n// import {\n//   getPoolConfig,\n//   getPoolConfig2,\n// } from '../../shared/config';\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory';\nimport { calculateTxFee } from '../../v2/calculation/position';\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  bTokenSymbol,\n  symbols,\n  symbolIds,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const index = symbolIds.findIndex((s) => s === symbolId)\n  const symbol = symbols[index]\n  const transactionFee = calculateTxFee(\n    tradeVolume,\n    price,\n    symbol.multiplier,\n    symbol.feeRatio,\n  );\n  const notional = tradeVolume.abs().times(price).times(symbol.multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    symbolId,\n    symbol: symbol && symbol.symbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    //volume: volume.toString(),\n    volume: bg(volume).times(symbol.multiplier).toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  //console.log('symbolIdList', symbolIdList);\n  //const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n  await perpetualPool.init()\n  const bTokenSymbol = perpetualPool.bTokenSymbol\n  const { pTokenAddress } = await perpetualPool.getAddresses()\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  //const symbolIdList = getPoolSymbolIdList(poolAddress)\n  const symbolIdList = await pToken.getActiveSymbolIds()\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      bTokenSymbol,\n      symbols,\n      symbolIdList,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchTxApiError(async () => {\n    let tradeFromBlock,\n      tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await perpetualPool.init();\n    const symbolIds = perpetualPool.activeSymbolIds;\n    //const symbolIndex = symbolIds.indexOf(symbolId)\n\n    let promises = [];\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\n    }\n    let symbols = await Promise.all(promises);\n\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\n        .map((i) => {\n          if (i.direction !== 'LIQUIDATION') {\n            const index = symbolIds.indexOf(i.symbolId);\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              //volume: deriToNatural(i.volume).toString(),\n              volume: deriToNatural(i.volume)\n                .times(symbols[index].multiplier)\n                .toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            if (\n              i.volume !== '' &&\n              i.volume.indexOf(',') > -1 &&\n              !i.price.startsWith('NaN')\n            ) {\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\n                if (v !== '0') {\n                  return acc.concat([index]);\n                } else {\n                  return acc;\n                }\n              }, []);\n              const prices = i.price.split(',').map((s) => deriToNatural(s));\n              const volumes = i.volume.split(',').map((v) => deriToNatural(v));\n              return ids.map((id) => {\n                return {\n                  direction: i.direction.trim(),\n                  baseToken: i.baseToken.trim(),\n                  symbolId: id.toString(),\n                  symbol: symbols[id].symbol,\n                  volume: volumes[id]\n                    .abs()\n                    .times(symbols[id].multiplier)\n                    .toString(),\n                  price: prices[id].toString(),\n                  notional: volumes[id]\n                    .abs()\n                    .times(prices[id])\n                    .times(symbols[id].multiplier)\n                    .toString(),\n                  transactionFee: '0',\n                  transactionHash: i.transactionHash,\n                  time: i.time.toString(),\n                };\n              });\n            } else {\n              // handle missing price data\n              return {\n                direction: i.direction.trim(),\n                baseToken: i.baseToken.trim(),\n                symbolId: '',\n                symbol: '',\n                price: '',\n                notional: '',\n                //volume: deriToNatural(i.volume).toString(),\n                volume: '',\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              };\n            }\n          }\n        })\n        .flat();\n    }\n    //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      //const { initialBlock } = getPoolConfig2(poolAddress);\n      const initialBlock = 100000000\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  });\n};\n","// v2 lite\nimport {\n  getLiquidityInfo,\n} from './mining_query_api'\n\nimport {\n  addLiquidity,\n  removeLiquidity,\n} from './mining_transaction_api'\n\nimport {\n  getSpecification,\n  getPositionInfo,\n  getPositionInfos,\n  isUnlocked,\n  getWalletBalance,\n  getEstimatedFee,\n  getEstimatedMargin,\n  getFundingRate,\n  getEstimatedFundingRate,\n  getLiquidityUsed,\n  getEstimatedLiquidityUsed,\n  getFundingRateCache,\n} from './trade_query_api';\n\nimport {\n  unlock,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n} from './trade_transaction_api';\n\nimport { getTradeHistory } from './trade_history_api';\n\nexport const api = {\n  // mining\n  getLiquidityInfo,\n  addLiquidity,\n  removeLiquidity,\n  // trading\n  getSpecification,\n  getPositionInfo,\n  getPositionInfos,\n  getWalletBalance,\n  isUnlocked,\n  getEstimatedFee,\n  getEstimatedMargin,\n  getFundingRate,\n  getEstimatedFundingRate,\n  getLiquidityUsed,\n  getEstimatedLiquidityUsed,\n  //getEstimatedTimePrice,\n  getFundingRateCache,\n\n  unlock,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n  // tradeHistory\n  getTradeHistory,\n};\n","import { bg, max, min } from '../../shared/utils';\nimport { contractFactory } from '../../shared/utils';\nimport { getIndexInfo, SECONDS_IN_A_DAY, checkSymbolId } from '../../shared/config';\nimport { getOraclePriceFromCache2 } from '../../shared/utils/oracle';\nimport { calculateLiquidationPrice } from '../../v2/calculation';\nimport { calculateDpmmPrice } from '../calc';\nimport { perpetualPoolLiteDpmmFactory} from './factory';\nimport { liquidatePriceCache } from '../../shared/api/api_globals';\nimport { ObjectCache } from '../../shared/cache';\nimport { ErrorCode } from '../../shared/error/error_code';\nimport { AppError } from '../../shared/error/error';\nimport { calculateShareValue } from '../../v1/calculation';\n\nexport class PoolApi {\n  constructor(chainId, poolAddress) {\n    this.chainId = chainId;\n    this.poolAddress = poolAddress;\n    this.pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n  }\n  async init(isEstimatedApi) {\n    await this.pool.init(isEstimatedApi);\n  }\n\n  // =================\n  //  api\n  // =================\n  async getUserStakeInfo(accountAddress) {\n    const pool = this.pool;\n    const liquidity = await pool.lToken.balanceOf(accountAddress);\n    return {\n      chainId: this.chainId,\n      poolAddress: this.poolAddress,\n      isStaked: bg(liquidity).gt(0),\n      bTokens: [{ isStaked: bg(liquidity).gt(0) }],\n    };\n  }\n  async getLiquidityInfo(accountAddress) {\n    await this.init();\n    const pool = this.pool;\n    const lToken = pool.lToken;\n    const [liquidity, lTokenBalance, lTokenTotalSupply] = await Promise.all([\n      pool.getPoolLiquidity(),\n      lToken.balanceOf(accountAddress),\n      lToken.totalSupply(),\n    ]);\n    const { poolMarginRatio } = pool.parameters;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const poolDynamicEquity = await pool.getDynamicEquity();\n    const shareValue = bg(lTokenTotalSupply).eq(0)\n      ? '0'\n      : bg(poolDynamicEquity).div(lTokenTotalSupply).toString();\n\n    const value = pool.symbols.reduce((acc, s) => {\n      return acc.plus(\n        bg(s.tradersNetVolume).times(s.multiplier).times(s.dpmmPrice)\n      );\n    }, bg(0));\n    const removable = bg(poolDynamicEquity).minus(\n      bg(value).times(poolMarginRatio)\n    );\n\n    ObjectCache.set(this.poolAddress, 'liquidity_info', {\n      lTokenBalance,\n      liquidity: liquidity,\n      shareValue: shareValue,\n      lTokenTotalSupply: lTokenTotalSupply,\n      totalDynamicEquity: poolDynamicEquity,\n    });\n    return {\n      totalSupply: lTokenTotalSupply,\n      poolLiquidity: liquidity,\n      shares: lTokenBalance,\n      shareValue,\n      maxRemovableShares: max(\n        min(\n          bg(lTokenBalance),\n          bg(shareValue).eq(0) ? '0' : removable.div(shareValue)\n        ),\n        bg(0)\n      ),\n    };\n  }\n  async getEstimatedLiquidityInfo(accountAddress, newAmount) {\n    //await this.init();\n    //const pool = this.pool;\n    const res = ObjectCache.get(this.poolAddress, 'liquidity_info');\n    if (res) {\n      const {\n        lTokenBalance,\n        liquidity,\n        shareValue,\n        lTokenTotalSupply,\n        totalDynamicEquity,\n      } = res;\n      return {\n        percentage1: bg(lTokenBalance)\n          .div(shareValue)\n          .plus(newAmount)\n          .div(bg(liquidity).plus(newAmount)),\n        shareValue1: calculateShareValue(\n          bg(lTokenTotalSupply).plus(newAmount),\n          bg(totalDynamicEquity).plus(newAmount)\n        ).toString(),\n      };\n    } else {\n      throw new AppError(ErrorCode.INVALID_CACHE, {\n        name: `${this.poolAddress}.liquidity_info`,\n        data: res,\n      });\n    }\n  }\n\n  async getSpecification(symbolId) {\n    await this.init();\n    const pool = this.pool;\n\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbolInfo = pool.symbols[symbolIndex];\n\n    const { symbol, multiplier, feeRatio } = symbolInfo;\n    const parameterInfo = pool.parameters;\n    return {\n      symbol,\n      bTokenSymbol: pool.bTokenSymbol,\n      multiplier,\n      feeRatio,\n      fundingRateCoefficient: bg(1).div(pool.fundingPeriod).toString(),\n      minPoolMarginRatio: parameterInfo.poolMarginRatio,\n      minInitialMarginRatio: parameterInfo.initialMarginRatio,\n      minMaintenanceMarginRatio: parameterInfo.maintenanceMarginRatio,\n      minLiquidationReward: parameterInfo.minLiquidationReward,\n      maxLiquidationReward: parameterInfo.maxLiquidationReward,\n      liquidationCutRatio: parameterInfo.liquidationCutRatio,\n      protocolFeeCollectRatio: parameterInfo.protocolFeeCollectRatio,\n      indexConstituents: getIndexInfo(symbol),\n    };\n  }\n\n  async getPositionInfo(accountAddress, symbolId) {\n    await this.init();\n    const pool = this.pool;\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\n    const symbolIndex = pool.activeSymbolIds.indexOf(symbolId);\n    if (symbolIndex > -1) {\n      const oracleAddress =\n        pool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n          ? ''\n          : pool.symbols[symbolIndex].oracleAddress;\n      const [\n        symbols,\n        lastTimestamp,\n        margin,\n        fundingPeriod,\n        price,\n      ] = await Promise.all([\n        pool.getSymbols(),\n        pool.getLastTimestamp(),\n        pool.pToken.getMargin(accountAddress),\n        pool.getFundingPeriod(),\n        getOraclePriceFromCache2.get(\n          this.chainId,\n          pool.symbols[symbolIndex].symbol,\n          oracleAddress\n        ),\n      ]);\n\n      const positions = await pool.getPositions(accountAddress);\n\n      const symbol = symbols[symbolIndex];\n      const position = positions[symbolIndex];\n      // const { volume } = position\n      // const { multiplier, indexPrice } = symbol\n      const marginHeld = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(s.indexPrice)\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .times(initialMarginRatio)\n            .abs()\n        );\n      }, bg(0));\n      const marginHeldBySymbol = bg(position.volume)\n        .times(symbol.multiplier)\n        .times(symbol.indexPrice)\n        .times(initialMarginRatio)\n        .abs();\n\n      const unrealizedPnl = positions.reduce((acc, p) => {\n        return acc.plus(bg(p.traderPnl));\n      }, bg(0));\n      const unrealizedPnlList = symbols.map((s, index) => {\n        return [s.symbol, positions[index].traderPnl];\n      });\n      const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\n      const dynamicCost = symbols.reduce((acc, s, index) => {\n        if (index !== parseInt(symbolId)) {\n          return acc.plus(\n            bg(positions[index].volume).times(s.dpmmPrice).times(s.multiplier)\n          );\n        } else {\n          return acc;\n        }\n      }, bg(0));\n      const fundingFee = bg(symbol.cumulativeFundingRate)\n        .minus(position.lastCumulativeFundingRate)\n        .plus(\n          bg(symbol.dpmmPrice)\n            .minus(symbol.indexPrice)\n            .times(symbol.multiplier)\n            .div(fundingPeriod)\n            .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\n        )\n        .times(position.volume)\n        .toString();\n\n      //console.log(position.volume, margin, totalCost.toString(), dynamicCost.toString(), symbol.multiplier, maintenanceMarginRatio)\n\n      // set liquidatePrice cache\n      liquidatePriceCache.set(this.poolAddress, {\n        volume: position.volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        price,\n        multiplier: symbol.multiplier,\n        minMaintenanceMarginRatio: maintenanceMarginRatio,\n      });\n\n      return {\n        symbol: symbol.symbol,\n        price: price,\n        markPrice: symbol.dpmmPrice.toString(),\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\n        averageEntryPrice: bg(position.volume).eq(0)\n          ? '0'\n          : bg(position.cost)\n              .div(position.volume)\n              .div(symbol.multiplier)\n              .toString(),\n        margin: margin,\n        marginHeld: marginHeld.toString(),\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\n        unrealizedPnl: unrealizedPnl.toString(),\n        unrealizedPnlList,\n        fundingFee,\n        liquidationPrice: calculateLiquidationPrice(\n          position.volume,\n          margin,\n          totalCost,\n          dynamicCost,\n          symbol.multiplier,\n          maintenanceMarginRatio\n        ).toString(),\n      };\n    }\n  }\n\n  async getPositionInfos(accountAddress) {\n    await this.init();\n    const pool = this.pool;\n    const { initialMarginRatio, maintenanceMarginRatio } = pool.parameters;\n    const [symbols, lastTimestamp, margin, fundingPeriod] = await Promise.all([\n      pool.getSymbols(),\n      //pool.getPositions(accountAddress),\n      pool.getLastTimestamp(),\n      pool.pToken.getMargin(accountAddress),\n      pool.getFundingPeriod(),\n    ]);\n    const positions = await pool.getPositions(accountAddress);\n\n    const totalCost = positions.reduce((acc, p) => acc.plus(p.cost), bg(0));\n\n    return positions\n      .map((p, index) => {\n        const symbolIndex = index;\n        const symbol = symbols[symbolIndex];\n        const position = positions[symbolIndex];\n        // const { volume } = position\n        // const { multiplier, indexPrice } = symbol\n        const marginHeld = symbols.reduce((acc, s, index) => {\n          return acc.plus(\n            bg(s.indexPrice)\n              .times(s.multiplier)\n              .times(positions[index].volume)\n              .times(initialMarginRatio)\n              .abs()\n          );\n        }, bg(0));\n        const marginHeldBySymbol = bg(position.volume)\n          .times(symbol.multiplier)\n          .times(symbol.indexPrice)\n          .times(initialMarginRatio)\n          .abs();\n        const unrealizedPnl = p.traderPnl;\n        const dynamicCost = symbols.reduce((acc, s, idx) => {\n          if (idx !== index) {\n            return acc.plus(\n              bg(positions[idx].volume).times(s.dpmmPrice).times(s.multiplier)\n            );\n          } else {\n            return acc;\n          }\n        }, bg(0));\n        const fundingFee = bg(symbol.cumulativeFundingRate)\n          .minus(position.lastCumulativeFundingRate)\n          .plus(\n            bg(symbol.dpmmPrice)\n              .minus(symbol.indexPrice)\n              .times(symbol.multiplier)\n              .div(fundingPeriod)\n              .times(bg(Math.floor(Date.now() / 1000)).minus(lastTimestamp))\n          )\n          .times(position.volume)\n          .toString();\n        return {\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          price: symbol.indexPrice,\n          markPrice: symbol.dpmmPrice.toString(),\n          volume: bg(position.volume).times(symbol.multiplier).toString(),\n          averageEntryPrice: bg(position.volume).eq(0)\n            ? '0'\n            : bg(position.cost)\n                .div(position.volume)\n                .div(symbol.multiplier)\n                .toString(),\n          margin: margin,\n          marginHeld: marginHeld.toString(),\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\n          unrealizedPnl: unrealizedPnl.toString(),\n          fundingFee,\n          liquidationPrice: calculateLiquidationPrice(\n            position.volume,\n            margin,\n            totalCost,\n            dynamicCost,\n            symbol.multiplier,\n            maintenanceMarginRatio\n          ).toString(),\n        };\n      })\n      .filter((p) => p.volume !== '0');\n  }\n\n  async getEstimatedMargin(accountAddress, volume, leverage, symbolId) {\n    await this.init(true);\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = pool.symbols[symbolIndex];\n    return bg(volume)\n      .abs()\n      .times(symbol.indexPrice)\n      .times(symbol.multiplier)\n      .div(leverage)\n      .toString();\n  }\n\n  async getEstimatedFee(volume, symbolId) {\n    await this.init(true);\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = pool.symbols[symbolIndex];\n    return bg(volume)\n      .abs()\n      .times(symbol.indexPrice)\n      .times(symbol.multiplier)\n      .times(symbol.feeRatio)\n      .toString();\n  }\n\n  async getFundingRate(symbolId) {\n    await this.init();\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = pool.symbols[symbolIndex];\n\n    const liquidity = pool.state.liquidity;\n    return {\n      funding0: bg(symbol.funding).div(symbol.multiplier).toString(),\n      fundingPerSecond: bg(symbol.fundingPerSecond)\n        .div(symbol.multiplier)\n        .toString(),\n      liquidity: liquidity,\n      volume: '-',\n      tradersNetVolume: bg(symbol.tradersNetVolume)\n        .times(symbol.multiplier)\n        .toString(),\n    };\n  }\n\n  async getEstimatedFundingRate(newVolume, symbolId) {\n    await this.init(true);\n    const pool = this.pool;\n\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    const symbol = { ...pool.symbols[symbolIndex] };\n    symbol.dpmmPrice = calculateDpmmPrice(\n      symbol.indexPrice,\n      symbol.K,\n      bg(symbol.tradersNetVolume).plus(newVolume).toString(),\n      symbol.multiplier\n    ).toString();\n    symbol.fundingPerSecond = bg(symbol.dpmmPrice)\n      .minus(symbol.indexPrice)\n      //.times(symbol.multiplier)\n      .div(pool.fundingPeriod)\n      .toString();\n    return {\n      funding1: bg(symbol.fundingPerSecond).times(SECONDS_IN_A_DAY).toString(),\n    };\n  }\n\n  async getLiquidityUsed() {\n    await this.init();\n    const pool = this.pool;\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n    const { poolMarginRatio } = pool.parameters;\n    return pool.symbols\n      .reduce(\n        (acc, s) =>\n          acc.plus(\n            bg(s.tradersNetVolume)\n              .abs()\n              .times(s.indexPrice)\n              .times(s.multiplier)\n              .times(poolMarginRatio)\n          ),\n        bg(0)\n      )\n      .div(pool.state.liquidity)\n      .toString();\n  }\n\n  async getEstimatedLiquidityUsed(newVolume, symbolId) {\n    await this.init(true);\n    const pool = this.pool;\n\n    if (!pool.isSymbolsUpdated()) {\n      await pool.getSymbols();\n    }\n\n    const { poolMarginRatio } = pool.parameters;\n    const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n    //console.log(pool.symbols, poolMarginRatio, pool.state)\n    return pool.symbols\n      .reduce(\n        (acc, s, index) =>\n          index === symbolIndex\n            ? acc.plus(\n                bg(s.tradersNetVolume)\n                  .plus(newVolume)\n                  .abs()\n                  .times(s.indexPrice)\n                  .times(s.multiplier)\n                  .times(poolMarginRatio)\n              )\n            : acc.plus(\n                bg(s.tradersNetVolume)\n                  .abs()\n                  .times(s.indexPrice)\n                  .times(s.multiplier)\n                  .times(poolMarginRatio)\n              ),\n        bg(0)\n      )\n      .div(pool.state.liquidity)\n      .toString();\n  }\n  async getUserBTokensInfo(accountAddress) {\n    const pool = this.pool\n    const { initialMarginRatio } = pool.parameters;\n    const [balance, margin, symbols] = await Promise.all([\n      pool.bToken.balanceOf(accountAddress),\n      pool.pToken.getMargin(accountAddress),\n      pool.getSymbols(),\n    ]);\n    const positions = await pool.getPositions(accountAddress);\n    const marginHeld = symbols.reduce((acc, s, index) => {\n      return acc.plus(\n        bg(s.indexPrice)\n          .times(s.multiplier)\n          .times(positions[index].volume)\n          .times(initialMarginRatio)\n          .abs()\n      );\n    }, bg(0));\n    const unrealizedPnl = positions.reduce((acc, p) => {\n      return acc.plus(bg(p.traderPnl));\n    }, bg(0));\n\n    return [{\n      bTokenAddress: pool.addresses.bTokenAddress,\n      bTokenSymbol: pool.bTokenSymbol,\n      availableBalance: bg(margin).minus(marginHeld).plus(unrealizedPnl).toString(),\n      walletBalance: balance,\n    }];\n  }\n\n  // =================\n  // static method\n  // =================\n}\n\nexport const poolApiFactory = contractFactory(PoolApi);\n","import {\n  checkApiInput,\n  checkApiInputWithoutAccount,\n  checkSymbolId,\n  checkTokenId,\n  checkAmount,\n} from '../../shared/config';\nimport { catchApiError } from '../../shared/utils/api';\nimport { bg } from '../../shared/utils';\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory';\nimport { poolApiFactory } from '../contract/PoolApi';\nimport { calculateDpmmCost } from '../calc';\n\nexport const getUserStakeInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const api = poolApiFactory(chainId, poolAddress);\n    await api.init();\n    return await api.getUserStakeInfo(accountAddress);\n  });\n};\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const api = poolApiFactory(chainId, poolAddress);\n    await api.init()\n    return await api.getLiquidityInfo(accountAddress);\n  });\n};\n\nexport const getEstimatedLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newAmount,\n) => {\n  return catchApiError(async() => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    newAmount = checkAmount(newAmount)\n    const api = poolApiFactory(chainId, poolAddress);\n    await api.init()\n    return await api.getEstimatedLiquidityInfo(accountAddress, newAmount)\n  })\n}\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getSpecification(symbolId);\n    },\n    args,\n    {\n      // symbol: '',\n      // bTokenSymbol: '',\n      // multiplier: '',\n      // feeRatio: '',\n      // fundingRateCoefficient: '',\n      // minPoolMarginRatio: '',\n      // minInitialMarginRatio: '',\n      // minMaintenanceMarginRatio: '',\n      // minLiquidationReward: '',\n      // maxLiquidationReward: '',\n      // liquidationCutRatio: '',\n      // protocolFeeCollectRatio: '',\n      // indexConstituents: { tokens: [], url: '' },\n    }\n  );\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getPositionInfo(accountAddress, symbolId);\n    },\n    args,\n    {}\n  );\n};\n\nexport const getPositionInfos = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getPositionInfos(accountAddress);\n    },\n    args,\n    []\n  );\n};\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.bToken.balanceOf(accountAddress);\n    },\n    args,\n    ''\n  );\n};\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.bToken.isUnlocked(accountAddress, poolAddress);\n    },\n    args,\n    false\n  );\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  const args = [\n    chainId,\n    poolAddress,\n    accountAddress,\n    volume,\n    leverage,\n    symbolId,\n  ];\n  return catchApiError(\n    async (\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    ) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getEstimatedMargin(\n        accountAddress,\n        volume,\n        leverage,\n        symbolId\n      );\n    },\n    args,\n    ''\n  );\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, volume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, volume, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getEstimatedFee(volume, symbolId);\n    },\n    args,\n    ''\n  );\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getFundingRate(symbolId);\n    },\n    args,\n    ''\n  );\n};\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newVolume, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getEstimatedFundingRate(newVolume, symbolId);\n    },\n    args,\n    ''\n  );\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getLiquidityUsed(symbolId);\n    },\n    args,\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newVolume, symbolId) => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const viewer = poolApiFactory(chainId, poolAddress);\n      return await viewer.getEstimatedLiquidityUsed(newVolume, symbolId);\n    },\n    args,\n    ''\n  );\n};\n\nexport const getEstimatedTimePrice = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress] = checkApiInputWithoutAccount(\n        chainId,\n        poolAddress\n      );\n      symbolId = checkTokenId(symbolId);\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      const pool = api.pool;\n      const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n      if (!pool.isSymbolsUpdated()) {\n        await pool.getSymbols();\n      }\n      const symbol = pool.symbols[symbolIndex];\n      //console.log('dpmmPrice', symbol.dpmmPrice.toString(), symbol.indexPrice)\n      const cost = calculateDpmmCost(\n        symbol.indexPrice,\n        symbol.K,\n        symbol.tradersNetVolume,\n        symbol.multiplier,\n        newNetVolume\n      );\n      return bg(cost).div(symbol.multiplier).div(newNetVolume).toString();\n    },\n    [],\n    ''\n  );\n};\n\nexport const getUserBTokensInfo = async (chainId, poolAddress, accountAddress) => {\n  return catchApiError(\n    async () => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const api = poolApiFactory(chainId, poolAddress);\n      await api.init();\n      return await api.getUserBTokensInfo(accountAddress);\n    },\n    [],\n    []\n  );\n};\n","import {\n  deriToNatural,\n  getBlockInfo,\n  getPastEvents,\n  getHttpBase,\n  fetchJson,\n  bg,\n  catchTxApiError,\n} from '../../shared/utils';\n// import {\n//   getPoolConfig,\n// } from '../../shared/config';\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory';\n\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  //console.log('bTokenSymbol', bTokenSymbol)\n  const perpetualPool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n  await perpetualPool.init()\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  const filters = { account: accountAddress };\n  let events = await getPastEvents(\n    chainId,\n    perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  //events = events.filter((i) => i.returnValues.symbolId === symbolId);\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await perpetualPool.formatTradeEvent(item);\n    if (res) {\n      const symbolIndex = perpetualPool.activeSymbolIds.indexOf(res.symbolId);\n      result.unshift({\n        baseToken: perpetualPool.bTokenSymbol,\n        direction: res.direction,\n        volume: bg(res.volume)\n          .times(perpetualPool.symbols[symbolIndex].multiplier)\n          .toString(),\n        price: res.price,\n        indexPrice: res.indexPrice,\n        notional: res.notional,\n        symbol: res.symbol,\n        symbolId: res.symbolId,\n        time: res.time,\n        transactionFee: res.transactionFee,\n        transactionHash: res.transactionHash,\n      });\n    }\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchTxApiError(async () => {\n    let tradeFromBlock,\n      tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const perpetualPool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await perpetualPool.init();\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .map((i) => {\n          const symbolIndex = perpetualPool.activeSymbolIds.indexOf(i.symbolId);\n          if (symbolIndex > -1) {\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              volume: deriToNatural(i.volume)\n                .times(perpetualPool.symbols[symbolIndex].multiplier)\n                .toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else if (i.direction === 'LIQUIDATION') {\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken ? i.baseToken.trim() : '',\n              symbolId: i.symbolId ? i.symbolId : '',\n              symbol: i.symbol ? i.symbol : '',\n              price: i.price ? deriToNatural(i.price).toString() : '',\n              notional: i.notional ? deriToNatural(i.notional).toString() : '',\n              volume: i.volume\n                ? deriToNatural(i.volume)\n                    .times(perpetualPool.symbols[symbolIndex].multiplier)\n                    .toString()\n                : '',\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            return null;\n          }\n        })\n        .filter((i) => i != null);\n    }\n    //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      //const { initialBlock } = getPoolConfig(poolAddress);\n      const initialBlock = 100000000\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  });\n};\n","import {\n  getEstimatedFee,\n  getEstimatedFundingRate,\n  getEstimatedLiquidityUsed,\n  getEstimatedMargin,\n  getFundingRate,\n  getUserStakeInfo,\n  getLiquidityInfo,\n  getEstimatedLiquidityInfo,\n  getLiquidityUsed,\n  getPositionInfo,\n  getPositionInfos,\n  getSpecification,\n  getWalletBalance,\n  isUnlocked,\n  getEstimatedTimePrice,\n  getUserBTokensInfo\n} from './query_api';\nimport { getTradeHistory } from './trade_history_api';\nimport {\n  addLiquidity,\n  closePosition,\n  depositMargin,\n  removeLiquidity,\n  tradeWithMargin,\n  unlock,\n  withdrawMargin,\n} from './transaction_api';\n\nexport const api = {\n  // mining\n  getLiquidityInfo,\n  getUserStakeInfo,\n  getEstimatedLiquidityInfo,\n  // getPoolLiquidity,\n  // getPoolInfoApy,\n  addLiquidity,\n  removeLiquidity,\n  // trading\n  getSpecification,\n  getPositionInfo,\n  getPositionInfos,\n  getWalletBalance,\n  isUnlocked,\n  getEstimatedFee,\n  getEstimatedMargin,\n  getFundingRate,\n  getEstimatedFundingRate,\n  getLiquidityUsed,\n  getEstimatedLiquidityUsed,\n  getEstimatedTimePrice,\n  getUserBTokensInfo,\n  getFundingRateCache: () => {},\n  unlock,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n  // tradeHistory\n  getTradeHistory,\n};\n","import { bg, catchTxApiError } from '../../shared/utils';\nimport { checkAmount, checkAddress, checkSymbolId, checkApiInput, checkChainId } from '../../shared/config';\nimport { perpetualPoolLiteDpmmFactory } from '../contract/factory.js';\n\n// mining\nexport const addLiquidity = async (...args) => {\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      chainId = checkChainId(chainId);\n      poolAddress = checkAddress(poolAddress);\n      accountAddress = checkAddress(accountAddress);\n      amount = checkAmount(amount);\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.addLiquidity(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  return catchTxApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    amount = checkAmount(amount);\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.removeLiquidity(accountAddress, amount);\n  }, []);\n};\n\n//trading\nexport const unlock = async (...args) => {\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n    await pool.init();\n    return await pool.bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (...args) => {\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      amount = checkAmount(amount);\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (...args) => {\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      amount = checkAmount(amount);\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      return await pool.removeMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (...args) => {\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      newVolume = checkAmount(newVolume);\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      const symbolIndex = checkSymbolId(symbolId, pool.activeSymbolIds);\n      const { multiplier } = pool.symbols[symbolIndex];\n      return await pool.trade(\n        accountAddress,\n        symbolId,\n        bg(newVolume).div(multiplier).toString()\n      );\n    },\n    args\n  );\n};\n\nexport const closePosition = async (...args) => {\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      [chainId, poolAddress, accountAddress] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const pool = perpetualPoolLiteDpmmFactory(chainId, poolAddress);\n      await pool.init();\n      const { volume } = await pool.pToken.getPosition(\n        accountAddress,\n        symbolId\n      );\n      if (!bg(volume).eq(0)) {\n        const newVolume = bg(volume).negated().toString();\n        return await pool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import { ObjectCache } from '../../shared/cache';\nimport { checkAmount, checkApiInput, getPoolConfig } from '../../shared/config';\nimport { AppError } from '../../shared/error/error';\nimport { ErrorCode } from '../../shared/error/error_code';\nimport { catchApiError, bg } from '../../shared/utils';\nimport {\n  calculateMaxRemovableShares,\n  calculateShareValue,\n} from '../../v1/calculation';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport { volatilitiesCache } from '../utils';\n\nconst _getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\n  [chainId, poolAddress, accountAddress ] = checkApiInput(\n    chainId,\n    poolAddress,\n    accountAddress\n  );\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  await optionPool.init()\n  const lToken = optionPool.lToken\n  const [\n    lTokenBalance,\n    lTokenTotalSupply,\n  ] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n  ]);\n\n  const symbols = optionPool.symbols\n  const symbolVolatilities = await volatilitiesCache.get(symbols.map((s) => s.symbol))\n  const state = await optionPool.viewer.getPoolStates(poolAddress, [], symbolVolatilities.map((v) => v.volatility))\n  const { poolState } = state;\n  const { initialMarginRatio, liquidity, totalDynamicEquity } = poolState;\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0));\n  const value = symbols.reduce(\n    (acc, s) =>\n      acc.plus(bg(s.tradersNetVolume).times(s.strikePrice).times(s.multiplier)),\n    bg(0)\n  );\n  const shareValue = calculateShareValue(\n      lTokenTotalSupply,\n      totalDynamicEquity\n    ).toString()\n  ObjectCache.set(poolAddress, 'liquidity_info', {\n    lTokenBalance: lTokenBalance.toString(),\n    liquidity: liquidity.toString(),\n    lTokenTotalSupply: lTokenTotalSupply.toString(),\n    totalDynamicEquity: totalDynamicEquity.toString(),\n    shareValue,\n  });\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue,\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      bg(initialMarginRatio).times(10)\n    ).toString(),\n  };\n};\n\nexport const getUserStakeInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(async () => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const optionPool = everlastingOptionFactory(chainId, poolAddress);\n    await optionPool.init();\n    const liquidity = await optionPool.lToken.balanceOf(accountAddress);\n    return {\n      chainId,\n      poolAddress,\n      isStaked: bg(liquidity).gt(0),\n      bTokens: [{ isStaked: bg(liquidity).gt(0) }],\n    };\n  });\n};\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n  );\n};\n\nexport const getEstimatedLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newAmount,\n) => {\n  return catchApiError(async() => {\n    [chainId, poolAddress, accountAddress] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    newAmount = checkAmount(newAmount)\n    const res = ObjectCache.get(poolAddress, 'liquidity_info');\n    if (res) {\n      const {\n        lTokenBalance,\n        liquidity,\n        shareValue,\n        lTokenTotalSupply,\n        totalDynamicEquity,\n      } = res;\n      return {\n        percentage1: bg(lTokenBalance)\n          .div(shareValue)\n          .plus(newAmount)\n          .div(bg(liquidity).plus(newAmount)),\n        shareValue1: calculateShareValue(\n          bg(lTokenTotalSupply).plus(newAmount),\n          bg(totalDynamicEquity).plus(newAmount)\n        ).toString(),\n      };\n\n    } else {\n      throw AppError(ErrorCode.INVALID_CACHE, {\n        name: `${poolAddress}.liquidity_info`,\n        data: res,\n      });\n    }\n  })\n}\n","import { checkApiInput } from '../../shared/config';\nimport { catchTxApiError } from '../../shared/utils';\nimport { everlastingOptionFactory } from '../factory/pool.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    [chainId, poolAddress, accountAddress ] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    return await optionPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    [chainId, poolAddress, accountAddress ] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    return await optionPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import { checkApiInput, checkSymbolId, checkTokenId } from '../../shared/config';\nimport { catchTxApiError, bg } from '../../shared/utils';\n//import { isOrderValid } from '../../v2/calculation';\nimport { everlastingOptionFactory } from '../factory/pool.js';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    [chainId, poolAddress, accountAddress ] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    const optionPool = everlastingOptionFactory(chainId, poolAddress);\n    await optionPool.init()\n    const bToken = optionPool.bToken\n    return await bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      [chainId, poolAddress, accountAddress ] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      return await optionPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      [chainId, poolAddress, accountAddress ] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      return await optionPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      [chainId, poolAddress, accountAddress ] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init()\n      const symbolIndex = checkSymbolId(symbolId, optionPool.activeSymbolIds);\n      const { multiplier } = optionPool.symbols[symbolIndex];\n\n      // const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\n      //   optionPool.getParameters(),\n      //   optionPool.getLiquidity(),\n      //   pToken.getMargin(accountAddress),\n      //   pToken.getActiveSymbolIds(),\n      // ]);\n      // no minInitialMarginRatio in option\n      // const { initialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      // let promises = [];\n\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(optionPool.getSymbol(symbolIds[i]));\n      // }\n      // const symbols = await Promise.all(promises);\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      // }\n      // const positions = await Promise.all(promises);\n\n      // let marginHeld = symbols.reduce((acc, s, index) => {\n      //   if (index === parseInt(symbolId)) {\n      //     return acc.plus(\n      //       bg(s.price)\n      //         .times(s.multiplier)\n      //         .times(bg(positions[index]).volume.plus(newVolume))\n      //         .abs()\n      //     );\n      //   } else {\n      //     return acc.plus(\n      //       bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n      //     );\n      //   }\n      // }, bg(0));\n      // marginHeld = marginHeld.times(initialMarginRatio);\n\n      // let liquidityUsed = symbols.reduce((acc, s, index) => {\n      //   if (index === parseInt(symbolId)) {\n      //     return acc.plus(\n      //       bg(s.tradersNetVolume)\n      //         .plus(newVolume)\n      //         .times(s.price)\n      //         .times(s.multiplier)\n      //         .abs()\n      //     );\n      //   } else {\n      //     return acc.plus(\n      //       bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n      //     );\n      //   }\n      // }, bg(0));\n      // liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      // const orderValidation = isOrderValid(\n      //   margin,\n      //   marginHeld,\n      //   liquidity,\n      //   liquidityUsed\n      // );\n      // if (orderValidation.success) {\n        return await optionPool.trade(\n          accountAddress,\n          symbolId,\n          bg(newVolume).div(multiplier).toString()\n        );\n      // } else {\n      //   throw new Error(orderValidation.error);\n      // }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      [chainId, poolAddress, accountAddress ] = checkApiInput(\n        chainId,\n        poolAddress,\n        accountAddress\n      );\n      symbolId = checkTokenId(symbolId)\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool.init()\n      const pToken = optionPool.pToken\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!bg(volume).eq(0)) {\n        const newVolume = bg(volume).negated().toString();\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import {\n  deriToNatural,\n  naturalToDeri,\n  bg,\n  getBlockInfo,\n  getPastEvents,\n  getPastEventsUseAbi,\n  getHttpBase,\n  fetchJson,\n  max,\n  catchApiError,\n} from '../../shared/utils';\nimport { checkApiInput, DeriEnv } from '../../shared/config';\nimport { everlastingOptionFactory } from '../factory/pool';\n//import { optionPricerFactory } from '../factory/tokens';\nimport { everlastingOptionOldAbi } from '../contract/abis';\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  bTokenSymbol,\n  symbolIdList,\n  symbols,\n  pricer\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const tradeCost = deriToNatural(info.tradeCost);\n  const time = `${+timeStamp.timestamp}000`;\n  const volume = tradeVolume.abs();\n  const symbolId = info.symbolId;\n  const volatility = info.volatility;\n  const index = symbolIdList.indexOf(symbolId);\n  const price = bg(tradeCost).div(\n    bg(tradeVolume).times(symbols[index].multiplier)\n  );\n  const indexPrice = deriToNatural(info.spotPrice);\n\n  const intrinsicValue = symbols[index].isCall\n    ? max(indexPrice.minus(symbols[index].strikePrice), bg(0))\n    : max(bg(symbols[index].strikePrice).minus(indexPrice), bg(0));\n  let timeValue = '0';\n  if (intrinsicValue.lte(0)) {\n    const res = await pricer.getEverlastingTimeValueAndDelta(\n      naturalToDeri(indexPrice),\n      naturalToDeri(symbols[index].strikePrice),\n      volatility,\n      naturalToDeri(bg(1).div(365).toString())\n    );\n    timeValue = res.timeValue;\n  }\n  if (index > -1) {\n    return {\n      direction,\n      baseToken: bTokenSymbol,\n      symbolId,\n      symbol: symbols[index].symbol,\n      price: price.toString(),\n      indexPrice: indexPrice.toString(),\n      volume: volume.times(symbols[index].multiplier).toString(),\n      transactionHash: txHash.toString(),\n      notional: tradeVolume\n        .abs()\n        .times(indexPrice)\n        .times(multiplier[index])\n        .toString(),\n      contractValue: tradeVolume\n        .abs()\n        .times(price)\n        .times(multiplier[index])\n        .toString(),\n      transactionFee: intrinsicValue.gt(0)\n        ? volume\n            .times(symbols[index].multiplier)\n            .times(indexPrice)\n            .times(symbols[index].feeRatioITM)\n            .toString()\n        : volume\n            .times(symbols[index].multiplier)\n            .times(timeValue)\n            .times(symbols[index].feeRatioOTM)\n            .toString(),\n      time,\n    };\n  } else {\n    return null;\n  }\n};\n\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n  // const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  // const { bTokenSymbol, pricer: pricerAddress } = getPoolConfig(\n  //   poolAddress,\n  //   undefined,\n  //   undefined,\n  //   'option'\n  // );\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  await optionPool.init()\n  const bTokenSymbol = optionPool.bTokenSymbol\n  const pricer = optionPool.pricer\n  const [toBlock] = await Promise.all([\n    getBlockInfo(chainId, 'latest'),\n    optionPool.init(),\n  ]);\n  fromBlock = parseInt(fromBlock);\n\n  // let promises = [];\n  // for (let i = 0; i < optionPool.activeSymbolIds.length; i++) {\n  //   promises.push(\n  //     optionPool.getSymbol(optionPool.activeSymbolIds[i].toString())\n  //   );\n  // }\n  //let symbols = await Promise.all(promises);\n  let symbols = optionPool.symbols\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n\n  const filters = { account: accountAddress };\n  let result = [];\n\n  if (DeriEnv.get() === 'testnet') {\n    let events = await getPastEvents(\n      chainId,\n      optionPool.contract,\n      'Trade',\n      filters,\n      fromBlock,\n      toBlock.number\n    );\n\n    //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n    //console.log('online events length:', events.length);\n    for (let i = 0; i < events.length; i++) {\n      const item = events[i];\n      let res;\n      res = await optionPool.formatTradeEvent(item);\n      if (res) {\n        const symbolIndex = optionPool.activeSymbolIds.indexOf(res.symbolId);\n        result.unshift({\n          baseToken: bTokenSymbol,\n          direction: res.direction,\n          volume: bg(res.volume)\n            .times(optionPool.symbols[symbolIndex].multiplier)\n            .toString(),\n          price: res.price,\n          indexPrice: res.indexPrice,\n          notional: res.notional,\n          symbol: res.symbol,\n          symbolId: res.symbolId,\n          time: res.time,\n          contractValue: res.contractValue,\n          transactionFee: res.transactionFee,\n          transactionHash: res.transactionHash,\n        });\n      }\n    }\n  } else {\n    let events = await getPastEventsUseAbi(\n      chainId,\n      poolAddress,\n      everlastingOptionOldAbi,\n      'Trade',\n      filters,\n      fromBlock,\n      toBlock.number\n    );\n\n    // console.log('old online events length:', events.length, fromBlock, toBlock.number);\n    //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n    for (let i = 0; i < events.length; i++) {\n      const item = events[i];\n      const res = await processTradeEvent(\n        chainId,\n        item.returnValues,\n        item.blockNumber,\n        item.transactionHash,\n        multiplier,\n        bTokenSymbol,\n        optionPool.activeSymbolIds,\n        symbols,\n        pricer\n      );\n      res && result.unshift(res);\n    }\n  }\n  result = result.filter((tr) => tr !== null);\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  return catchApiError(async() => {\n    [chainId, poolAddress, accountAddress ] = checkApiInput(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n    let tradeFromBlock,\n      tradeHistory = [];\n    const optionPool = everlastingOptionFactory(chainId, poolAddress);\n    const [res] = await Promise.all([\n      fetchJson(\n        `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n      ),\n      optionPool.init(),\n    ]);\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const symbols = optionPool.symbols;\n    //console.log('history ', tradeHistory)\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\n        .map((i) => {\n          const index = symbols.findIndex((s) => s.symbolId === i.symbolId);\n          if (index > -1) {\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              indexPrice: deriToNatural(i.indexPrice).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              contractValue: deriToNatural(i.contractValue).toString(),\n              volume: deriToNatural(i.volume)\n                .times(symbols[index].multiplier)\n                .toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else if (i.direction === 'LIQUIDATION') {\n            if (\n              i.volume !== '' &&\n              i.volume.indexOf(',') > -1 &&\n              !i.price.startsWith('NaN')\n            ) {\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\n                if (v !== '0') {\n                  return acc.concat([index]);\n                } else {\n                  return acc;\n                }\n              }, []);\n              const prices = i.price.split(',').map((s) => deriToNatural(s));\n              const volumes = i.volume.split(',').map((v) => deriToNatural(v));\n              const res = ids.map((id) => {\n                return {\n                  direction: i.direction.trim(),\n                  baseToken: i.baseToken.trim(),\n                  symbolId: id.toString(),\n                  symbol: symbols[id].symbol,\n                  volume: volumes[id]\n                    .times(symbols[id].multiplier)\n                    .abs()\n                    .toString(),\n                  price: prices[id].toString(),\n                  indexPrice: '',\n                  notional: '',\n                  contractValue: volumes[id]\n                    .abs()\n                    .times(prices[id])\n                    .times(symbols[id].multiplier)\n                    .toString(),\n                  transactionFee: '0',\n                  transactionHash: i.transactionHash,\n                  time: i.time.toString(),\n                };\n              });\n              return res;\n            } else {\n              return {\n                direction: i.direction.trim(),\n                baseToken: i.baseToken.trim(),\n                symbolId: '',\n                symbol: '',\n                volume: '',\n                price: '',\n                indexPrice: '',\n                notional: '',\n                contractValue: '',\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              };\n            }\n          } else {\n            // i.symbolId is not in activeSymbols\n            return null;\n          }\n        })\n        .flat();\n    }\n    tradeHistory = tradeHistory.filter((tr) => tr !== null);\n    // fetch tradeHistory on the block with fromBlock from rest api\n    //console.log('tradeFromBlock', tradeFromBlock)\n    if (tradeFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      // const { initialBlock } = getPoolConfig(\n      //   poolAddress,\n      //   undefined,\n      //   symbolId,\n      //   'option'\n      // );\n\n      // todo: will change latet\n      const initialBlock = 10000000\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  }, [], [])\n};\n","// v2 lite\nimport {\n  getLiquidityInfo,\n  getUserStakeInfo,\n  getEstimatedLiquidityInfo,\n} from './mining_query_api'\n\nimport {\n  addLiquidity,\n  removeLiquidity,\n} from './mining_transaction_api'\n\nimport {\n  getSpecification,\n  getPositionInfo,\n  isUnlocked,\n  getWalletBalance,\n  getEstimatedFee,\n  getEstimatedMargin,\n  getFundingRate,\n  getEstimatedFundingRate,\n  getLiquidityUsed,\n  getEstimatedLiquidityUsed,\n  getFundingRateCache,\n  getPositionInfos,\n  getEstimatedTimePrice,\n  getUserBTokensInfo,\n  //getVolatility,\n} from './trade_query_api'\n\nimport {\n  unlock,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n} from './trade_transaction_api';\n\nimport { getTradeHistory } from './trade_history_api';\n\nexport const api = {\n  // mining\n  getLiquidityInfo,\n  getUserStakeInfo,\n  getEstimatedLiquidityInfo,\n  //getPoolLiquidity,\n  //getPoolInfoApy,\n  addLiquidity,\n  removeLiquidity,\n  // trading\n  getSpecification,\n  getPositionInfo,\n  getPositionInfos,\n  getWalletBalance,\n  isUnlocked,\n  getEstimatedFee,\n  getEstimatedMargin,\n  getFundingRate,\n  getEstimatedFundingRate,\n  getLiquidityUsed,\n  getEstimatedLiquidityUsed,\n  getEstimatedTimePrice,\n  getFundingRateCache,\n  getUserBTokensInfo,\n  unlock,\n  depositMargin,\n  withdrawMargin,\n  tradeWithMargin,\n  closePosition,\n  // tradeHistory\n  getTradeHistory,\n};\n","\nimport { api as apiV1 } from '../v1/api'\nimport { api as apiV2Dpmm } from '../v2_dpmm/api'\nimport { api as apiV2l } from '../v2_lite/api'\nimport { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\nimport { api as apiOption } from '../option/api'\nimport { VERSION_IDS_ALL } from '../shared/config'\n\nexport const api = (versionId) => {\n  const apiMap = {\n    v1: apiV1,\n    v2_dpmm: apiV2Dpmm,\n    v2_lite: apiV2l,\n    v2_lite_open: apiV2l,\n    v2_lite_dpmm: apiV2lDpmm,\n    option: apiOption,\n  };\n  if (VERSION_IDS_ALL.includes(versionId)) {\n    return apiMap[versionId];\n  }\n  return {}\n};\n\nexport const defaultReturnValue = (value = {}) => {\n  return {\n    success: true,\n    response: {\n      data: value,\n    },\n    isDefaultReturnValue: true,\n  };\n};","import { DeriEnv, checkChainId, checkAddress, getLpConfigList } from '../shared/config';\nimport {\n  catchApiError,\n  deriToNatural,\n  getNetworkName,\n  max,\n  bg,\n} from '../shared/utils';\nimport { getLpUserStakeInfo } from '../shared/api';\nimport { databaseFactory } from '../shared/factory';\nimport { AppError } from '../shared/error/error';\nimport { getPoolVersionId } from '../shared/config/pool';\nimport { getPoolConfigList } from './config_api';\n\nimport { api, defaultReturnValue } from './api_shared';\n\nexport const getUserStakeInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    // slp and clp\n    const configs = await getLpConfigList()\n    const config = configs.find((c) => c.pool === poolAddress)\n    if (config) {\n      return getLpUserStakeInfo(chainId, poolAddress, accountAddress)\n    } else {\n      return { success: false, response: versionId.response };\n    }\n  }\n  if (api(versionId).getUserStakeInfo) {\n    return api(versionId).getUserStakeInfo(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n  } else {\n    return defaultReturnValue();\n  }\n};\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).getLiquidityInfo(\n    chainId,\n    poolAddress,\n    accountAddress,\n    bTokenId\n  );\n};\n\nexport const getEstimatedLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newAmount,\n  bTokenId,\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).getEstimatedLiquidityInfo(\n    chainId,\n    poolAddress,\n    accountAddress,\n    newAmount,\n    bTokenId,\n  );\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId);\n    poolAddress = checkAddress(poolAddress);\n    let result = await getPoolConfigList(DeriEnv.get());\n    let configs = [];\n    if (result.success) {\n      configs = result.response.data;\n    }\n    // add lp config\n    configs = configs.concat(await getLpConfigList(DeriEnv.get()));\n    const config = configs.find((v) => v.pool === poolAddress);\n    if (!config) {\n      throw new AppError('CONFIG_NOT_FOUND', {\n        name: 'getPoolConfig',\n        args: [DeriEnv.get(), poolAddress],\n      });\n    }\n    const db = databaseFactory();\n    let res;\n    if (config.bTokens.length > 1 && config.type !== 'lp') {\n      const bTokenIds = config.bTokens.map((b) => b.bTokenId);\n      const key = bTokenIds.reduce(\n        (acc, bTokenId) => [\n          ...acc,\n          `${chainId}.${poolAddress}.liquidity${bTokenId}`,\n        ],\n        [`${chainId}.${poolAddress}.liquidity`]\n      );\n      const result = await db.getValues(key);\n      const totalValue = deriToNatural(result[0]).toString();\n      const bTokens = bTokenIds.reduce((acc, bTokenId, index) => {\n        return [\n          ...acc,\n          {\n            bTokenId,\n            liquidity: deriToNatural(result[1 + index]).toString(),\n          },\n        ];\n      }, []);\n      res = {\n        totalValue,\n        bTokens,\n      };\n    } else {\n      const result = await db.getValues([\n        `${chainId}.${poolAddress}.liquidity`,\n      ]);\n      const liquidity = deriToNatural(result[0]).toString();\n      res = {\n        totalValue: liquidity,\n        bTokens: [{ liquidity }],\n      };\n    }\n    return res;\n  });\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  return catchApiError(async () => {\n    chainId = checkChainId(chainId);\n    poolAddress = checkAddress(poolAddress);\n    let result = await getPoolConfigList(DeriEnv.get());\n    let configs = [];\n    if (result.success) {\n      configs = result.response.data;\n    }\n    // add lp config\n    configs = configs.concat(await getLpConfigList(DeriEnv.get()));\n    const config = configs.find((v) => v.pool === poolAddress);\n    if (!config) {\n      throw new AppError('CONFIG_NOT_FOUND', {\n        name: 'getPoolConfig',\n        args: [DeriEnv.get(), poolAddress],\n      });\n    }\n    const db = databaseFactory(true);\n    let res;\n    if (config.bTokens.length > 1 && config.type !== 'lp') {\n      const bTokenIds = config.bTokens.map((b) => b.bTokenId);\n      const key = bTokenIds.reduce(\n        (acc, bTokenId) => [\n          ...acc,\n          ...[\n            `${getNetworkName(chainId)}.${poolAddress}.apy${bTokenId}`,\n            `${getNetworkName(\n              chainId\n            )}.${poolAddress}.V2.multiplier${bTokenId}`,\n          ],\n        ],\n        []\n      );\n      const result = await db.getValues(key);\n      const apys = result.reduce(\n        (acc, a, index) => [\n          ...acc,\n          ...(index % 2 === 0 ? [deriToNatural(a)] : []),\n        ],\n        []\n      );\n      const maxApy = max(...apys).toString();\n      const bTokens = bTokenIds.reduce((acc, bTokenId, index) => {\n        return [\n          ...acc,\n          {\n            bTokenId,\n            apy: deriToNatural(result[index * 2]).toString(),\n            multiplier: deriToNatural(result[index * 2 + 1]).toString(),\n          },\n        ];\n      }, []);\n      res = {\n        maxApy,\n        bTokens,\n      };\n    } else if (config.type === 'lp') {\n      const result = await db.getValues([\n        `${getNetworkName(chainId)}.${poolAddress}.apy`,\n        `${getNetworkName(chainId)}.${poolAddress}.apy2`,\n      ]);\n      const [apy1, apy2] = [\n        deriToNatural(result[0]).toString(),\n        deriToNatural(result[1]).toString(),\n      ];\n      res = {\n        maxApy: max(bg(apy1), bg(apy2)).toString(),\n        bTokens: [{ apy: apy1 }, { apy: apy2 }],\n      };\n    } else {\n      const result = await db.getValues([\n        `${getNetworkName(chainId)}.${poolAddress}.apy`,\n      ]);\n      const apy = deriToNatural(result[0]).toString();\n      res = {\n        maxApy: apy,\n        bTokens: [{ apy, multiplier: '1' }],\n      };\n    }\n    return res;\n  });\n};\n","//import {addLiquidity2, removeLiquidity2 } from '../v1/api/contract_transaction_api_v2';\n// import { LITE_VERSIONS } from '../shared/config';\n// import { addLiquidityV2l, removeLiquidityV2l } from '../v2_lite/api';\n\n// import { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\n// import { api as apiV2Dpmm } from '../v2_dpmm/api'\n// import { api as apiOption } from '../option/api'\n// import { api as apiV1} from '../v1/api'\n\nimport { getPoolVersionId } from '../shared/config/pool';\nimport { api } from './api_shared'\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (versionId.failed) {\n    return { success: false, response: versionId.response }\n  }\n  return api(versionId).addLiquidity(\n    chainId,\n    poolAddress,\n    accountAddress,\n    amount,\n    bTokenId\n  );\n  // if (LITE_VERSIONS.includes(versionId)) {\n  //   return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\n  // } else if (versionId === 'option') {\n  //   return apiOption.addLiquidity(chainId, poolAddress, accountAddress, amount);\n  // } else if (versionId === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.addLiquidity(chainId, poolAddress, accountAddress, amount);\n  // } else if (versionId === 'v2_dpmm') {\n  //   return apiV2Dpmm.addLiquidity(chainId, poolAddress, accountAddress, amount, bTokenId);\n  // } else if (versionId === 'v1') {\n  //   return apiV1.addLiquidity(chainId, poolAddress, accountAddress, amount);\n  // }\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum,\n) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (versionId.failed) {\n    return { success: false, response: versionId.response }\n  }\n  return api(versionId).removeLiquidity(chainId, poolAddress, accountAddress, amount, bTokenId, isMaximum)\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\n  // } else if (version === 'option') {\n  //   return apiOption.removeLiquidity(chainId, poolAddress, accountAddress, amount, isMaximum)\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.removeLiquidity(chainId, poolAddress, accountAddress, amount);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.removeLiquidity(chainId, poolAddress, accountAddress, amount, bTokenId);\n  // } else if (version === 'v1') {\n  //   return apiV1.removeLiquidity(chainId, poolAddress, accountAddress, amount);\n  // }\n}\n","// import { bTokenFactory } from '../../shared/factory';\n// import {\n//   getPoolBTokenIdList,\n//   getPoolBTokenList,\n//   getPoolConfig2,\n//   getPoolSymbolIdList,\n//   getPoolSymbolList,\n// } from '../../shared/config';\nimport { bg, min, max, catchApiError, catchTxApiError } from '../../shared/utils'\n// import { getOraclePrice } from '../../shared/utils/oracle'\n// import { getIndexInfo } from '../../shared/config/token';\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\nimport {\n  calculateEntryPrice,\n  calculateLiquidationPrice,\n  calculateFundingRate,\n  calculateFundingFee,\n  processFundingRate,\n} from '../calculation';\n// import { perpetualPoolFactory, pTokenFactory } from '../factory';\n\n// export const getSpecification = async (\n//   chainId,\n//   poolAddress,\n//   symbolId,\n// ) => {\n//   return await catchApiError(async() => {\n//     const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\n//     const bTokens = getPoolBTokenList(poolAddress)\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n//     const [symbolInfo, parameterInfo] = await Promise.all([\n//       perpetualPool.getSymbol(symbolId),\n//       perpetualPool.getParameters(),\n//     ])\n//     const bTokenDiscounts = (await Promise.all(\n//       bTokens.reduce(\n//         (acc, b, index) =>\n//           acc.concat([perpetualPool.getBToken(index.toString())]),\n//         []\n//       )\n//     )).map((b) => b.discount);\n//     const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\n//     const {\n//       minPoolMarginRatio,\n//       minInitialMarginRatio,\n//       minMaintenanceMarginRatio,\n//       minLiquidationReward,\n//       maxLiquidationReward,\n//       liquidationCutRatio,\n//       protocolFeeCollectRatio,\n//     } = parameterInfo\n//     return {\n//       symbol: symbol,\n//       bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\n//       bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\n//       multiplier: multiplier.toString(),\n//       feeRatio: feeRatio.toString(),\n//       fundingRateCoefficient: fundingRateCoefficient.toString(),\n//       minPoolMarginRatio: minPoolMarginRatio.toString(),\n//       minInitialMarginRatio: minInitialMarginRatio.toString(),\n//       minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n//       //minAddLiquidity: minAddLiquidity.toString(),\n//       //redemptionFeeRatio: redemptionFeeRatio.toString(),\n//       minLiquidationReward: minLiquidationReward.toString(),\n//       maxLiquidationReward: maxLiquidationReward.toString(),\n//       liquidationCutRatio: liquidationCutRatio.toString(),\n//       protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n//       indexConstituents: getIndexInfo(symbol)\n//     }\n\n//   })\n// };\n\n// export const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n//   return await catchApiError(async() => {\n//     const symbolConfigList = getPoolSymbolList(poolAddress)\n//     const bTokenIdList = getPoolBTokenIdList(poolAddress)\n//     const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n//     const symbolList = symbolConfigList.map((i) => i.symbol)\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n//     const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n//     const pToken = pTokenFactory(chainId, pTokenAddress);\n//     const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\n//       perpetualPool.getSymbol(symbolId),\n//       perpetualPool.getParameters(),\n//       perpetualPool.getLastUpdatedBlockNumber(),\n//       perpetualPool.getLatestBlockNumber(),\n//       pToken.getPosition(accountAddress, symbolId),\n//       pToken.getMargins(accountAddress),\n//       pToken.getPositions(accountAddress),\n//       getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n//     ])\n//     const { volume, cost, lastCumulativeFundingRate } = positionInfo\n//     const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n//     const {\n//       minInitialMarginRatio,\n//       minMaintenanceMarginRatio,\n//     } = parameterInfo\n//     let promises = []\n//     for (let i=0; i<bTokenIdList.length; i++) {\n//       promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n//     }\n//     const bTokens = await Promise.all(promises)\n//     const margin = bTokens.reduce((accum, a, index) => {\n//       return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n//     }, bg(0))\n\n//     promises = []\n//     for (let i=0; i<symbolIdList.length; i++) {\n//       promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n//     }\n//     const symbols = await Promise.all(promises)\n//     promises = []\n//     for (let i=0; i<symbolList.length; i++) {\n//       promises.push(getOraclePrice(chainId, symbolList[i]))\n//     }\n//     const symbolPrices = await Promise.all(promises)\n//     const price = symbolPrices[symbolId]\n//     priceCache.set(poolAddress, symbolId, price)\n//     const marginHeld = symbols.reduce((accum, s, index) => {\n//       return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n//     }, bg(0))\n//     const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\n//     //console.log('margin', margin.toString(), marginHeld.toString())\n//     //\n//     //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\n//     const unrealizedPnl = symbols.reduce((accum, s, index) => {\n//       return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n//     }, bg(0))\n//     const unrealizedPnlList = symbols.map((s, index) => {\n//       return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n//     })\n\n//     const totalCost = positions.reduce((accum, a) => {\n//       return accum.plus(bg(a.cost))\n//     }, bg(0))\n//     const dynamicCost = symbols.reduce((accum, s, index) => {\n//       if (index !== parseInt(symbolId)) {\n//         return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n//       } else {\n//         return accum\n//       }\n//     }, bg(0))\n//     //console.log('cost', costTotal.toString())\n//     const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n//     const fundingFee = calculateFundingFee(\n//       tradersNetVolume,\n//       latestPrice,\n//       multiplier,\n//       fundingRateCoefficient,\n//       liquidity,\n//       cumulativeFundingRate,\n//       lastCumulativeFundingRate,\n//       lastUpdatedBlockNumber,\n//       latestBlockNumber,\n//       volume,\n//     );\n\n//     // set liquidatePrice cache\n//     liquidatePriceCache.set(poolAddress, {\n//       volume,\n//       margin,\n//       totalCost,\n//       dynamicCost,\n//       price,\n//       multiplier,\n//       minMaintenanceMarginRatio,\n//     });\n//   return {\n//       price: price,\n//       volume: bg(volume).times(multiplier).toString(),\n//       averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n//       margin: margin.toString(),\n//       marginHeld: marginHeld.toString(),\n//       marginHeldBySymbol: marginHeldBySymbol.toString(),\n//       unrealizedPnl: unrealizedPnl.toString(),\n//       unrealizedPnlList,\n//       liquidationPrice: calculateLiquidationPrice(\n//         volume,\n//         margin,\n//         totalCost,\n//         dynamicCost,\n//         multiplier,\n//         minMaintenanceMarginRatio\n//       ).toString(),\n//       fundingFee: fundingFee.toString()\n//     };\n//   })\n// }\n\n// export const getPositionInfos = async (chainId, poolAddress, accountAddress) => {\n//   return await catchTxApiError(async() => {\n//     const symbolConfigList = getPoolSymbolList(poolAddress)\n//     const bTokenIdList = getPoolBTokenIdList(poolAddress)\n//     const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n//     const symbolList = symbolConfigList.map((i) => i.symbol)\n//     //console.log('bTokenList', bTokenList)\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n//     const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, '0')\n//     const pToken = pTokenFactory(chainId, pTokenAddress);\n//     const [parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, margins, positions] = await Promise.all([\n//       //perpetualPool.getSymbol(symbolId),\n//       perpetualPool.getParameters(),\n//       perpetualPool.getLastUpdatedBlockNumber(),\n//       perpetualPool.getLatestBlockNumber(),\n//       //pToken.getPosition(accountAddress, symbolId),\n//       pToken.getMargins(accountAddress),\n//       pToken.getPositions(accountAddress),\n//       //getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n//     ])\n//     const {\n//       minInitialMarginRatio,\n//       minMaintenanceMarginRatio,\n//     } = parameterInfo\n//     let promises = []\n//     for (let i=0; i<bTokenIdList.length; i++) {\n//       promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n//     }\n//     const bTokens = await Promise.all(promises)\n//     promises = []\n//     for (let i=0; i<symbolIdList.length; i++) {\n//       promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n//     }\n//     const symbols = await Promise.all(promises)\n//     promises = []\n//     for (let i=0; i<symbolList.length; i++) {\n//       promises.push(getOraclePrice(chainId, symbolList[i]))\n//     }\n//     const symbolPrices = await Promise.all(promises)\n\n//     const margin = bTokens.reduce((accum, a, index) => {\n//       return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n//     }, bg(0))\n\n//     const marginHeld = symbols.reduce((accum, s, index) => {\n//       return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n//     }, bg(0))\n//     //\n//     // const unrealizedPnlList = symbols.map((s, index) => {\n//     //   return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n//     // })\n\n//     //console.log('cost', costTotal.toString())\n//     const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n\n//     return positions.map((p, index) => {\n//       const symbol = symbols[index]\n//       const symbolId = symbolIdList[index]\n//       const price = symbolPrices[index]\n//       priceCache.set(poolAddress, symbolId, price)\n//       const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbol\n//       const { volume, cost, lastCumulativeFundingRate } = p\n//       const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[index]).times(minInitialMarginRatio)\n//       const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\n//       const totalCost = positions.reduce((accum, a) => {\n//         return accum.plus(bg(a.cost))\n//       }, bg(0))\n//       const dynamicCost = symbols.reduce((accum, s, idx) => {\n//         if (idx !== index) {\n//           return accum.plus(bg(positions[idx].volume).times(symbolPrices[idx]).times(s.multiplier))\n//         } else {\n//           return accum\n//         }\n//       }, bg(0))\n//       const fundingFee = calculateFundingFee(\n//         tradersNetVolume,\n//         price,\n//         multiplier,\n//         fundingRateCoefficient,\n//         liquidity,\n//         cumulativeFundingRate,\n//         lastCumulativeFundingRate,\n//         lastUpdatedBlockNumber,\n//         latestBlockNumber,\n//         volume,\n//       );\n//       return {\n//         symbol: symbol.symbol,\n//         symbolId: index.toString(),\n//         price: symbolPrices[index],\n//         volume: bg(p.volume).times(multiplier).toString(),\n//         averageEntryPrice: calculateEntryPrice(p.volume, cost, multiplier).toString(),\n//         margin: margin.toString(),\n//         marginHeld: marginHeld.toString(),\n//         marginHeldBySymbol: marginHeldBySymbol.toString(),\n//         //unrealizedPnlList,\n//         unrealizedPnl: unrealizedPnl.toString(),\n//         liquidationPrice: calculateLiquidationPrice(\n//           volume,\n//           margin,\n//           totalCost,\n//           dynamicCost,\n//           multiplier,\n//           minMaintenanceMarginRatio\n//         ).toString(),\n//         fundingFee: fundingFee.toString()\n//       };\n//     }).filter((p) => p.volume !== '0')\n//   }, [], [])\n// }\n\n// export const getWalletBalance = async (\n//   chainId,\n//   poolAddress,\n//   accountAddress,\n//   bTokenId,\n// ) => {\n//   return await catchApiError(async() => {\n//     const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n//     const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n//     return balance.toString()\n//   }, [], '')\n// }\n\nexport const getEstimatedLiquidatePrice = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  return catchApiError(async () => {\n    let {\n      volume,\n      margin,\n      totalCost,\n      dynamicCost,\n      price,\n      multiplier,\n      minMaintenanceMarginRatio,\n    } = liquidatePriceCache.get(poolAddress);\n    totalCost = bg(totalCost).plus(\n      bg(newVolume).times(price).times(multiplier)\n    );\n    //console.log(totalCost.toString())\n    return calculateLiquidationPrice(\n      bg(volume).plus(newVolume),\n      margin,\n      totalCost,\n      dynamicCost,\n      multiplier,\n      minMaintenanceMarginRatio\n    ).toString();\n  }, [], '');\n};\n\n// export const isUnlocked = async (\n//   chainId,\n//   poolAddress,\n//   accountAddress,\n//   bTokenId\n// ) => {\n//   return await catchApiError(async () => {\n//     const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n//     const bToken = bTokenFactory(chainId, bTokenAddress);\n//     return await bToken.isUnlocked(accountAddress, poolAddress);\n//   }, [], false);\n// };\n\n// export const getEstimatedFee = async (\n//   chainId,\n//   poolAddress,\n//   volume,\n//   symbolId\n// ) => {\n//   return await catchApiError(\n//     async () => {\n//       let price = priceCache.get(poolAddress, symbolId);\n//       const { symbol } = getPoolConfig2(poolAddress, null, symbolId);\n//       if (!price) {\n//         //price = await getOraclePrice(poolAddress, symbolId)\n//         price = await getOraclePrice(chainId, symbol);\n//         priceCache.set(poolAddress, symbolId, price);\n//       }\n//       let cache = fundingRateCache.get(chainId, poolAddress, symbolId);\n//       if (!cache || !cache.multiplier) {\n//         await _getFundingRate(chainId, poolAddress, symbolId);\n//         cache = fundingRateCache.get(chainId, poolAddress, symbolId);\n//       }\n//       const { multiplier, feeRatio } = cache;\n//       //console.log(volume, price, multiplier, feeRatio)\n//       return bg(volume)\n//         .abs()\n//         .times(price)\n//         .times(multiplier)\n//         .times(feeRatio)\n//         .toString();\n//     },\n//     [],\n//     ''\n//   );\n// };\n\n// export const getEstimatedMargin = async (\n//   chainId,\n//   poolAddress,\n//   accountAddress,\n//   volume,\n//   leverage,\n//   symbolId\n// ) => {\n//   return await catchApiError(async () => {\n//     const { symbol } = getPoolConfig2(poolAddress, null, symbolId);\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n//     const [price, symbolInfo] = await Promise.all([\n//       //getOraclePrice(poolAddress, symbolId),\n//       getOraclePrice(chainId, symbol),\n//       perpetualPool.getSymbol(symbolId),\n//     ]);\n//     priceCache.set(poolAddress, symbolId, price);\n//     const { multiplier } = symbolInfo;\n//     //console.log('m',multiplier.toString())\n//     return bg(volume)\n//       .abs()\n//       .times(price)\n//       .times(multiplier)\n//       .div(bg(leverage))\n//       .toString();\n//   });\n// };\n\n// export const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n//   return fundingRateCache.get(chainId, poolAddress, symbolId)\n// }\n\n// const _getFundingRate = async(chainId, poolAddress, symbolId) => {\n//   const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n//   const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n//   let bTokenIdList = getPoolBTokenIdList(poolAddress)\n//   let promiseList = []\n//   for (let i=0; i<bTokenIdList.length; i++) {\n//     promiseList.push(perpetualPool.getBToken(i))\n//   }\n//   const bTokenInfoList = await Promise.all(promiseList)\n//   const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n//   //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n//   //console.log('pnl', pnl.toString())\n\n//   const [price, symbolInfo, parameterInfo ] = await Promise.all([\n//     //getOraclePrice(poolAddress, symbolId),\n//     getOraclePrice(chainId, symbol),\n//     perpetualPool.getSymbol(symbolId),\n//     perpetualPool.getParameters(),\n//   ])\n//   priceCache.set(poolAddress, symbolId, price)\n//   const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\n//   const { minPoolMarginRatio } = parameterInfo;\n//   const fundingRateArgs = [\n//     tradersNetVolume,\n//     price,\n//     multiplier,\n//     liquidity,\n//     fundingRateCoefficient,\n//   ]\n//   const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n//   const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n//   // const liquidityUsedArgs = [\n//   //   tradersNetVolume,\n//   //   price,\n//   //   multiplier,\n//   //   liquidity,\n//   //   minPoolMarginRatio,\n//   // ]\n//   let symbolIdList = getPoolSymbolIdList(poolAddress)\n//   let promises = []\n//   for (let i=0; i<symbolIdList.length; i++) {\n//     promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n//   }\n//   const symbols = await Promise.all(promises)\n//   //console.log('margin', margin.toString(), marginHeld.toString())\n//   const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n//     return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n//   }, bg(0))\n\n//   //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\n//   const res = {\n//     price,\n//     multiplier: multiplier.toString(),\n//     feeRatio: feeRatio.toString(),\n//     tradersNetVolume: tradersNetVolume.toString(),\n//     liquidity: liquidity.toString(),\n//     //pnl: pnl.toString(),\n//     fundingRateCoefficient: fundingRateCoefficient.toString(),\n//     minPoolMarginRatio: minPoolMarginRatio.toString(),\n//     fundingRatePerBlock: fundingRatePerBlock,\n//     fundingRate: fundingRate,\n//     liquidityUsed: liquidityUsedInAmount.div(liquidity)\n//   }\n//   fundingRateCache.set(chainId, poolAddress, symbolId, res)\n//   return res\n// }\n\n// export const getFundingRate = async (chainId, poolAddress, symbolId) => {\n//   return await catchApiError(async () => {\n//     const res = await _getFundingRate(chainId, poolAddress, symbolId);\n//     const {\n//       fundingRate,\n//       fundingRatePerBlock,\n//       liquidity,\n//       tradersNetVolume,\n//       multiplier,\n//     } = res;\n//     return {\n//       fundingRate0: fundingRate.times(100).toString(),\n//       fundingRatePerBlock: fundingRatePerBlock.toString(),\n//       liquidity: liquidity.toString(),\n//       volume: '-',\n//       tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\n//     };\n//   });\n// };\n\n// export const getEstimatedFundingRate = async (\n//   chainId,\n//   poolAddress,\n//   newNetVolume,\n//   symbolId\n// ) => {\n//   return await catchApiError(async () => {\n//     let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n//     if (!res) {\n//       res = await _getFundingRate(chainId, poolAddress, symbolId);\n//     }\n//     const args = [\n//       bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n//       res.price,\n//       res.multiplier,\n//       res.liquidity,\n//       res.fundingRateCoefficient,\n//     ];\n//     let fundingRate1 = calculateFundingRate(...args);\n//     fundingRate1 = processFundingRate(chainId, fundingRate1);\n//     return {\n//       fundingRate1: fundingRate1.times(100).toString(),\n//     };\n//   });\n// };\n\n// export const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n//   return await catchApiError(async () => {\n//     let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n//     if (!res) {\n//       res = await _getFundingRate(chainId, poolAddress, symbolId);\n//     }\n//     return {\n//       liquidityUsed0: res.liquidityUsed.times(100).toString(),\n//     };\n//   });\n// };\n\n// export const getEstimatedLiquidityUsed = async (\n//   chainId,\n//   poolAddress,\n//   newNetVolume,\n//   symbolId\n// ) => {\n//   return await catchApiError(async () => {\n//     let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n//     if (!res) {\n//       res = await _getFundingRate(chainId, poolAddress, symbolId);\n//     }\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n//     // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n//     // const pToken = pTokenFactory(chainId, pTokenAddress);\n//     // const { volume } = pToken.getPosition(accountAddress, symbolId);\n//     let symbolIdList = getPoolSymbolIdList(poolAddress);\n//     let promises = [];\n//     for (let i = 0; i < symbolIdList.length; i++) {\n//       promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n//     }\n//     const symbols = await Promise.all(promises);\n//     let liquidityUsed0 = symbols.reduce((accum, a, index) => {\n//       if (index === parseInt(symbolId)) {\n//         return accum.plus(\n//           bg(a.price)\n//             .times(a.multiplier)\n//             .times(a.tradersNetVolume.plus(newNetVolume))\n//             .abs()\n//         );\n//       } else {\n//         return accum.plus(\n//           bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs()\n//         );\n//       }\n//     }, bg(0));\n//     //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\n//     //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\n//     const liquidityUsed1 = liquidityUsed0\n//       .times(res.minPoolMarginRatio)\n//       .div(res.liquidity);\n//     return {\n//       liquidityUsed1: liquidityUsed1.times(100).toString(),\n//     };\n//   });\n// };\n\n\n// export const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\n//   return await catchApiError(async() => {\n//     let bTokenList = getPoolBTokenList(poolAddress)\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n//     const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n//     const pToken = pTokenFactory(chainId, pTokenAddress);\n//     // let bTokenList = bTokensConfigList.map((i) => {\n//     //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\n//     // })\n//     let promiseList = []\n//     for (let i=0; i<bTokenList.length; i++) {\n//       promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\n//     }\n//     const resultList = await Promise.all(promiseList)\n//     for (let i=0; i<bTokenList.length; i++) {\n//       bTokenList[i].walletBalance = resultList[i].toString()\n//     }\n\n//     const bTokenIdList = getPoolBTokenIdList(poolAddress)\n//     const symbolIdList = getPoolSymbolIdList(poolAddress)\n//     const [margins, positions, parameterInfo] = await Promise.all([\n//       pToken.getMargins(accountAddress),\n//       pToken.getPositions(accountAddress),\n//       perpetualPool.getParameters(),\n//     ]);\n//     const { minInitialMarginRatio } = parameterInfo;\n\n//     let promises = []\n//     for (let i=0; i<bTokenIdList.length; i++) {\n//       promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n//     }\n//     const bTokens = await Promise.all(promises)\n//     const margin = bTokens.reduce((accum, a, index) => {\n//       return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n//     }, bg(0))\n//     //console.log('margin', margin.toString())\n\n//     promises = []\n//     for (let i=0; i<symbolIdList.length; i++) {\n//       promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n//     }\n//     const symbols = await Promise.all(promises)\n\n//     promises = []\n//     const symbolList = symbols.map((s) => s.symbol)\n//     for (let i=0; i< symbols.length; i++) {\n//       promises.push(getOraclePrice(chainId, symbolList[i]))\n//     }\n//     const symbolPrices = await Promise.all(promises)\n//     //console.log(symbolPrices)\n\n//     const marginHeld = symbols.reduce((accum, a, index) => {\n//       return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\n//     }, bg(0))\n//     //console.log('marginHeld', marginHeld.toString())\n\n//     const pnl = symbols.reduce((accum, a, index) => {\n//       return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\n//     }, bg(0))\n//     //console.log('pnl', pnl.toString())\n\n//     bTokenList = bTokenList.map((i, index) => {\n//       if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\n//         i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\n//       } else {\n//         i.availableBalance = '-'\n//       }\n//       return i\n//     })\n//     return bTokenList\n//   }, [], [])\n// }\n\n// export const getFundingFee = async (\n//   chainId,\n//   poolAddress,\n//   accountAddress,\n//   symbolId\n// ) => {\n//   return await catchApiError(async () => {\n//     const symbolConfigList = getPoolSymbolList(poolAddress);\n//     const symbolList = symbolConfigList.map((i) => i.symbol);\n//     const { pToken: pTokenAddress } = getPoolConfig2(\n//       poolAddress,\n//       null,\n//       symbolId\n//     );\n//     const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n//     const pToken = pTokenFactory(chainId, pTokenAddress);\n//     const [\n//       symbolInfo,\n//       positionInfo,\n//       price,\n//       lastUpdatedBlockNumber,\n//       latestBlockNumber,\n//     ] = await Promise.all([\n//       perpetualPool.getSymbol(symbolId),\n//       pToken.getPosition(accountAddress, symbolId),\n//       getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\n//       perpetualPool.getLastUpdatedBlockNumber(),\n//       perpetualPool.getLatestBlockNumber(),\n//     ]);\n//     const { volume, lastCumulativeFundingRate } = positionInfo;\n//     const {\n//       multiplier,\n//       fundingRateCoefficient,\n//       tradersNetVolume,\n//       cumulativeFundingRate,\n//     } = symbolInfo;\n//     const bTokenIdList = getPoolBTokenIdList(poolAddress);\n//     let promises = [];\n//     for (let i = 0; i < bTokenIdList.length; i++) {\n//       promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n//     }\n//     const bTokens = await Promise.all(promises);\n//     const liquidity = bTokens.reduce(\n//       (accum, i) =>\n//         accum.plus(\n//           bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)\n//         ),\n//       bg(0)\n//     );\n//     const fundingFee = calculateFundingFee(\n//       tradersNetVolume,\n//       price,\n//       multiplier,\n//       fundingRateCoefficient,\n//       liquidity,\n//       cumulativeFundingRate,\n//       lastCumulativeFundingRate,\n//       lastUpdatedBlockNumber,\n//       latestBlockNumber,\n//       volume\n//     );\n//     return fundingFee.toString();\n//   }, [], '');\n// };\n","// import {\n//   getPositionInfoV2l,\n//   getPositionInfosV2l,\n//   isUnlockedV2l,\n//   getEstimatedMarginV2l,\n//   getEstimatedFeeV2l,\n//   getEstimatedFundingRateV2l,\n//   getEstimatedLiquidityUsedV2l,\n//   getSpecificationV2l,\n//   getWalletBalanceV2l,\n//   getFundingRateV2l,\n//   getLiquidityUsedV2l,\n//   getFundingRateCacheV2l,\n// } from '../v2_lite/api';\n\n// import { api as apiV1 } from '../v1/api'\n// import { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\n// import { api as apiOption } from '../option/api'\n\nimport { getPoolVersionId } from '../shared/config/pool';\nimport { isDeriUnlocked } from '../shared/api';\nimport { LITE_VERSIONS } from '../shared/config';\n\nimport { getEstimatedLiquidatePriceV2 } from '../v2/api';\n\nimport { api } from './api_shared'\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).getSpecification(chainId, poolAddress, symbolId);\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getSpecificationV2l(chainId, poolAddress, symbolId);\n  // } else if (version === 'option') {\n  //   return apiOption.getSpecification(chainId, poolAddress, symbolId);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getSpecification(chainId, poolAddress, symbolId);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getSpecification(chainId, poolAddress, symbolId);\n  // } else if (version === 'v1') {\n  //   return apiV1.getSpecification(chainId, poolAddress);\n  // }\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).getPositionInfo(\n    chainId,\n    poolAddress,\n    accountAddress,\n    symbolId\n  );\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId);\n  // } else if (version === 'option') {\n  //   return apiOption.getPositionInfo(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getPositionInfo(chainId, poolAddress, accountAddress, symbolId);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getPositionInfo(chainId, poolAddress, accountAddress, symbolId);\n  // } else if (version === 'v1') {\n  //   return apiV1.getPositionInfo(chainId, poolAddress, accountAddress);\n  // }\n};\n\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).getPositionInfos(chainId, poolAddress, accountAddress); \n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getPositionInfosV2l(chainId, poolAddress, accountAddress)\n  // } else if (version === 'option') {\n  //   return apiOption.getPositionInfos(chainId, poolAddress, accountAddress)\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getPositionInfos(chainId, poolAddress, accountAddress);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getPositionInfos(chainId, poolAddress, accountAddress);\n  // } else if (version === 'v1') {\n  //   return [\n  //     await apiV1.getPositionInfo(chainId, poolAddress, accountAddress),\n  //   ].filter((p) => p.volume !== '0');\n  // } else {\n  //   // return empty array for v1, v2, v2_lite\n  //   return []\n  // }\n}\nexport const getBTokenBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (versionId.failed) {\n    return { success: false, response: versionId.response }\n  }\n  return api(versionId).getWalletBalance(chainId, poolAddress, accountAddress, bTokenId)\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getWalletBalanceV2l(chainId, poolAddress, accountAddress);\n  // } else if (version === 'option') {\n  //   return apiOption.getWalletBalance(chainId, poolAddress, accountAddress);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getWalletBalance(chainId, poolAddress, accountAddress);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getWalletBalance(chainId, poolAddress, accountAddress, bTokenId);\n  // } else if (version === 'v1') {\n  //   return apiV1.getWalletBalance(chainId, poolAddress, accountAddress);\n  // }\n};\n\nexport const isUnlocked = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (versionId.failed) {\n    // for deri\n    return isDeriUnlocked(chainId, poolAddress);\n  }\n  return api(versionId).isUnlocked(chainId, poolAddress, accountAddress, bTokenId)\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return isUnlockedV2l(chainId, poolAddress, accountAddress);\n  // } else if (version === 'option') {\n  //   return apiOption.isUnlocked(chainId, poolAddress, accountAddress);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.isUnlocked(chainId, poolAddress, accountAddress);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.isUnlocked(chainId, poolAddress, accountAddress, bTokenId);\n  // } else if (version === 'v1') {\n  //   return apiV1.isUnlocked(chainId, poolAddress, accountAddress);\n  // }\n  // if (accountAddress === undefined) {\n  //   return isDeriUnlocked(chainId, poolAddress);\n  // }\n};\n\nexport const getEstimatedLiquidatePrice = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const version = getPoolVersionId(poolAddress)\n  if (version.failed) {\n    return { success: false, response: version.response }\n  }\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\n  } else if (version === 'option') {\n    // place holder\n    return { success: true, response: { data: '' } };\n  }\n  if (symbolId === undefined) {\n    // place holder\n    return { success: true, response: { data: '' } };\n  } else {\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\n  }\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (versionId.failed) {\n    return { success: false, response: versionId.response }\n  }\n  return api(versionId).getEstimatedFee(chainId, poolAddress, volume, symbolId);\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId);\n  // } else if (version === 'option') {\n  //   return apiOption.getEstimatedFee(chainId, poolAddress, volume, symbolId);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getEstimatedFee(chainId, poolAddress, volume, symbolId);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getEstimatedFee(chainId, poolAddress, volume, symbolId);\n  // } else if (version === 'v1') {\n  //   return apiV1.getEstimatedFee(chainId, poolAddress, volume);\n  // }\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).getEstimatedMargin(\n    chainId,\n    poolAddress,\n    accountAddress,\n    volume,\n    leverage,\n    symbolId\n  );\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getEstimatedMarginV2l(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     volume,\n  //     leverage,\n  //     symbolId\n  //   );\n  // } else if (version === 'option') {\n  //   return apiOption.getEstimatedMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     volume,\n  //     leverage,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getEstimatedMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     volume,\n  //     leverage,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getEstimatedMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     volume,\n  //     leverage,\n  //     symbolId\n  //   );\n  // } else if (version === 'v1') {\n  //   return apiV1.getEstimatedMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     volume,\n  //     leverage\n  //   );\n  // }\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (versionId.failed) {\n    return { success: false, response: versionId.response }\n  }\n  return api(versionId).getFundingRate(chainId, poolAddress, symbolId)\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getFundingRateV2l(chainId, poolAddress, symbolId);\n  // } else if (version === 'option') {\n  //   return apiOption.getFundingRate(chainId, poolAddress, symbolId);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getFundingRate(chainId, poolAddress, symbolId);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getFundingRate(\n  //     chainId,\n  //     poolAddress,\n  //     symbolId\n  //   );\n  // } else if (version === 'v1') {\n  //   return apiV1.getFundingRate(chainId, poolAddress);\n  // }\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).getEstimatedFundingRate(\n    chainId,\n    poolAddress,\n    newNetVolume,\n    symbolId\n  );\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getEstimatedFundingRateV2l(\n  //     chainId,\n  //     poolAddress,\n  //     newNetVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'option') {\n  //   return apiOption.getEstimatedFundingRate(\n  //     chainId,\n  //     poolAddress,\n  //     newNetVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getEstimatedFundingRate(chainId, poolAddress, newNetVolume, symbolId);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getEstimatedFundingRate(\n  //     chainId,\n  //     poolAddress,\n  //     newNetVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'v1') {\n  //   return apiV1.getEstimatedFundingRate(chainId, poolAddress, newNetVolume);\n  // }\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).getLiquidityUsed(chainId, poolAddress, symbolId);\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getLiquidityUsedV2l(chainId, poolAddress, symbolId);\n  // } else if (version === 'option') {\n  //   return apiOption.getLiquidityUsed(chainId, poolAddress, symbolId);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getLiquidityUsed(chainId, poolAddress, symbolId);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getLiquidityUsed(\n  //     chainId,\n  //     poolAddress,\n  //     symbolId\n  //   );\n  // } else if (version === 'v1') {\n  //   return apiV1.getLiquidityUsed(chainId, poolAddress);\n  // }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).getEstimatedLiquidityUsed(\n    chainId,\n    poolAddress,\n    newNetVolume,\n    symbolId\n  );\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getEstimatedLiquidityUsedV2l(\n  //     chainId,\n  //     poolAddress,\n  //     newNetVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'option') {\n  //   return apiOption.getEstimatedLiquidityUsed(\n  //     chainId,\n  //     poolAddress,\n  //     newNetVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getEstimatedLiquidityUsed(chainId, poolAddress, newNetVolume, symbolId);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getEstimatedLiquidityUsed(\n  //     chainId,\n  //     poolAddress,\n  //     newNetVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'v1') {\n  //   return api.getEstimatedLiquidityUsed(chainId, poolAddress, newNetVolume);\n  // }\n};\n\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  if (['v2_lite', 'v2_lite_open', 'option', 'v1'].includes(versionId)) {\n    return api(versionId).getFundingRateCache(chainId, poolAddress, symbolId);\n  }\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\n  // } else if (version === 'option') {\n  //   return apiOption.getFundingRateCache(chainId, poolAddress, symbolId);\n  // } else if (version === 'v1') {\n  //   return apiV1.getFundingRateCache(chainId, poolAddress);\n  // }\n};\n\nexport const getUserBTokensInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  if (['v2_dpmm', 'v2_lite_dpmm', 'option'].includes(versionId)) {\n    return await api(versionId).getUserBTokensInfo(\n      chainId,\n      poolAddress,\n      accountAddress\n    );\n  } else {\n    return { success: true, response: { data: [] } };\n  }\n};\n\nexport const getEstimatedTimePrice = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n  ) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (versionId.failed) {\n    return { success: false, response: versionId.response }\n  }\n  if (['option', 'v2_lite_dpmm', 'v2_dpmm'].includes(versionId)) {\n    return api(versionId).getEstimatedTimePrice(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else {\n    return { success: true, response: { data: '' } };\n  }\n  //   return apiOption.getEstimatedTimePrice(\n  //     chainId,\n  //     poolAddress,\n  //     newNetVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getEstimatedTimePrice(\n  //     chainId,\n  //     poolAddress,\n  //     newNetVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getEstimatedTimePrice(\n  //     chainId,\n  //     poolAddress,\n  //     newNetVolume,\n  //     symbolId\n  //   );\n  // } else {\n  //   return '';\n  // }\n};","// import { LITE_VERSIONS } from '../shared/config';\n// import {\n//   unlockV2l,\n//   tradeWithMarginV2l,\n//   closePositionV2l,\n//   depositMarginV2l,\n//   withdrawMarginV2l,\n// } from '../v2_lite/api';\n// import { api as apiV1 } from '../v1/api'\n// import { api as apiV2lDpmm } from '../v2_lite_dpmm/api';\n// import { api as apiV2Dpmm } from '../v2_dpmm/api';\n// import { api as apiOption } from '../option/api'\n\nimport { getPoolVersionId } from '../shared/config/pool';\nimport { unlockDeri } from '../shared/api';\nimport { api } from './api_shared'\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    // for deri\n    return unlockDeri(chainId, poolAddress);\n    //return { success: false, response: version.response };\n  }\n  return api(versionId).unlock(chainId, poolAddress, accountAddress, bTokenId)\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return unlockV2l(chainId, poolAddress, accountAddress);\n  // } else if (version === 'option') {\n  //   return apiOption.unlock(chainId, poolAddress, accountAddress);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.unlock(chainId, poolAddress, accountAddress);\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.unlock(chainId, poolAddress, accountAddress, bTokenId);\n  // } else if (version === 'v1') {\n  //   return apiV1.unlock(chainId, poolAddress, accountAddress);\n  // }\n  // if (accountAddress === undefined) {\n  //   return unlockDeri(chainId, poolAddress);\n  // }\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).depositMargin(\n    chainId,\n    poolAddress,\n    accountAddress,\n    amount,\n    bTokenId,\n  );\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return depositMarginV2l(chainId, poolAddress, accountAddress, amount);\n  // } else if (version === 'option') {\n  //   return apiOption.depositMargin(chainId, poolAddress, accountAddress, amount);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.depositMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     amount\n  //   );\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.depositMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     amount,\n  //     bTokenId\n  //   );\n  // } else if (version === 'v1') {\n  //   return apiV1.depositMargin(chainId, poolAddress, accountAddress, amount);\n  // }\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  //isMaximum\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).withdrawMargin(\n    chainId,\n    poolAddress,\n    accountAddress,\n    amount,\n    bTokenId, \n  );\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return withdrawMarginV2l(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     amount,\n  //     isMaximum\n  //   );\n  // } else if (version === 'option') {\n  //   return apiOption.withdrawMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     amount,\n  //     isMaximum\n  //   );\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.withdrawMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     amount\n  //   );\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.withdrawMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     amount,\n  //     bTokenId\n  //   );\n  // } else if (version === 'v1') {\n  //   return apiV1.withdrawMargin(chainId, poolAddress, accountAddress, amount);\n  // }\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).tradeWithMargin(\n    chainId,\n    poolAddress,\n    accountAddress,\n    newVolume,\n    symbolId\n  );\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return tradeWithMarginV2l(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     newVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'option') {\n  //   return apiOption.tradeWithMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     newVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.tradeWithMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     newVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.tradeWithMargin(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     newVolume,\n  //     symbolId\n  //   );\n  // } else if (version === 'v1') {\n  //   return apiV1.tradeWithMargin(chainId, poolAddress, accountAddress, newVolume);\n  // }\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const versionId = getPoolVersionId(poolAddress);\n  if (versionId.failed) {\n    return { success: false, response: versionId.response };\n  }\n  return api(versionId).closePosition(\n    chainId,\n    poolAddress,\n    accountAddress,\n    symbolId\n  );\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return closePositionV2l(chainId, poolAddress, accountAddress, symbolId);\n  // } else if (version === 'option') {\n  //   return apiOption.closePosition(chainId, poolAddress, accountAddress, symbolId);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.closePosition(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     symbolId\n  //   );\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.closePosition(\n  //     chainId,\n  //     poolAddress,\n  //     accountAddress,\n  //     symbolId\n  //   );\n  // } else if (version === 'v1') {\n  //   return apiV1.closePosition(chainId, poolAddress, accountAddress);\n  // }\n};\n","// import { LITE_VERSIONS } from '../shared/config';\n// import { getTradeHistoryV2l } from '../v2_lite/api';\n\n// import { api as apiV1 } from '../v1/api'\n// import { api as apiV2lDpmm } from '../v2_lite_dpmm/api'\n// import { api as apiV2Dpmm } from '../v2_dpmm/api'\n// import { api as apiOption } from '../option/api'\n\nimport { getPoolVersionId } from '../shared/config/pool';\nimport { api } from './api_shared'\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const versionId = getPoolVersionId(poolAddress)\n  if (versionId.failed) {\n    return { success: false, response: versionId.response }\n  }\n  return api(versionId).getTradeHistory(chainId, poolAddress, accountAddress, symbolId)\n  // if (LITE_VERSIONS.includes(version)) {\n  //   return getTradeHistoryV2l(chainId, poolAddress, accountAddress, symbolId);\n  // } else if (version === 'option') {\n  //   return apiOption.getTradeHistory(chainId, poolAddress, accountAddress, symbolId);\n  // } else if (version === 'v2_lite_dpmm') {\n  //   return apiV2lDpmm.getTradeHistory(chainId, poolAddress, accountAddress, symbolId)\n  // } else if (version === 'v2_dpmm') {\n  //   return apiV2Dpmm.getTradeHistory(chainId, poolAddress, accountAddress, symbolId)\n  // } else if (version === 'v1') {\n  //   return apiV1.getTradeHistory(chainId, poolAddress, accountAddress);\n  // }\n};\n","import { ErrorCode, ErrorMessage, ErrorName } from './error_code';\n\nexport class AppError extends Error {\n  constructor(code, data = {}) {\n    if (Object.values(ErrorCode).includes(code)) {\n      const fullMessage = `${ErrorName[code]}: ${ErrorMessage[code](data)}`;\n      super(fullMessage);\n      this.code = code;\n      this.name = ErrorName[code];\n      this.message = fullMessage;\n      this.data = data;\n    } else {\n      throw new Error(`invalid error code '${code}'`);\n    }\n  }\n  toString() {\n    return this.message;\n  }\n}\n","import { DeriEnv } from '../config/env';\nimport { DEBUG, REST_API_CALL_RETRY } from '../config/constant';\nimport { getRestServerConfig } from '../config/rest_server';\nimport { AppError } from '../error/error';\n\n// get REST HTTP Base url\nexport const getHttpBase = (env) => {\n  return getRestServerConfig(env || DeriEnv.get());\n};\n\nexport const fetchJson = async (url) => {\n  let retry = REST_API_CALL_RETRY\n  while (retry > 0) {\n    try {\n      const resp = await fetch(url);\n      return await resp.json();\n    } catch (err) {\n      DEBUG && console.log(err)\n      retry -= 1\n    }\n  }\n  if (retry === 0) {\n    throw new AppError('JSON_RPC_CALL_TIMEOUT', {\n      name: 'fetchJson',\n      args: [url],\n    });\n  }\n};\n\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\n};\n\n// query api wrapper\nexport const catchSyncApiError = (func, args = [], defaultValue = {}) => {\n  let res;\n  try {\n    const result = func(...args);\n    res = { success: true, response: { data: result } };\n  } catch (err) {\n    DEBUG && console.log(err);\n    res = {\n      success: false,\n      response: {\n        data: defaultValue,\n        error: { code: err.code, message: err.message },\n      },\n    };\n  }\n  return res;\n};\n\nexport const catchApiError = async (func, args = [], defaultValue = {}) => {\n  let res;\n  try {\n    const result = await func(...args);\n    res = { success: true, response: { data: result } };\n  } catch (err) {\n    DEBUG && console.log(err);\n    let error\n    // error wrapper\n    if (err.message.startsWith('Invalid JSON RPC response:')) {\n      error = new AppError('INVALID_JSON_RPC_RESPONSE')\n    } else {\n      error = err\n    }\n    res = {\n      success: false,\n      response: {\n        data: defaultValue,\n        error: { code: error.code, message: error.message },\n      },\n    };\n  }\n  return res;\n};\n\n// tx api wrapper\nexport const catchTxApiError = async (func, args = []) => {\n  let res;\n  try {\n    const result = await func(...args);\n    res = { success: true, response: { data: result } };\n  } catch (err) {\n    const message = err.errorMessage || err.message || 'Transaction failed';\n    res = { success: false, response: { error: message } };\n  }\n  return res;\n};\n","import Web3 from 'web3';\nimport { DeriEnv, Env } from './env';\nimport { getChainIds } from './chain';\nimport { AppError } from '../error/error';\nimport { VERSIONS_ALL, VERSION_IDS_ALL } from './version';\n\nconst toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const checkEnv = (env) => {\n  if (env == null) {\n    return DeriEnv.get()\n  } else if (Object.values(Env).includes(env)) {\n    return env\n  }\n  throw new AppError('INVALID_DERI_ENV', env)\n}\n\nexport const checkChainId = (chainId) => {\n  chainId = chainId != null ? chainId.toString() : chainId \n  if (getChainIds().includes(chainId)) {\n    return chainId;\n  }\n  throw new AppError('INVALID_CHAIN_ID', chainId);\n};\n\nexport const checkAddress = (address) => {\n  address = address != null ? address.toString() : address\n  try {\n    return toChecksumAddress(address)\n  } catch(err) {\n    // console.log('-- checkAddress(): ', err)\n    throw new AppError('INVALID_ADDRESS', address);\n  }\n}\nexport const checkApiInput = (chainId, poolAddress, accountAddress) => {\n  return [\n    checkChainId(chainId),\n    checkAddress(poolAddress),\n    checkAddress(accountAddress),\n  ];\n};\n\nexport const checkApiInputWithoutAccount = (chainId, poolAddress) => {\n  return [checkChainId(chainId), checkAddress(poolAddress)];\n};\n\nexport const checkTokenId = (tokenId) => {\n  tokenId = tokenId != null ? tokenId.toString() : tokenId\n  if (/^\\d+$/.test(tokenId)) {\n    return tokenId\n  }\n  throw new AppError('INVALID_TOKEN_ID', tokenId);\n}\n\nexport const checkTokenIdInRange = (tokenId, tokenIds, name='symbol id') => {\n  tokenId = tokenId != null ? tokenId.toString() : tokenId\n  if (tokenId != null) {\n    const index = tokenIds.indexOf(tokenId.toString())\n    if (index > -1) {\n      return tokenId\n    }\n  }\n  throw new AppError('INVALID_TOKEN_ID_IN_RANGE', {tokenId, tokenIds, name});\n};\nexport const checkSymbolId = checkTokenIdInRange\n\nexport const checkAmount = (amount) => {\n  amount = amount != null ? amount.toString() : amount\n  if (/^-?[\\d\\.]+$/.test(amount)) {\n    return amount\n  }\n  throw new AppError('INVALID_AMOUNT',amount)\n}\n\nexport const checkVersion = (version) => {\n  if (version == null || !VERSIONS_ALL.includes(version)) {\n    throw new AppError('INVALID_VERSION', version);\n  }\n  return version;\n};\n\nexport const checkVersionId = (versionId) => {\n  if (versionId == null || !VERSION_IDS_ALL.includes(versionId)) {\n    throw new AppError('INVALID_VERSION_ID', versionId);\n  }\n  return versionId;\n};\n","import { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI);\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray]);\n  }\n}\n","//import { DatabaseBaseContract } from './database_base'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseWormholeContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI);\n  }\n\n  async signature(accountAddress) {\n    return await this._call('signature', [accountAddress])\n  }\n}\n","//import { DatabaseBaseContract } from './database_base'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseAirdropContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","\n\nimport BigNumber from 'bignumber.js'\nimport version from '../model/Version';\nimport type from '../model/Type';\nimport config from '../config.json'\n\nimport {\n  DeriEnv,\n  getPoolLiquidity,\n  getPoolInfoApy,\n  getUserInfoAll,\n  getLiquidityInfo\n} from '../lib/web3js/index'\nimport Type from '../model/Type';\nconst versionKey = 'deri-current-version'\n\n\nconst env = DeriEnv.get();\nconst { chainInfo } = config[env]\n\nexport function bg(value, base = 0) {\n  if (base === 0) {\n    return BigNumber(value);\n  } else if (base > 0) {\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\n  } else {\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\n  }\n}\n\nexport function deriNatural(value) {\n  return bg(value, -18);\n}\n\nexport function firstLetterUppercase(str){\n  return str && str.replace(/^\\S/, s => s.toUpperCase());\n}\n\nexport function formatAddress(address){\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\n}\n\nexport function formatBalance(balance){\n  return balance && (+balance).toFixed(4)\n}\n\nexport function eqInNumber(str1,str2){\n  return (+str1) === (+str2)\n}\n\nexport function isLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\nexport function isSushiLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\n}\nexport function isCakeLP(address){\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\n\nexport function sessionStorageKey(version){\n  return `${version}-current-trading-pool`\n}\n\nexport function convertToInternationalCurrencySystem (labelValue) {\n  \n  // Nine Zeroes for Billions\n  return Number.isNaN(labelValue) ? ''\n  : Math.abs(Number(labelValue)) >= 1.0e+9\n\n  ? (Math.abs(Number(labelValue)) / 1.0e+9).toFixed(2) + \"B\"\n  // Six Zeroes for Millions \n  : Math.abs(Number(labelValue)) >= 1.0e+6\n\n  ? (Math.abs(Number(labelValue)) / 1.0e+6).toFixed(2) + \"M\"\n  // Three Zeroes for Thousands\n  : Math.abs(Number(labelValue)) >= 1.0e+3\n\n  ? (Math.abs(Number(labelValue)) / 1.0e+3).toFixed(2) + \"K\"\n\n  : Math.abs(Number(labelValue).toFixed(2));\n\n}\n\n\n// export function storeVersion(version){\n//   sessionStorage.setItem(versionKey,version)\n// }\n\n// export function restoreVersion(){\n//   return sessionStorage.getItem(versionKey)\n// }\n\nexport function storeConfig(version,config){\n  if(config){\n    const key = sessionStorageKey(version);\n    sessionStorage.setItem(key,JSON.stringify(config))\n  }\n}\n\nexport function getConfigFromStore(version){\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\n}\n\nexport function storeChain(chainInfo){\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\n}\nexport function restoreChain(){\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\n}\n\nexport function storeLocale(locale){\n  sessionStorage.setItem('current-locale',locale)\n}\n\nexport function restoreLocale(){\n  return sessionStorage.getItem('current-locale')\n}\n\nexport function addParam(param,value,urlString = window.location.href){\n  const url = new URL(urlString);\n  if(url.searchParams.has(param)){\n    url.searchParams.set(param,value);\n  } else {\n    url.searchParams.append(param,value);\n  }\n  return  url.toString();\n}\n\nexport function hasParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.has(param);\n}\n\nexport function getParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.get(param);\n}\n\nexport function getFormatSymbol(symbol){\n  symbol = symbol.toUpperCase();\n  const curChain = restoreChain();\n  const chain = curChain && curChain.code ? curChain.code.toUpperCase() : 'BSC'\n  if(type.isOption){\n    if(symbol.indexOf('-MARKPRICE') !== -1) {\n      symbol = symbol.substr(0,symbol.indexOf('-MARKPRICE'))\n    }\n    return  `${symbol}_V2_${chain}`\n  } else {\n    if(version.isV1){\n      return symbol\n    } else {\n      if(symbol.indexOf('MARKPRICE') !== -1) {\n        return symbol;\n      } else {\n        return `${symbol}_V2_${chain}`\n      }\n    }\n  }\n}\n\nexport function getDefaultNw(env){\n  return getNetworkList(env).find(network => network.isDefault) || {}\n}\n\nexport function getNetworkList(env){\n  const chainInfo = config[env]['chainInfo']\n  const ids = Object.keys(chainInfo);\n  return ids.map(id => Object.assign(chainInfo[id],{id}))\n}\n\n\n//\n// export function formatSymbolInputParam(symbol,spec){\n//   const curChain = restoreChain();\n//   const chain = curChain ? curChain.code.toUpperCase() : 'BSC'\n//   const baseToken = Array.isArray(spec.bTokenSymbol) ? spec.bTokenSymbol[0] : spec.bTokenSymbol\n//   if(type.isFuture){\n//     return {\n//       indexPrice : version.isV1 ? symbol : `${symbol}_V2_${chain}`,\n//       markPrice : `MARKPRICE_${symbol}_${chain}_FUTURE_${version.zone}_${baseToken}`\n//     }\n//   } else {\n//     return {\n//       indexPrice : `${symbol}_V2_${chain}`,\n//       markPrice : `MARKPRICE_${symbol}_V2_${chain}`\n//     }\n//   }\n// }\n\nexport function getMarkpriceSymbol(pool){\n  const curChain = restoreChain();\n  // const chain = curChain && curChain.code ? curChain.code.toUpperCase() : 'BSC'\n  const baseToken = Array.isArray(pool.bTokens) ? pool.bTokens[0].bTokenSymbol : config.bTokenSymbol\n  if(pool.isOption) {\n    return `${config.symbol}-MARKPRICE`\n  }  else {\n    return `MARKPRICE_${pool.selectedSymbol.symbol}_${pool.chain}_${Type.current}_${pool.zone}_${baseToken}`.toUpperCase()\n  }\n}\n\n\n\nexport function equalIgnoreCase(str1,str2){\n  return str1 && str1.toUpperCase() === str2 && str2.toUpperCase()\n}\n\nexport function stripSymbol(symbol){\n  if(!symbol){\n    return symbol;\n  }\n  if(/-/.test(symbol)){\n    symbol = symbol.split('-')[0]\n  }\n  return symbol\n}\n\n\nexport const  secondsInRange = {\n  '1' : 60,\n  '5' : 300,\n  '15' : 900,\n  '30' : 1800,\n  '60' : 3600,\n  '1D' : 3600 * 24,\n  '1W' : 3600 * 24 * 7\n}\nexport const intervalRange = {\n  '1' : 'min',\n  '5' : '5min',\n  '15' : '15min',\n  '30' : '30min',\n  '60' : 'hour',\n  '1D' : 'day',\n  '1W' : 'week'\n}\n\n \nexport function calcRange(interval){\n  const timestamp = new Date().getTime() /1000 ;\n  let from,to;\n  if(interval !== '1W') {\n    to = Math.floor(timestamp / secondsInRange[interval] ) * secondsInRange[interval]\n    from  = to - secondsInRange[interval] * 200\n  } else {\n    to = Math.floor((timestamp - 345600) /secondsInRange[interval]) * secondsInRange[interval] + 345600\n    from = to - secondsInRange[interval] * 200\n  }\n  return [from,to]\n \n}\n\nexport function groupByNetwork(pools){\n  const all = []\n  pools.reduce((total, pool) => {\n    const find = total.find(item => eqInNumber(item['pool']['address'], pool['address']))\n    if (find && find.list.length < 5) {\n      find['list'].push(pool)\n    } else {\n      const poolInfo = {\n        pool: {\n          network: pool.network,\n          symbol: pool.symbol,\n          address: pool.address,\n          formatAdd: pool.formatAdd,\n          version: pool.version,\n          // innoDisplay : pool.version=== 'v2_lite' ? Intl.get('mining','v2_lite') : pool.version,\n          chainId: pool.chainId,\n          airdrop: pool.airdrop,\n          type: pool.type,\n          bTokenSymbol: pool.bTokenSymbol,\n          bTokenId: pool.bTokenId,\n          symbolId: pool.symbolId\n        },\n        list: [pool]\n      }\n      total.push(poolInfo)\n    }\n    return total;\n  }, all)\n  return all;\n}\n\nexport function combineSymbolfromPoolConfig(configs){\n  return configs.reduce((total,config) => {\n    const pos = total.findIndex(item => item.chainId === config.chainId && (item.pool === config.pool) && config.version === item.version)\n    if((config.version === 'v2' || config.version === 'v2_lite' || config.version === 'option' || config.version === 'v2_lite_open' || config.version === 'v2_lite_dpmm')  \n        && pos > -1) {\n      if(total[pos].symbol.indexOf(config.symbol) === -1){\n        total[pos].symbol += `,${config.symbol}` \n      } else if(total.findIndex(item => item.bTokenSymbol === config.bTokenSymbol) === -1) {\n        total.push(config)\n      }\n    } else{\n      total.push(config)\n    }\n    return total;\n  },[]);\n}\n\nexport async function mapPoolInfo(config,wallet,chainInfo){\n  // const liqPool = await getPoolLiquidity(config.chainId,config.pool,config.bTokenId) || {}\n  // const apyPool = await getPoolInfoApy(config.chainId,config.pool,config.bTokenId) || {}\n  const pool = config.pool || ''\n  const item = { \n    network : chainInfo[config.chainId] && chainInfo[config.chainId].name,\n    // liquidity : liqPool.liquidity,\n    // apy :  ((+apyPool.apy) * 100).toFixed(2),\n    formatAdd : formatAddress(pool),\n    address : pool,\n    type : 'perpetual',\n    buttonText : 'STAKING',\n    multiplier : 1\n  }\n  // if(wallet && wallet.isConnected()){\n  //   const info = await getLiquidityInfo(config.chainId,config.pool,wallet.detail.account,config.bTokenId).catch(e => console.log(e));\n  //   const claimInfo = await getUserInfoAll(wallet.detail.account);\n  //   if(info){\n  //     item['pnl'] = info.pnl\n  //   }\n  //   if(claimInfo){\n  //     item['claimed'] = claimInfo.total;\n  //     item['unclaimed'] = claimInfo.amount\n  //   }\n  // }\n\n  return Object.assign(config,item)\n\n}\n\nexport function greaterThan(param1,param2){\n  return (+param1) > (+param2)\n}\n\nexport function percentTimesAmount(percent,value){\n  const unPercent = percent.slice(0,-1) / 100 \n  return unPercent * value\n}\n\nexport function precision(a) {\n  a = +a\n  if (!isFinite(a)) return 0;\n  var e = 1, p = 0;\n  while (Math.round(a * e) / e !== a) { e *= 10; p++; }\n  return p;\n}\n\n\n\n","//for color\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary'\n\n//\nexport const DEPOSIT = 'deposit'\nexport const WITHDRAW = 'withdraw'\n\n//\nexport const BUY = 'buy'\nexport const SELL = 'sell'\n\n\nexport const BSC_CHAINID = 56\nexport const BSC_CHAINNAME= 'BSC'\n\n\nexport const ARROW_UP = 'up'\nexport const ARROW_DOWN = 'down'\n\nexport const FUTURE = 'future'\nexport const OPTION = 'option'\n\nexport const VERSION_V2 = 'v2'\nexport const VERSION_V2_LITE = 'v2_lite'\nexport const VERSION_V2_OPEN = 'v2_lite_open'\n\n//交易输入状态\nexport const TRADE_ENTRY_DOLLAR_STATUS = 'entry_by_dollar'\nexport const TRADE_ENTRY_VOLUME_STATUS = 'entry_by_volume'\nexport const TRADE_ENTRY_SLIDER_STATUS = 'entry_by_slider'\nexport const TRADE_ENTRY_PERCENTAGE_STATUS = 'entry_by_percentage'\n\n//仓位交易状态\nexport const TRADING_CREATE_POSITION_STATUS = 'trading_create_position'\nexport const TRADING_APPEND_POSITION_STATUS = 'trading_append_position'\nexport const TRADING_CLOSE_POSITION_STATUS = 'trading_close_position'","import { AppError } from \"../error/error\";\n\n// export let Env;\n// (function (Env) {\n//   Env[\"PROD\"] = \"prod\";\n//   Env[\"DEV\"] = \"dev\";\n//   Env[\"TESTNET\"] = \"testnet\";\n// })(Env || (Env = {}));\n\nexport const Env = {\n  PROD: 'prod',\n  TESTNET: 'testnet',\n  DEV: 'dev',\n};\nObject.freeze(Env);\n\nexport const DeriEnv = (function(Env) {\n  let _env = Env.DEV\n  return {\n    get() {\n      return _env\n    },\n    set(env) {\n      if (Object.values(Env).includes(env)) {\n        _env = env\n      } else {\n        throw new AppError('INVALID_DERI_ENV', env)\n      }\n    }\n  }\n})(Env)\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\n\n\nclass Type {\n  current = 'future';\n  \n  constructor(){\n    makeAutoObservable(this,{\n      current:observable,\n      setCurrent : action,\n      isOption : computed,\n      isFuture : computed\n    })\n  }\n\n  setCurrent(type){\n    this.current = type;\n  }\n\n  get isOption() {\n    return this.current === 'option'\n  }\n\n  get isFuture() {\n    return this.current === 'future'\n  }\n}\nexport default new Type()","import * as api from \"../lib/web3js/index\";\n\nclass ApiProxy {\n  async request(method,params=[],options = {}){\n    const res = await api[method].call(this,...params)\n    if(options.includeResponse){\n      if(res && res.response){\n        return res\n      } \n    } else {\n      if(res && res.response){\n        return res.response.data\n      } \n    }\n    return res\n  }\n}\nexport default new ApiProxy();","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\n// lang\nexport const isObject = (value) => typeof value === 'object' && value !== null\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\nexport const isFunction = (value) => typeof value === 'function'\n\n// == bg\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const fromWei = (value) => bg(value, -18).toString()\n\nexport const toWei = (value) => bg(value, 18).toFixed(0).toString()\n\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\nexport const deriToString = (value) => bg(value).toString();\n\nexport const deriToBool = (value) => {\n  if (bg(value).toNumber() === 1) {\n    return true;\n  }\n  return false;\n};\n\nexport const naturalWithPercentage = (value) =>\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const formatBN = (bigNumber) =>\n  bigNumber.toFormat().replaceAll(',', '').toString();\n\n// == convert\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\n\n\n// == utils\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\n\n// == array set\nexport const isEqualSet = (set1, set2) => {\n  if (set1.size !== set2.size) return false;\n  for (let item of set1) {\n    if (!set2.has(item)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n\n// == contract gen\n// export const deleteIndexedKey = (obj) => {\n//   if (isObject(obj) && Object.keys(obj).length > 0) {\n//     const keys = Object.keys(obj);\n//     const intKeyCount = keys.reduce(\n//       (acc, k) => (intRegex.test(k) ? acc + 1 : acc),\n//       0\n//     );\n//     if (intKeyCount * 2 === keys.length) {\n//       let newObj = {};\n//       Object.keys(obj).forEach((k) => {\n//         if (!intRegex.test(k)) {\n//           newObj[k] = obj[k];\n//         }\n//       });\n//       return newObj;\n//     }\n//     return obj;\n//   } else {\n//     return obj;\n//   }\n// };\n\nexport const fromWeiForObject = (obj, keyList = []) => {\n  return Object.keys(obj).reduce((acc, i) => {\n    if (keyList.includes(i)) {\n      acc[i] = fromWei(obj[i]);\n    } else {\n      acc[i] = obj[i];\n    }\n    return acc;\n  }, {});\n};\n\nexport const toNumberForObject = (obj, keyList = []) => {\n  return Object.keys(obj).reduce((acc, i) => {\n    if (keyList.includes(i)) {\n      acc[i] = bg(obj[i]).toNumber();\n    } else {\n      acc[i] = obj[i];\n    }\n    return acc;\n  }, {});\n};\n\n\n// for frontend to display symbols\nexport const sortOptionSymbols = (symbolList) => {\n  const symbolArr = symbolList\n    .map((s) => s.symbol)\n    .map((s) => {\n      return s.split('-');\n    });\n  const unique = (value, index, self) => self.indexOf(value) === index\n  const to2 = (i) => i < 10 ? `0${i}` : i\n  const symbol = symbolArr.map((s) => s[0]).filter(unique)\n  const direction = symbolArr.map((s) => s[2]).filter(unique)\n  const price = symbolArr\n    .map((s) => s[1])\n    .filter(unique)\n    .sort((a, b) => parseInt(b) - parseInt(a));\n  return symbolList.map((i, index) => {\n    const index1 =  symbol.indexOf(symbolArr[index][0]) + 1\n    const index2 =  to2(direction.indexOf(symbolArr[index][2]) + 1)\n    const index3 =  to2(price.indexOf(symbolArr[index][1]) + 1)\n    i.index = parseInt(`${index1}${index2}${index3}`)\n    return i\n  }).sort((a, b) => a.index - b.index).map((i) => {\n    delete i.index\n    return i\n  })\n}\n\n","// this file is generated by script, don't modify it !!!\nimport { processMethod } from \"../../shared/utils/derijsnext.js\";\nimport { bg } from \"../../shared/utils/index.js\";\nimport { MAX_UINT256} from '../config'\nimport { PancakePair } from \"./gen/PancakePair.js\";\n\nconst isUnlocked = (klass) => {\n  klass.prototype[\"isUnlocked\"] = async function (accountAddress, poolAddress) {\n    const allowance = await this.allowance(accountAddress, poolAddress)\n    //console.log(accountAddress, poolAddress)\n    const res = bg(allowance).gt(0)\n    return res\n  };\n  return klass\n};\n\nconst unlock = (klass) => {\n  klass.prototype['unlock'] = async function (accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  };\n  return klass;\n};\n\nconst getPrice = (klass) => {\n  klass.prototype['getPrice'] = async function () {\n    if (this.contractAddress === '0xE1cC9FCF36f60479F21ACcB3E23Cb2B608679f4d') {\n      return '1';\n    }\n    const [\n      isQuoteToken0,\n      qDecimals,\n      bDecimals,\n      pair,\n      priceCumulativeLast1,\n      priceCumulativeLast2,\n      timestampLast1,\n      timestampLast2,\n    ] = await Promise.all([\n      this.isQuoteToken0(),\n      this.qDecimals(),\n      this.bDecimals(),\n      this.pair(),\n      this.priceCumulativeLast1(),\n      this.priceCumulativeLast2(),\n      this.timestampLast1(),\n      this.timestampLast2(),\n    ]);\n\n    const pancakePair = new PancakePair(this.chainId, pair);\n    let reserveQ, reserveB, timestamp;\n    if (isQuoteToken0) {\n      const res = await pancakePair.getReserves();\n      reserveQ = res._reserve0;\n      reserveB = res._reserve1;\n      timestamp = res._blockTimestampLast;\n    } else {\n      const res = await pancakePair.getReserves();\n      reserveB = res._reserve0;\n      reserveQ = res._reserve1;\n      timestamp = res._blockTimestampLast;\n    }\n    const [price0CumulativeLast, price1CumulativeLast] = await Promise.all([\n      pancakePair.price0CumulativeLast(),\n      pancakePair.price1CumulativeLast(),\n    ]);\n    let tmpPairState = {};\n\n    if (timestamp !== timestampLast2) {\n      tmpPairState.priceCumulativeLast1 = priceCumulativeLast2;\n      tmpPairState.timestampLast1 = timestampLast2;\n      tmpPairState.priceCumulativeLast2 = isQuoteToken0\n        ? price0CumulativeLast\n        : price1CumulativeLast;\n      tmpPairState.timestampLast2 = timestamp;\n    } else {\n      tmpPairState = {\n        priceCumulativeLast1,\n        priceCumulativeLast2,\n        timestampLast1,\n        timestampLast2,\n      };\n    }\n\n    let price;\n    const diff = bg(qDecimals).minus(bDecimals);\n    if (tmpPairState.timestampLast1 !== '0') {\n      //console.log('not equal')\n      price = bg(tmpPairState.priceCumulativeLast2)\n        .minus(tmpPairState.priceCumulativeLast1)\n        .div(bg(tmpPairState.timestampLast2).minus(tmpPairState.timestampLast1))\n        .times(bg(10).pow(diff))\n        .div(bg(2).pow(112));\n    } else {\n      //console.log('equal')\n      price = bg(reserveB).times(bg(10).pow(diff)).div(reserveQ).toString();\n    }\n    return price;\n  };\n  return klass\n}\n\nexport const ERC20Adapter = (klass) => {\n    klass = processMethod(klass, 'totalSupply');\n    //klass = processMethod(klass, 'balanceOf'); // use ERC20.decimals\n\n    klass = isUnlocked(klass);\n    klass = unlock(klass);\n    return klass\n}\n\nexport const chainlinkOracleAdapter= (klass) => {\n    klass = processMethod(klass, 'getPrice');\n    return klass\n}\n\nexport const offChainOracleAdapter= (klass) => {\n    klass = processMethod(klass, 'getPrice');\n    return klass\n}\n\nexport const offChainVolatilityOracleAdapter= (klass) => {\n    klass = processMethod(klass, 'getVolatility');\n    klass = processMethod(klass, 'volatility');\n    return klass\n}\n\nexport const bTokenOracle1Adapter = (klass) => {\n  //klass = processMethod(klass, 'getPrice');\n  klass = getPrice(klass);\n  return klass;\n};\n\n// export const bTokenSwapper1Adapter = (klass) => {\n//   //klass = processMethod(klass, 'getPrice');\n//   return klass;\n// };\n\nexport const pancakePairAdapter = (klass) => {\n  //klass = processMethod(klass, 'getPrice');\n  return klass;\n};","// this file is generated by script, don't modify it !!!\nexport const pancakePairAbi = [\n  {\n    \"inputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount0\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount1\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"Burn\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount0\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount1\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount0In\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount1In\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount0Out\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount1Out\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"Swap\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint112\",\n        \"name\": \"reserve0\",\n        \"type\": \"uint112\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint112\",\n        \"name\": \"reserve1\",\n        \"type\": \"uint112\"\n      }\n    ],\n    \"name\": \"Sync\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"DOMAIN_SEPARATOR\",\n    \"outputs\": [{ \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"MINIMUM_LIQUIDITY\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"PERMIT_TYPEHASH\",\n    \"outputs\": [{ \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" },\n      { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"name\": \"balanceOf\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\n    \"name\": \"burn\",\n    \"outputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"amount0\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint256\", \"name\": \"amount1\", \"type\": \"uint256\" }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"factory\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getReserves\",\n    \"outputs\": [\n      { \"internalType\": \"uint112\", \"name\": \"_reserve0\", \"type\": \"uint112\" },\n      { \"internalType\": \"uint112\", \"name\": \"_reserve1\", \"type\": \"uint112\" },\n      {\n        \"internalType\": \"uint32\",\n        \"name\": \"_blockTimestampLast\",\n        \"type\": \"uint32\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"_token0\", \"type\": \"address\" },\n      { \"internalType\": \"address\", \"name\": \"_token1\", \"type\": \"address\" }\n    ],\n    \"name\": \"initialize\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"kLast\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\n    \"name\": \"mint\",\n    \"outputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"liquidity\", \"type\": \"uint256\" }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"name\": \"nonces\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" },\n      { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint256\", \"name\": \"deadline\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" },\n      { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" },\n      { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" }\n    ],\n    \"name\": \"permit\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"price0CumulativeLast\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"price1CumulativeLast\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }],\n    \"name\": \"skim\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"uint256\", \"name\": \"amount0Out\", \"type\": \"uint256\" },\n      { \"internalType\": \"uint256\", \"name\": \"amount1Out\", \"type\": \"uint256\" },\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\n      { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }\n    ],\n    \"name\": \"swap\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"sync\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"token0\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"token1\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" },\n      { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { pancakePairAbi } from '../abi/pancakePairAbi.js'\n\nexport class PancakePair extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, pancakePairAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async DOMAIN_SEPARATOR() {\n  //    const res = await this._call('DOMAIN_SEPARATOR', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async MINIMUM_LIQUIDITY() {\n  //    const res = await this._call('MINIMUM_LIQUIDITY', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async PERMIT_TYPEHASH() {\n  //    const res = await this._call('PERMIT_TYPEHASH', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async allowance(, ) {\n  //    const res = await this._call('allowance', [, ])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async balanceOf() {\n  //    const res = await this._call('balanceOf', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async decimals() {\n  //    const res = await this._call('decimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async factory() {\n  //    const res = await this._call('factory', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getReserves() {\n    const res = await this._call('getReserves', [])\n    return deleteIndexedKey(res)\n  }\n  //  async kLast() {\n  //    const res = await this._call('kLast', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  //  async nonces() {\n  //    const res = await this._call('nonces', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async price0CumulativeLast() {\n    const res = await this._call('price0CumulativeLast', [])\n    return deleteIndexedKey(res)\n  }\n  async price1CumulativeLast() {\n    const res = await this._call('price1CumulativeLast', [])\n    return deleteIndexedKey(res)\n  }\n  //  async symbol() {\n  //    const res = await this._call('symbol', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async token0() {\n  //    const res = await this._call('token0', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async token1() {\n  //    const res = await this._call('token1', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async approve(accountAddress, spender, value) {\n  //    return await this._transact('approve', [spender, value], accountAddress)\n  //  }\n  //  async burn(accountAddress, to) {\n  //    return await this._transact('burn', [to], accountAddress)\n  //  }\n  //  async initialize(accountAddress, _token0, _token1) {\n  //    return await this._transact('initialize', [_token0, _token1], accountAddress)\n  //  }\n  //  async mint(accountAddress, to) {\n  //    return await this._transact('mint', [to], accountAddress)\n  //  }\n  //  async permit(accountAddress, owner, spender, value, deadline, v, r, s) {\n  //    return await this._transact('permit', [owner, spender, value, deadline, v, r, s], accountAddress)\n  //  }\n  //  async skim(accountAddress, to) {\n  //    return await this._transact('skim', [to], accountAddress)\n  //  }\n  //  async swap(accountAddress, amount0Out, amount1Out, to, data) {\n  //    return await this._transact('swap', [amount0Out, amount1Out, to, data], accountAddress)\n  //  }\n  //  async sync(accountAddress) {\n  //    return await this._transact('sync', [], accountAddress)\n  //  }\n  //  async transfer(accountAddress, to, value) {\n  //    return await this._transact('transfer', [to, value], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, value) {\n  //    return await this._transact('transferFrom', [from, to, value], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const TERC20Abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_name\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"_decimals\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\nimport { TERC20Abi } from '../abi/TERC20Abi.js'\n\nexport class TERC20 extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, TERC20Abi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async allowance(owner, spender) {\n    const res = await this._call('allowance', [owner, spender])\n    return deleteIndexedKey(res)\n  }\n  async _balanceOf(account) {\n    return await this._call('balanceOf', [account])\n  }\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n  async decimals() {\n    const res = await this._call('decimals', [])\n    return deleteIndexedKey(res)\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async approve(accountAddress, spender, amount) {\n    return await this._transact('approve', [spender, amount], accountAddress)\n  }\n  //  async burn(accountAddress, account, amount) {\n  //    return await this._transact('burn', [account, amount], accountAddress)\n  //  }\n  async mint(accountAddress, account, amount) {\n    return await this._transact('mint', [account, amount], accountAddress)\n  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const ERC20Abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"pure\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\nimport { ERC20Abi } from '../abi/ERC20Abi.js'\n\nexport class ERC20 extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, ERC20Abi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async allowance(owner, spender) {\n    const res = await this._call('allowance', [owner, spender])\n    return deleteIndexedKey(res)\n  }\n  async _balanceOf(account) {\n    return await this._call('balanceOf', [account])\n  }\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals).toString();\n  }\n\n   async decimals() {\n     const res = await this._call('decimals', [])\n     return deleteIndexedKey(res)\n   }\n   async name() {\n     const res = await this._call('name', [])\n     return deleteIndexedKey(res)\n   }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async approve(accountAddress, spender, amount) {\n    return await this._transact('approve', [spender, amount], accountAddress)\n  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const chainlinkOracleAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"feed_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"feed\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"feedDecimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { chainlinkOracleAbi } from '../abi/chainlinkOracleAbi.js'\n\nexport class ChainlinkOracle extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, chainlinkOracleAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async decimals() {\n  //    const res = await this._call('decimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async feed() {\n  //    const res = await this._call('feed', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async feedDecimals() {\n  //    const res = await this._call('feedDecimals', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getPrice() {\n    const res = await this._call('getPrice', [])\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n\n\n}","// this file is generated by script, don't modify it !!!\nexport const offChainOracleAbi = [\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'symbol_',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'signer_',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'delayAllowance_',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    inputs: [],\n    name: 'delayAllowance',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'getPrice',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'price',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'delayAllowance_',\n        type: 'uint256',\n      },\n    ],\n    name: 'setDelayAllowance',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'signer_',\n        type: 'address',\n      },\n    ],\n    name: 'setSigner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'signer',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'symbol',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'timestamp',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'timestamp_',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'price_',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint8',\n        name: 'v_',\n        type: 'uint8',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'r_',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 's_',\n        type: 'bytes32',\n      },\n    ],\n    name: 'updatePrice',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  // for old offchain oracle\n  {\n    inputs: [],\n    name: 'signatory',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { offChainOracleAbi } from '../abi/offChainOracleAbi.js'\n\nexport class OffChainOracle extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, offChainOracleAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async delayAllowance() {\n  //    const res = await this._call('delayAllowance', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getPrice() {\n    const res = await this._call('getPrice', [])\n    return deleteIndexedKey(res)\n  }\n  //  async price() {\n  //    const res = await this._call('price', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async signer() {\n    await this._init()\n    //const res = await this._call('signer', [])\n    const res = await this.contract.methods.signer().call()\n    return deleteIndexedKey(res)\n  }\n  // for old offchain oracle\n  async signatory() {\n    await this._init()\n    //const res = await this._call('signatory',[])\n    const res = await this.contract.methods.signatory().call()\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n\n  //  async timestamp() {\n  //    const res = await this._call('timestamp', [])\n  //    return deleteIndexedKey(res)\n  //  }\n\n  // tx\n  //  async setDelayAllowance(accountAddress, delayAllowance_) {\n  //    return await this._transact('setDelayAllowance', [delayAllowance_], accountAddress)\n  //  }\n  //  async setSigner(accountAddress, signer_) {\n  //    return await this._transact('setSigner', [signer_], accountAddress)\n  //  }\n  //  async updatePrice(accountAddress, timestamp_, price_, v_, r_, s_) {\n  //    return await this._transact('updatePrice', [timestamp_, price_, v_, r_, s_], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const offChainVolatilityOracleAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol_\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"signer_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"delayAllowance_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"delayAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getVolatility\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"delayAllowance_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setDelayAllowance\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"signer_\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setSigner\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"signer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"timestamp\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"timestamp_\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"volatility_\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"v_\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"r_\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"s_\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"updateVolatility\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"volatility\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { offChainVolatilityOracleAbi } from '../abi/offChainVolatilityOracleAbi.js'\n\nexport class OffChainVolatilityOracle extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, offChainVolatilityOracleAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  //  async delayAllowance() {\n  //    const res = await this._call('delayAllowance', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async getVolatility() {\n    const res = await this._call('getVolatility', [])\n    return deleteIndexedKey(res)\n  }\n  async signer() {\n    const res = await this._call('signer', [])\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  //  async timestamp() {\n  //    const res = await this._call('timestamp', [])\n  //    return deleteIndexedKey(res)\n  //  }\n   async volatility() {\n     const res = await this._call('volatility', [])\n     return deleteIndexedKey(res)\n   }\n\n  // tx\n  //  async setDelayAllowance(accountAddress, delayAllowance_) {\n  //    return await this._transact('setDelayAllowance', [delayAllowance_], accountAddress)\n  //  }\n  //  async setSigner(accountAddress, signer_) {\n  //    return await this._transact('setSigner', [signer_], accountAddress)\n  //  }\n  //  async updateVolatility(accountAddress, timestamp_, volatility_, v_, r_, s_) {\n  //    return await this._transact('updateVolatility', [timestamp_, volatility_, v_, r_, s_], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const TERC20MintLimitAbi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_name\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"_symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"_decimals\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"controller\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"controllerBurn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"controllerMint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"mintAmount\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"mintPeriod\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"mintTimestamp\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMintAmount\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"period\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMintPeriod\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey, bg } from '../../../shared/utils/index.js'\nimport { TERC20MintLimitAbi } from '../abi/TERC20MintLimitAbi.js'\n\nexport class TERC20MintLimit extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, TERC20MintLimitAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async allowance(owner, spender) {\n    const res = await this._call('allowance', [owner, spender])\n    return deleteIndexedKey(res)\n  }\n  async _balanceOf() {\n    return await this._call('balanceOf', [])\n  }\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n  //  async controller() {\n  //    const res = await this._call('controller', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async decimals() {\n    const res = await this._call('decimals', [])\n    return deleteIndexedKey(res)\n  }\n  //  async mintAmount() {\n  //    const res = await this._call('mintAmount', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async mintPeriod() {\n  //    const res = await this._call('mintPeriod', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async mintTimestamp() {\n  //    const res = await this._call('mintTimestamp', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async name() {\n    const res = await this._call('name', [])\n    return deleteIndexedKey(res)\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return deleteIndexedKey(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async approve(accountAddress, spender, amount) {\n    return await this._transact('approve', [spender, amount], accountAddress)\n  }\n  //  async burn(accountAddress) {\n  //    return await this._transact('burn', [], accountAddress)\n  //  }\n  //  async controllerBurn(accountAddress, account, amount) {\n  //    return await this._transact('controllerBurn', [account, amount], accountAddress)\n  //  }\n  //  async controllerMint(accountAddress, account, amount) {\n  //    return await this._transact('controllerMint', [account, amount], accountAddress)\n  //  }\n  async mint(accountAddress) {\n    return await this._transact('mint', [], accountAddress)\n  }\n  //  async setMintAmount(accountAddress, amount) {\n  //    return await this._transact('setMintAmount', [amount], accountAddress)\n  //  }\n  //  async setMintPeriod(accountAddress, period) {\n  //    return await this._transact('setMintPeriod', [period], accountAddress)\n  //  }\n  //  async transfer(accountAddress, to, amount) {\n  //    return await this._transact('transfer', [to, amount], accountAddress)\n  //  }\n  //  async transferFrom(accountAddress, from, to, amount) {\n  //    return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const bTokenOracle1Abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"pair_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"quote_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"base_\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"isQuoteToken0_\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"bDecimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"base\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isQuoteToken0\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"pair\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceCumulativeLast1\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceCumulativeLast2\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"qDecimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"quote\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"timestampLast1\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"timestampLast2\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/web3.js'\nimport { bTokenOracle1Abi } from '../abi/bTokenOracle1Abi.js'\n\nexport class BTokenOracle1 extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, bTokenOracle1Abi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async bDecimals() {\n    const res = await this._call('bDecimals', [])\n    return deleteIndexedKey(res)\n  }\n  //  async base() {\n  //    const res = await this._call('base', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async isQuoteToken0() {\n    const res = await this._call('isQuoteToken0', [])\n    return deleteIndexedKey(res)\n  }\n  async pair() {\n    const res = await this._call('pair', [])\n    return deleteIndexedKey(res)\n  }\n  async priceCumulativeLast1() {\n    const res = await this._call('priceCumulativeLast1', [])\n    return deleteIndexedKey(res)\n  }\n  async priceCumulativeLast2() {\n    const res = await this._call('priceCumulativeLast2', [])\n    return deleteIndexedKey(res)\n  }\n  async qDecimals() {\n    const res = await this._call('qDecimals', [])\n    return deleteIndexedKey(res)\n  }\n  //  async quote() {\n  //    const res = await this._call('quote', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async timestampLast1() {\n    const res = await this._call('timestampLast1', [])\n    return deleteIndexedKey(res)\n  }\n  async timestampLast2() {\n    const res = await this._call('timestampLast2', [])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  //  async getPrice(accountAddress) {\n  //    return await this._transact('getPrice', [], accountAddress)\n  //  }\n\n}","// this file is generated by script, don't modify it !!!\nimport { contractFactory } from '../../shared/utils/derijsnext.js';\nimport {\n  ERC20Adapter,\n  chainlinkOracleAdapter,\n  offChainOracleAdapter,\n  offChainVolatilityOracleAdapter,\n  pancakePairAdapter,\n  bTokenOracle1Adapter,\n} from './adapter.js';\n\nimport { TERC20 } from './gen/TERC20.js';\nimport { ERC20 } from './gen/ERC20.js';\nimport { ChainlinkOracle} from './gen/ChainlinkOracle.js';\nimport { OffChainOracle} from './gen/OffChainOracle.js';\nimport { OffChainVolatilityOracle} from './gen/OffChainVolatilityOracle.js';\nimport { TERC20MintLimit } from './gen/TERC20MintLimit.js';\n//import { BTokenSwapper1 } from './gen/BTokenSwapper1.js';\nimport { PancakePair } from './gen/PancakePair.js';\nimport { BTokenOracle1 } from './gen/BTokenOracle1.js';\n\n// ERC20\nexport const ERC20Factory = contractFactory(ERC20Adapter(ERC20));\nexport const TERC20Factory = contractFactory(ERC20Adapter(TERC20)); // for test only\nexport const TERC20MintLimitFactory = contractFactory(ERC20Adapter(TERC20MintLimit)); // for test only\nexport const bTokenFactory = ERC20Factory\n\n\n// oracle\n// export const symbolOracleChainlinkFactory = contractFactory(chainlinkOracleAdapter(ChainlinkOracle));\n// export const offChainOracleFactory = contractFactory(offChainOracleAdapter(OffChainOracle));\n// export const volatilityOracleOffChainFactory = contractFactory(offChainVolatilityOracleAdapter(OffChainVolatilityOracle));\nexport const chainlinkOracleFactory = contractFactory(chainlinkOracleAdapter(ChainlinkOracle));\nexport const offChainOracleFactory = contractFactory(offChainOracleAdapter(OffChainOracle));\nexport const offChainVolatilityOracleFactory = contractFactory(offChainVolatilityOracleAdapter(OffChainVolatilityOracle));\n\n// swapper\nexport const bTokenOracle1Factory = contractFactory(bTokenOracle1Adapter(BTokenOracle1))\n//export const bTokenSwapper1Factory = contractFactory(bTokenSwapper1Adapter(BTokenSwapper1))\nexport const pancakePairFactory = contractFactory(pancakePairAdapter(PancakePair))\n\n","import { DeriEnv, Env } from './env';\nimport { checkChainId, checkEnv } from './check';\nimport { AppError } from '../error/error';\n\nexport const getPoolV1ConfigList = (env) => {\n  env = checkEnv(env);\n  if (env === Env.PROD) {\n    return [\n      {\n        pool: '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '7906919',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '56',\n        type: 'future',\n        version: 'v1',\n        versionId: 'v1',\n        env: 'prod',\n        chain: 'bsc',\n        retired: true,\n      },\n      {\n        pool: '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '6753399',\n        bTokenSymbol: 'BUSD',\n        symbol: 'COIN',\n        unit: 'COIN',\n        chainId: '56',\n        type: 'future',\n        version: 'v1',\n        versionId: 'v1',\n        env: 'prod',\n        chain: 'bsc',\n        retired: true,\n      },\n      {\n        pool: '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '8005906',\n        bTokenSymbol: 'DERI',\n        symbol: 'iMEME',\n        unit: 'iMEME',\n        chainId: '56',\n        type: 'future',\n        version: 'v1',\n        versionId: 'v1',\n        env: 'prod',\n        chain: 'bsc',\n        retired: true,\n      },\n      {\n        pool: '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548746',\n        bTokenSymbol: 'USDT',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        type: 'future',\n        version: 'v1',\n        versionId: 'v1',\n        env: 'prod',\n        chain: 'bsc',\n        retired: true,\n      },\n      {\n        pool: '0x96a1F15676746b9339DBc185F277618359Ac6346',\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548827',\n        bTokenSymbol: 'BAC',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        type: 'future',\n        version: 'v1',\n        versionId: 'v1',\n        env: 'prod',\n        chain: 'bsc',\n        retired: true,\n      },\n      {\n        pool: '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        initialBlock: '5220431',\n        bTokenSymbol: 'HUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '128',\n        type: 'future',\n        version: 'v1',\n        versionId: 'v1',\n        env: 'prod',\n        chain: 'bsc',\n        retired: true,\n      },\n    ];\n  } else if (env === Env.DEV) {\n    return [\n      {\n        pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\n        bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n        pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\n        lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\n        initialBlock: '9378545',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '97',\n        type: 'future',\n        version: 'v1',\n        versionId: 'v1',\n        env: 'dev',\n        chain: 'bsctestnet',\n        retired: true,\n      },\n    ];\n  } else if (env === Env.TESTNET) {\n    return [];\n  }\n};\n\nexport const getLpConfigList = async(env) => {\n  env = checkEnv(env);\n  if (env === Env.PROD) {\n    return [\n      {\n        pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        bTokens: [{ bTokenSymbol: 'DERI' }, { bTokenSymbol: 'USDT' }],\n        symbol: '--',\n        type: 'lp',\n        version: 'slp',\n        isLp: true,\n      },\n      {\n        pool: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP SYRUP',\n        bTokens: [{ bTokenSymbol: 'DERI' }, { bTokenSymbol: 'BUSD' }],\n        symbol: '--',\n        type: 'lp',\n        version: 'clp',\n        isLp: true,\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getMiningVaultRouterConfig = (chainId) => {\n  const configs = [\n    {\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\n      chainId: '56',\n    },\n  ];\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\n  if (filteredConfig.length > 0) {\n    return filteredConfig[0].MiningVaultRouter;\n  }\n  throw new AppError('CONFIG_NOT_FOUND', {\n    name: 'getMiningVaultRouterConfig',\n    args: [chainId],\n  });\n};\n\nexport const getDeriConfigList = async(env) => {\n  env = checkEnv(env)\n  if (env === Env.PROD) {\n    return [\n      {\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\n        bTokenSymbol: 'DERI',\n        chainId: '1',\n      },\n      {\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\n        bTokenSymbol: 'DERI',\n        chainId: '56',\n      },\n      {\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\n        bTokenSymbol: 'DERI',\n        chainId: '128',\n      },\n    ];\n  }\n  return [\n    {\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\n      bTokenSymbol: 'DERI',\n      chainId: '3',\n    },\n    {\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\n      bTokenSymbol: 'DERI',\n      chainId: '97',\n    },\n    {\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\n      bTokenSymbol: 'DERI',\n      chainId: '256',\n    },\n  ];\n};\n\nexport const getPreminingConfigList = async(env) => {\n  env = checkEnv(env)\n  if (env === Env.PROD) {\n    return [\n      {\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        bTokenSymbol: 'WBNB',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        bTokenSymbol: 'CAKE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        bTokenSymbol: 'AUTO',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        bTokenSymbol: 'WHT',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        bTokenSymbol: 'MDX',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        bTokenSymbol: 'SUSHI',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        bTokenSymbol: 'AAVE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        bTokenSymbol: 'DERI-USDT SLP',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getLpConfig = async(chainId, poolAddress) => {\n  chainId = checkChainId(chainId);\n  const pools = (await getLpConfigList(DeriEnv.get())).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.find((p) => p.pool === poolAddress);\n  if (pool) {\n    return {\n      poolAddress: pool.pool,\n      bTokenAddress: pool.bToken,\n      lTokenAddress: pool.lToken,\n      type: pool.type,\n      version: pool.version,\n    };\n  }\n  throw new AppError('CONFIG_NOT_FOUND', {\n    name: 'getLpConfig',\n    args: [chainId, poolAddress],\n  });\n};\n\nexport const getDeriConfig = async(env, chainId) => {\n  env = checkEnv(env);\n  chainId = checkChainId(chainId);\n  const pool = (await getDeriConfigList(env)).filter((c) => c.chainId === chainId);\n  if (pool.length > 0) {\n    return {\n      deriAddress: pool[0].Deri,\n      wormholeAddress: pool[0].Wormhole,\n      bTokenSymbol: pool[0].bTokenSymbol,\n    };\n  }\n  throw new AppError('CONFIG_NOT_FOUND', {\n    name: 'getDeriConfig',\n    args: [env, chainId],\n  });\n};\n\nexport const getMiningVaultConfig = (chainId) => {\n  chainId = checkChainId(chainId);\n  const pools = getPoolV1ConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pools.length > 0) {\n    if (pools[0].MiningVault) {\n      return pools[0].MiningVault;\n    }\n  }\n  throw new AppError('CONFIG_NOT_FOUND', {\n    name: 'getMiningVaultConfi',\n    args: [chainId],\n  });\n};\n\nexport const getPoolV1Config = (chainId, poolAddress) => {\n  chainId = checkChainId(chainId);\n  const env = DeriEnv.get();\n  const pools = getPoolV1ConfigList(env)\n    .concat(getPreminingConfigList(env))\n    .concat(getLpConfigList(env))\n    .filter((c) => c.chainId === chainId);\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n      bTokenSymbol: pool[0].bTokenSymbol,\n      symbol: pool[0].symbol,\n      unit: pool[0].unit,\n      initialBlock: pool[0].initialBlock,\n    };\n  }\n  throw new AppError('CONFIG_NOT_FOUND', {\n    name: 'getPoolV1Config',\n    args: [chainId, poolAddress],\n  });\n};\n","// for convert\nconst bTokenPairs = {\n  AMUSDC: 'amUSDC',\n};\n\n// for convert\nconst symbolPairs = {\n  IBSCDEFI: 'iBSCDEFI',\n  IGAME: 'iGAME',\n};\n\n// todo: it's old, will clean later\nconst offchainSymbolPairs = {\n  AXSUSDT: 'AXSUSDT',\n  MANAUSDT: 'MANAUSDT',\n  MBOXUSDT: 'MBOXUSDT',\n  IBSCDEFI: 'iBSCDEFI',\n  IGAME: 'iGAME',\n  ALICEUSDT: 'ALICEUSDT',\n  SANDUSDT: 'SANDUSDT',\n  QUICKUSDT: 'QUICKUSDT',\n  GHSTUSDT: 'GHSTUSDT',\n  AGLDUSDT: 'AGLDUSDT',\n  SHIBUSDT: 'SHIBUSDT',\n};\n\nconst symbolDecimalPairs = {\n  'BTCUSD-40000-P': '5',\n  SHIBUSDT: '6',\n};\n\nexport const getSymbolDecimals = (symbol) => {\n  if (Object.keys(symbolDecimalPairs).includes(symbol)) {\n    return symbolDecimalPairs[symbol];\n  }\n  // default symbol decimals\n  return '2'\n};\n\nexport const normalizeOptionSymbol = (optionSymbol) => {\n  const res = optionSymbol.split('-')\n  if (res.length >= 2) {\n    return res[0]\n  } else {\n    throw new Error(`invalid option symbol:${optionSymbol}`)\n  }\n};\n\nexport const getNormalizedOptionSymbols = (symbols) => {\n  let res = []\n  symbols.forEach((s) => {\n    const volSymbol = normalizeOptionSymbol(s)\n    if (!res.includes(volSymbol)) {\n      res.push(volSymbol)\n    }\n  })\n  return res\n}\n\nexport const getVolatilitySymbols = (symbols) => {\n  return getNormalizedOptionSymbols(symbols).map((s) => `VOL-${s}`)\n}\n\nexport const isUsedRestOracle = (symbol) => {\n  return Object.keys(offchainSymbolPairs).includes(symbol);\n};\n\nexport const mapToSymbol = (symbol) => {\n  if (Object.keys(symbolPairs).includes(symbol)) {\n    return symbolPairs[symbol];\n  }\n  return symbol;\n}\n\nexport const mapToSymbolInternal = (symbol) => {\n  const index = Object.values(symbolPairs).indexOf(symbol)\n  if (index > -1) {\n    return Object.keys(symbolPairs)[index];\n  }\n  return symbol;\n}\n\nexport const mapToBToken = (bToken) => {\n  if (Object.keys(bTokenPairs).includes(bToken)) {\n    return bTokenPairs[bToken];\n  }\n  return bToken;\n};\n\nexport const mapToBTokenInternal = (bToken) => {\n  const index = Object.values(bTokenPairs).indexOf(bToken);\n  if (index !== -1) {\n    return Object.keys(bTokenPairs)[index];\n  }\n  return bToken;\n};\n\nexport const normalizeSymbolUnit = (symbol) => {\n  const prefix = ['USD', 'USDT'];\n  const re = new RegExp(`(${prefix.join('|')})$`);\n  if (typeof symbol === 'string') {\n    return mapToSymbol(symbol).replace(re, '');\n  }\n};\n\nexport const getIndexInfo = (symbol) => {\n  const internalSymbol = mapToSymbolInternal(symbol);\n  const customIndexs = {\n    IGAME: {\n      tokens: ['AXS', 'MANA', 'SAND', 'ALICE', 'TLM', 'DPET', 'SKILL'],\n      url: 'https://docs.deri.finance/products/index/game-index',\n    },\n    IBSCDEFI: {\n      tokens: ['CAKE', 'XVS', 'MDX', 'AUTO', 'BAKE', 'BUNNY'],\n      url: 'https://docs.deri.finance/products/index/bsc-defi-index',\n    },\n    IMEME: {\n      tokens: ['DOGE', 'SHIB', 'ELON', 'LOWB', 'PIG', 'SAFEMOON', 'MONA'],\n      url: 'https://docs.deri.finance/products/index/meme-index',\n    },\n  };\n  if (Object.keys(customIndexs).includes(internalSymbol)) {\n    return customIndexs[internalSymbol];\n  } else {\n    return { tokens: [], url: '' };\n  }\n};","export const factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}","import { makeAutoObservable, observable, action, computed } from \"mobx\";\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\nimport Type from \"./Type\";\n\nclass Version {\n  current = 'v2';\n\n  constructor(){\n    makeAutoObservable(this,{\n      current : observable,\n      setCurrent : action,\n      isV1 : computed,\n      isV2 : computed,\n      isV2Lite : computed,\n      zone : computed\n    })\n  }\n\n\n  setCurrent(version){\n    this.current = version;\n  }\n\n  switch(){\n    if(this.current === 'v1'){\n      this.setCurrent('v2')\n    } else {\n      this.setCurrent('v1')\n    }\n  }\n\n  get isV1() {\n    return this.current === 'v1'\n  }\n\n  get isV2(){\n    return this.current === 'v2'\n  }\n\n  get isV2Lite (){\n    return this.current === 'v2_lite'\n  }\n\n  get isOpen(){\n    return this.current === 'v2_lite_open'\n  }\n\n  get zone(){\n    if(Type.isFuture){\n      if(this.isV2){\n        return 'Main'\n      } else if(this.isV2Lite) {\n        return 'Inno'\n      } else {\n        return 'Open'\n      }\n    } else {\n      return ''\n    }\n  }\n}\nexport default new Version()","// utils for derijsnext, combine in one file\nimport { fromWei, toWei } from './convert';\n\n\n// factory\nexport const contractFactory = (klass) => {\n  let instances = {}\n  return (chainId, address, initialBlock='') => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address, initialBlock);\n      return instances[key];\n    }\n  }\n}\n\n// contract\nconst processObjectResult = (val, propList = []) => {\n  return Object.keys(val).reduce((acc, prop) => {\n    if (typeof val[prop] === \"string\" && propList.includes(prop)) {\n      acc[prop] = fromWei(val[prop]);\n    } else {\n      acc[prop] = val[prop];\n    }\n    return acc;\n  }, {});\n};\n\nexport const processResult = (val, propList = []) => {\n  if (Array.isArray(val)) {\n    return val.map((v) => processResult(v, propList));\n  } else if (typeof val === 'object' && val !== null) {\n    return processObjectResult(val, propList);\n  } else if (typeof val === \"string\") {\n    return fromWei(val);\n  } else {\n    return val;\n  }\n};\n\nexport const processMethod = (klass, methodName, propList = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const res = await originMethod.apply(this, args);\n    return processResult(res, propList);\n  };\n  return klass;\n};\n\nexport const processTxMethod = (klass, methodName, toWeiArgPositions = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const newArgs = args.map((arg, index) =>\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\n    );\n    return await originMethod.apply(this, newArgs);\n  };\n  return klass;\n};\n\n// api for v2_lite and option\nexport const getLiquidity = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype['getPoolLiquidity'] = async function () {\n    const res = await this._call('getPoolStateValues', []);\n    this.stateValues = this.stateValues || {}\n    this.stateValues.liquidity = fromWei(res[0]);\n    return this.stateValues.liquidity\n  };\n  return klass\n}\n\nexport const getLastTimestamp = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype['getLastTimestamp'] = async function () {\n    const res = await this._call('getPoolStateValues', []);\n    this.stateValues = this.stateValues || {}\n    this.stateValues.lastTimestamp = res[1];\n    return this.stateValues.lastTimestamp\n  };\n  return klass\n}\nexport const getProtocolFeeAccrued = (klass) => {\n  // init pool addresses, parameters, tokens and viewer\n  klass.prototype['getProtocolFeeAccrued'] = async function () {\n    const res = await this._call('getPoolStateValues', []);\n    this.stateValues = this.stateValues || {}\n    this.stateValues.protocolFeeAccrued = fromWei(res[2]);\n    return this.stateValues.protocolFeeAccrued;\n  };\n  return klass;\n}","/* eslint-disable */\n// base token contract abi\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const TERC20Abi = [{ \"inputs\": [{ \"internalType\": \"string\", \"name\": \"_name\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"_symbol\", \"type\": \"string\" }, { \"internalType\": \"uint8\", \"name\": \"_decimals\", \"type\": \"uint8\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n// oracle contract abis\nexport const symbolOracleOffChainAbi = [ {\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, { \"inputs\": [], \"name\": \"signer\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, {\"inputs\":[],\"name\":\"signatory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"} ]\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feed_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\n// activity contract abis\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-enable */","import { getChainIds } from '../config/chain';\nimport Web3 from 'web3';\n\n// validate\nexport const normalizeChainId = (chainId) => {\n  const chainIds = getChainIds()\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`);\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (typeof address === 'string' && address.startsWith('0x') && address.length == 42 ) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`);\n  }\n};\n\nexport const validateArgs = (...args) =>\n  args.every((i) => !isNaN(parseFloat(i)));\n\nexport const validateObjectKeyExist = (keyList, val, valName) => {\n  const keys = Object.keys(val);\n  keyList.forEach((prop) => {\n    if (!keys.includes(prop)) {\n      throw new Error(\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\n      );\n    }\n  });\n};\nexport const validateIsArray = (val, valName) => {\n  if (!Array.isArray(val)) {\n    throw new Error(\n      `validateConfig(): property ${valName} is an array in the config.`\n    );\n  }\n};\n","import { AppError } from \"../error/error\";\n\n// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\n// export const chainIdNamePairs = {\n//   // 1: 'ethereum',\n//   // 3: 'ropsten',\n//   // //'42': 'kovan',\n//   // 56: 'bsc',\n//   // 97: 'bsctestnet',\n//   // 128: 'heco',\n//   // 137: 'matic',\n//   // 256: 'hecotestnet',\n//   // 80001: 'mumbai',\n//   'ethereum': '1',\n//   'ropsten': '3',\n//   //'42': 'kovan',\n//   'bsc': '56',\n//   'bsctestnet': '97',\n//   'heco': '128',\n//   'hecotestnet': '256',\n//   'matic': '137',\n//   'mumbai': '80001',\n// };\n\nexport const chainConfigList = [\n  { chainId: '1', name: 'ethereum', unit: 'eth' },\n  { chainId: '3', name: 'ropsten', unit: 'eth' },\n  //{ chainId: '42', name: 'kovan', unit: 'eth' },\n  { chainId: '56', name: 'bsc', unit: 'bnb' },\n  { chainId: '97', name: 'bsctestnet', unit: 'bnb' },\n  { chainId: '128', name: 'heco', unit: 'ht' },\n  { chainId: '256', name: 'hecotestnet', unit: 'ht' },\n  { chainId: '137', name: 'polygon', unit: 'matic' },\n  { chainId: '80001', name: 'mumbai', unit: 'matic' },\n];\n\n\nexport const getChainIds = () => {\n  return chainConfigList.map((c) => c.chainId);\n  // return Object.values(chainIdNamePairs);\n  //return ['1', '3', '56', '97', '128', '256', '137', '80001'];\n};\n\nconst infuraAccount = \"ec73e2f0c79a42c0997ee535364de584\"\nexport const getChainProviderUrls = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        `https://mainnet.infura.io/v3/${infuraAccount}`,\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://polygon-rpc.com',\n        // 'https://rpc-mainnet.matic.network',\n        'https://rpc-mainnet.maticvigil.com',\n        // 'https://rpc-mainnet.matic.quiknode.pro',\n        // 'https://matic-mainnet.chainstacklabs.com',\n        // 'https://matic-mainnet-full-rpc.bwarelabs.com',\n        // 'https://matic-mainnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '137',\n    },\n    {\n      provider_urls: [\n        `https://ropsten.infura.io/v3/${infuraAccount}`,\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        `https://kovan.infura.io/v3/${infuraAccount}`,\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mumbai.matic.today',\n        'https://rpc-mumbai.maticvigil.com',\n        'https://matic-mumbai.chainstacklabs.com',\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '80001',\n    },\n  ];\n\n  const res = chainProviderUrls.find((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res) {\n    return res.provider_urls\n  }\n  throw new AppError('CONFIG_NOT_FOUND', {\n    name: 'getChainProviderUrls',\n    args: [chainId],\n  });\n}\n\nexport const getDailyBlockNumberConfig = () => {\n  // compute matic aunual block number: block height(16309458, 10000000)\n  let chainBlockNumberList = [\n    '6486',\n    '6486',\n    '28759',\n    '28759',\n    '28798',\n    '28798',\n    '40405',\n    '40405',\n  ];\n  return getChainIds().reduce((accum, i, index) => {\n    accum[i] = chainBlockNumberList[index];\n    return accum;\n  }, {});\n};\n\n// MAX UINT/INT256\n// hex(2**256-1)\nexport const MAX_UINT256 =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n// hex((2**255 -1) // 10**18)\nexport const MAX_INT256 =\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\n\n","export const ErrorCode = {\n  WEB3_WALLET_NOT_FOUND: 'WEB3_WALLET_NOT_FOUND',\n  BROWSER_NOT_SUPPORTED: 'BROWSER_NOT_SUPPORTED',\n  INVALID_DERI_ENV: 'INVALID_DERI_ENV',\n  INVALID_VERSION: 'INVALID_VERSION',\n  INVALID_VERSION_ID: 'INVALID_VERSION_ID',\n  INVALID_CHAIN_ID: 'INVALID_CHAIN_ID',\n  INVALID_ADDRESS: 'INVALID_ADDRESS',\n  INVALID_TOKEN_ID: 'INVALID_TOKEN_ID',\n  INVALID_TOKEN_ID_IN_RANGE: 'INVALID_TOKEN_ID_IN_RANGE',\n  INVALID_SYMBOl: 'INVALID_SYMBOl',\n  INVALID_BASE_TOKEN: 'INVALID_BASE_TOKEN',\n  INVALID_AMOUNT: 'INVALID_AMOUNT',\n  INVALID_TRADE_VOLUME: 'INVALID_TRADE_VOLUME',\n  INVALID_DATA: 'INVALID_DATA',\n  INVALID_CACHE: 'INVALID_CACHE',\n  CONFIG_LIST_NOT_FOUND: 'CONFIG_LIST_NOT_FOUND',\n  CONFIG_NOT_FOUND: 'CONFIG_NOT_FOUND',\n  RPC_NODE_ALL_UNAVAILABLE: 'RPC_NODE_ALL_UNAVAILABLE',\n  INVALID_JSON_RPC_RESPONSE: 'INVALID_JSON_RPC_RESPONSE',\n  JSON_RPC_CALL_TIMEOUT: 'JSON_RPC_CALL_TIMEOUT',\n  REST_API_CALL_TIMEOUT: 'REST_API_CALL_TIMEOUT',\n  INSUFFICIEN_MARGIN: 'INSUFFICIEN_MARGIN',\n  INSUFFICIENT_BALANCE: 'INSUFFICIENT_BALANCE',\n  INSUFFICIEN_LIQUIDITY: 'INSUFFICIEN_LIQUIDITY',\n  PRICE_EXPIRED: 'PRICE_EXPIRED',\n  VOLATILITY_EXPIRED: 'VOLATILITY_EXPIRED',\n  DEADLINE_EXPIRED: 'DEADLINE_EXPIRED',\n  OUT_OF_GAS: 'OUT_OF_GAS',\n  TRANSACTION_REVERTED: 'TRANSACTION_REVERTED',\n  API_REQUEST_TIMEOUT: 'API_REQUEST_TIMEOUT',\n  UNKOWN_ERROR: 'UNKOWN_ERROR',\n};\nObject.freeze(ErrorCode);\n\nexport let ErrorMessage;\n(function (ErrorMessage) {\n  // client\n  ErrorMessage.WEB3_WALLET_NOT_FOUND = () => 'web3 wallet is not found';\n  ErrorMessage.BROWSER_NOT_SUPPORTED = () => 'browser is not supported';\n\n  // input error\n  ErrorMessage.INVALID_DERI_ENV = (env) => `invalid deri env '${env}'`;\n  ErrorMessage.INVALID_VERSION = (version) =>\n    `invalid pool version '${version}'`;\n  ErrorMessage.INVALID_VERSION_ID = (versionId) =>\n    `invalid pool version id '${versionId}'`;\n  ErrorMessage.INVALID_CHAIN_ID = (chainId) => `invalid chain id '${chainId}'`;\n  ErrorMessage.INVALID_ADDRESS = (address) =>\n    `invalid eth address '${address}'`;\n  ErrorMessage.INVALID_TOKEN_ID = (tokenId) => `invalid token id'${tokenId}'`;\n  ErrorMessage.INVALID_TOKEN_ID_IN_RANGE = ({ tokenId, tokenIds, name }) =>\n    `invalid ${name} '${tokenId}' for ${name}s(${tokenIds.join(',')})`;\n  ErrorMessage.INVALID_AMOUNT = (amount) => `invalid amount '${amount}'`;\n  ErrorMessage.INVALID_TRADE_VOLUME = (volume) =>\n    `invalid trade volume '${volume}''`;\n  ErrorMessage.INVALID_SYMBOL = (symbol) => `invalid symbol'${symbol}'`;\n  ErrorMessage.INVALID_BASE_TOKEN = (bToken) => `invalid base token'${bToken}'`;\n  ErrorMessage.INVALID_DATA = (data) =>\n    `invalid data '${JSON.stringify(data)}'`;\n  ErrorMessage.INVALID_CACHE = ({name, data}) =>\n    `invalid cache value '${JSON.stringify(data)}' for key '${name}'`;\n  ErrorMessage.CONFIG_LIST_NOT_FOUND = ({ name, env }) =>\n    `the config list is not found with env ${env} by ${name}()`;\n  ErrorMessage.CONFIG_NOT_FOUND = ({ name, args = [] }) =>\n    `the config is not found by ${name}(${args.join(',')})`;\n\n  // network error\n  ErrorMessage.RPC_NODE_ALL_UNAVAILABLE = (chainId) =>\n    `all rpc nodes are not available for chain id '${chainId}'`;\n  ErrorMessage.INVALID_JSON_RPC_RESPONSE = () => 'invalid JSON RPC response';\n  ErrorMessage.REST_API_CALL_TIMEOUT = (url) =>\n    `REST API request is timeout: ${url}`;\n  ErrorMessage.JSON_RPC_CALL_TIMEOUT = ({ name, args = [] }) =>\n    `JSON RPC call timeout: ${name}(${args.join(',')})`;\n\n  // tansaction error\n  ErrorMessage.INSUFFICIEN_MARGIN = () => `insufficient margin`;\n  ErrorMessage.INSUFFICIENT_BALANCE = () => 'insufficient balance';\n  ErrorMessage.INSUFFICIEN_LIQUIDITY = () => 'insufficient pool liquidity';\n  ErrorMessage.PRICE_EXPIRED = () => 'price is expired';\n  ErrorMessage.VOLATILITY_EXPIRED = () => 'volatility is expired';\n  ErrorMessage.DEADLINE_EXPIRED = () => 'deadline is expired';\n  ErrorMessage.OUT_OF_GAS = () => 'transaction is out of gas';\n  ErrorMessage.TRANSACTION_REVERTED = () => 'transaction is reverted';\n\n  // api server error\n  ErrorMessage.API_REQUEST_TIMEOUT = (url) => `api request '${url}' is timeout`;\n\n  // common error\n  ErrorMessage.UNKOWN_ERROR = ({ err, name, args = [] }) =>\n    `unkown error: ${name}(${args.join(',')}) with ${err}`;\n})(ErrorMessage || (ErrorMessage = {}));\nObject.freeze(ErrorMessage);\n\nexport let ErrorName;\n(function (ErrorName) {\n  const errorCodes = Object.keys(ErrorMessage);\n  for (let v of errorCodes) {\n    if (['WEB3_WALLET_NOT_FOUND', 'BROWSER_NOT_SUPPORTED'].includes(v)) {\n      ErrorName[v] = 'ClientError';\n    } else if (\n      [\n        'INVALID_DERI_ENV',\n        'INVALID_VERSION',\n        'INVALID_VERSION_ID',\n        'INVALID_CHAIN_ID',\n        'INVALID_ADDRESS',\n        'INVALID_TOKEN_ID',\n        'INVALID_TOKEN_ID_IN_RANGE',\n        'INVALID_SYMBOl',\n        'INVALID_BASE_TOKEN',\n        'INVALID_AMOUNT',\n        'INVALID_TRADE_VOLUME',\n        'INVALID_DATA',\n        'INVALID_CACHE',\n        'CONFIG_LIST_NOT_FOUND',\n        'CONFIG_NOT_FOUND',\n      ].includes(v)\n    ) {\n      ErrorName[v] = 'InputError';\n    } else if (\n      [\n        'RPC_NODE_ALL_UNAVAILABLE',\n        'INVALID_JSON_RPC_RESPONSE',\n        'JSON_RPC_CALL_TIMEOUT',\n        'REST_API_CALL_TIMEOUT',\n      ].includes(v)\n    ) {\n      ErrorName[v] = 'NetworkError';\n    } else if (\n      [\n        'INSUFFICIEN_MARGIN',\n        'INSUFFICIENT_BALANCE',\n        'INSUFFICIEN_LIQUIDITY',\n        'PRICE_EXPIRED',\n        'VOLATILITY_EXPIRED',\n        'DEADLINE_EXPIRED',\n        'OUT_OF_GAS',\n        'TRANSACTION_REVERTED',\n      ].includes(v)\n    ) {\n      ErrorName[v] = 'TransactionError';\n    } else if (['API_REQUEST_TIMEOUT'].includes(v)) {\n      ErrorName[v] = 'ApiServerError';\n    } else {\n      ErrorName[v] = 'UnkownError';\n    }\n  }\n})(ErrorName || (ErrorName = {}));\n","export const SECONDS_IN_A_DAY = 86400;  // 60 * 60 * 24\n\n// debug, for logger print\n//export const DEBUG = false\nexport const DEBUG = true\n\n// for cache\nexport const OPEN_POOL_EXPIRE_TIME = 30\nexport const JSON_RPC_CALL_RETRY = 3\nexport const REST_API_CALL_RETRY = 2","// version definination\nexport const FUTURE ='v2'\nexport const FUTURE_INNO ='v2_lite'\nexport const FUTURE_OPEN ='v2_lite_open'\nexport const OPTION = 'option'\n\n// pool type\nexport const PoolType = {\n  FUTURE: 'future',\n  OPTION: 'option',\n  LP: 'lp', // for external pool, such as clp of pancake\n};\nObject.freeze(PoolType);\n\n// todo: lite version, will remove later\nexport const LITE_VERSIONS = ['v2_lite', 'v2_lite_open'];\nexport const LITE_AND_OPTION_VERSIONS = [...LITE_VERSIONS, 'option'];\n\n// version\nexport const VERSIONS_RETIRED = ['v1'];\nexport const VERSIONS = [FUTURE, FUTURE_INNO, FUTURE_OPEN, OPTION];\nexport const VERSIONS_ALL = [...VERSIONS_RETIRED, ...VERSIONS];\nexport const VERSION_IDS = ['v2_dpmm', 'v2_lite', 'v2_lite_dpmm', 'option'];\nexport const VERSION_IDS_ALL = [...VERSIONS_RETIRED, ...VERSION_IDS];\n\n// for oracle use\nexport const PRESERVED_SYMBOLS = ['BTCUSD', 'ETHUSD', 'BNBUSD'];\n\nconst VERSIONS_TYPE_HASH = {\n  v1: 'future',\n  v2: 'future',\n  v2_lite: 'future',\n  v2_lite_open: 'future',\n  option: 'option',\n};\n\nexport const getConfigType = (version) => {\n  if (Object.keys(VERSIONS_TYPE_HASH).includes(version)) {\n    return VERSIONS_TYPE_HASH[version];\n  }\n  throw new Error(`invalid pool version'${version}'`);\n};\n\nexport const getConfigZone = (version) => {\n  if (['v2'].includes(version)) {\n    return 'main';\n  } else if (['v2_lite'].includes(version)) {\n    return 'inno';\n  } else if (['v2_lite_open'].includes(version)) {\n    return 'open';\n  } else {\n    return '';\n  }\n};\n","import Web3 from 'web3';\nimport { normalizeChainId } from '../utils/validate';\nimport { getChainProviderUrl } from '../utils/chain';\nimport { isBrowser, isJsDom } from '../utils/convert';\n\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  let pending = {}\n  let walletChainId = null\n  return {\n    async get(chainId) {\n      chainId = normalizeChainId(chainId)\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\n        //console.log('hit web3 cache')\n        return web3InstanceMap[chainId];\n      }\n      // for mining page should not depends wallet network\n      if (!walletChainId && typeof window === 'object' && window.ethereum) {\n        walletChainId = await window.ethereum.request({ method: 'net_version' })\n      }\n      // using metaMask ethereum object\n      if (\n        isBrowser() &&\n        !isJsDom() &&\n        typeof window.ethereum === 'object' &&\n        walletChainId &&\n        chainId === walletChainId.toString()\n      ) {\n        //console.log('new ethereum web3 cache')\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\n        return web3InstanceMap[chainId];\n      } else {\n        if (pending[chainId]) {\n          // wait for init\n          let retry = 8\n          while (retry > 0) {\n            await delay(500)\n            if (Object.keys(web3InstanceMap).includes(chainId)) {\n              // console.log('hit web3 cache')\n              return web3InstanceMap[chainId];\n            } else {\n              retry -= 1\n            }\n          }\n          // timeout\n          const providerUrl = await getChainProviderUrl(chainId);\n          //console.log('new web3 cache')\n          web3InstanceMap[chainId] = new Web3(\n            new Web3.providers.HttpProvider(providerUrl)\n          );\n          return web3InstanceMap[chainId];\n        } else {\n          // first init\n          pending[chainId] = true\n          try {\n            const providerUrl = await getChainProviderUrl(chainId);\n            //console.log('new web3 cache')\n            web3InstanceMap[chainId] = new Web3(\n              new Web3.providers.HttpProvider(providerUrl)\n            );\n          } catch(err) {\n            console.log(err.toString())\n          } finally {\n            delete pending[chainId]\n          }\n          return web3InstanceMap[chainId];\n        }\n      }\n    },\n  };\n})();","\n/* eslint-disable */\nexport const perpetualPoolLiteAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"indexPrice\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"lastBlockNumber\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"lastBlockTimestamp\", \"type\": \"uint256\" } ], \"name\": \"executeMigrationSwitchToTimestamp\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getFundingPeriod\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"poolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"period\", \"type\": \"uint256\" } ], \"name\": \"setFundingPeriod\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const perpetualPoolLiteOldAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLastUpdateBlock\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLiquidity\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n/* eslint-disable */","import {\n  getChainProviderUrls,\n  getDailyBlockNumberConfig,\n  chainConfigList,\n} from '../config/chain';\nimport { getLatestRPCServer } from './network';\nimport { AppError } from '../error/error';\n\nexport const getChainProviderUrl = async (chainId) => {\n  const urls = getChainProviderUrls(chainId);\n  if (urls.length > 0) {\n   const url =  await getLatestRPCServer(urls);\n   // console.log('url', url)\n   return url\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\n\nexport const getDailyBlockNumber = (chainId) => {\n  const blockNumbers = getDailyBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  } else {\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\n  }\n};\n\nexport const getNetworkName = (chainId) => {\n  const config = chainConfigList.find((c) => c.chainId === chainId)\n  if (config && config.name)  {\n    return config.name\n  }\n  throw new AppError('CONFIG_NOT_FOUND', {\n    name: 'getNetworkName',\n    args: [chainId],\n  });\n};\n\nexport const getChainGasUnit= (chainId) => {\n  const config = chainConfigList.find((c) => c.chainId === chainId)\n  if (config && config.unit)  {\n    return config.unit\n  }\n  throw new AppError('CONFIG_NOT_FOUND', {\n    name: 'getChainGasUnit',\n    args: [chainId],\n  });\n};","import styled from \"styled-components\"\nconst images = require.context('../../assets/img', true)\nconst Wrapper = styled.img`\n  width : ${props => props.width }px;\n  height : ${props => props.height}px;\n  display : flex;\n  align-items : center;\n`\nexport default function Icon({width,height,token}){\n  const img = images(`./${token}.svg`)\n  return <Wrapper src={img.default} width={width} height={height}/>\n}","export default __webpack_public_path__ + \"static/media/arrow-down.3242399e.svg\";","import Web3 from 'web3';\n// == func\n// const np = () => {}\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n// refer to https://www.30secondsofcode.org/js/s/deep-clone\n// alternative: let clone = JSON.parse(JSON.stringify(obj))\nexport const deepClone = obj => {\n  if (obj === null) return null;\n  let clone = Object.assign({}, obj)\n  Object.keys(clone).forEach((key) => {\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\n  });\n  // need recheck\n  if (Array.isArray(obj)) {\n    clone.length = obj.length\n    return Array.from(clone)\n  }\n  return clone\n}\n\n// export const shuffleArray = (urls) => {\n//   const newUrls = deepClone(urls)\n//   const length = urls.length\n//   let res = []\n//   for (let i = 0; i < length; i++) {\n//     const index = Math.floor(Math.random() * urls.length)\n//     res = res.concat(newUrls.splice(index,1))\n//   }\n//   return res\n// }\nexport const shuffleArray = (array) => {\n  let currentIndex = array.length, randomIndex;\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n  return array;\n}\n\nconst getBlockNumber = async (url) => {\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\n  try {\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\n    const startTime = Date.now()\n    res.blockNumber = await web3.eth.getBlockNumber()\n    res.duration = Date.now() - startTime\n  } catch (err) {\n    //console.log(`getBlockNumber(${url}) error: ${err}`)\n  }\n  return res\n};\n\nexport const getLatestRPCServer = async (urls = []) => {\n  // urls = shuffleArray(urls)\n  // pick 2 random urls\n  // urls = urls.length >= 2 ? urls.slice(0,2) : urls\n  let promises = []\n  for (let i = 0; i < urls.length; i++) {\n    promises.push(getBlockNumber(urls[i]));\n  }\n  let blockNumbers = await Promise.all(promises)\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\n  // console.log('blockNumbers',  blockNumbers)\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\n  const res = blockNumbers[index] && blockNumbers[index].url\n  // console.log(res)\n  if (res && res.startsWith('http')) {\n    return res\n  } else {\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\n  }\n};","export const getRestServerConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    // for production\n    return (\n      (process && process.env && process.env.REACT_APP_REST_SERVER_URL) ||\n      'https://api.deri.finance'\n    );\n    //return 'https://alphaapi.deri.finance';\n  } else {\n    // for test\n    return (\n      (process && process.env && process.env.REACT_APP_REST_SERVER_URL) ||\n      'https://testnetapi.deri.finance'\n    );\n  }\n};\n","import { ContractBase } from \"../contract_base\";\nimport { wrappedOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WrappedOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wrappedOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  // decimals refers https://docs.chain.link/docs/matic-addresses\n  async getPrice() {\n    // console.log('hit wrapped oracle')\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}\n","import { ContractBase } from \"../contract_base\";\nimport { brokerManagerAbi } from '../abis';\n\nexport class BrokerManager extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, brokerManagerAbi)\n  }\n  // query\n  async getBroker(accountAddress) {\n    return await this._call('getBroker', [accountAddress])\n  }\n\n  // transaction\n  async setBroker(accountAddress, brokerAddress) {\n    return await this._transact(\n      'setBroker',\n      [brokerAddress],\n      accountAddress\n    );\n  }\n}","import { ContractBase } from '../contract_base'\nimport { pTokenAirdropAbi } from '../abis'\n\nexport class PTokenAirdrop extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, pTokenAirdropAbi)\n  }\n  async getBTokenBalance() {\n    return await this._call('getBTokenBalance', [])\n  }\n  async totalWhitelistCount() {\n    return await this._call('totalWhitelistCount', [])\n  }\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n}","// v2 lite\nexport * from './perpetual_pool';\nexport * from './l_token';\nexport * from './p_token';\nexport * from './perpetual_pool_lite_viewer';\n","export default __webpack_public_path__ + \"static/media/bsc-logo.a25f983a.svg\";","export default __webpack_public_path__ + \"static/media/logo.6909977e.svg\";","import { deriToNatural, bg } from '../utils'\nimport { MAX_UINT256} from '../config'\nimport { ContractBase } from './contract_base'\nimport { bTokenAbi } from './abis';\n\n\nexport class BToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, bTokenAbi);\n  }\n  // === query ===\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    const allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return bg(allowance).gt(0);\n  }\n\n  // === transaction ===\n  async unlock(accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n}","export default __webpack_public_path__ + \"static/media/lang-icon.2c64ed51.svg\";","export default __webpack_public_path__ + \"static/media/matemask-logo.70d4a00c.svg\";","import { io } from \"socket.io-client\";\nimport {equalIgnoreCase } from \"../utils/utils\";\n\nclass WebSocket {\n  constructor(){\n    this.socket = io(process.env.REACT_APP_WSS_URL, {\n      transports: ['websocket'],\n      withCredentials: true\n    })\n    this.events = [];\n    this.reconnectListeners = {}\n    this.reconnected = false\n    this.socket.on('connect', () => {\n      console.log('connect')\n      if(this.reconnected){\n        console.log('reconnect and emit reconnect event')\n        this.reconnected = false\n        Object.values(this.reconnectListeners).forEach(callback => callback())\n      }\n      this.events.forEach(event => {\n        this.socket.emit(event[0],event[1]);\n      })\n    })\n    this.socket.on('disconnect',event => {\n      this.reconnected = true\n      console.log('web socket disconnect,will reconnect auto')\n    })\n  }\n\n  addReconnectEvent(id,callback){\n    this.reconnectListeners[id] = callback\n  }\n\n  removeReconnectEvent(id){\n    delete this.reconnectListeners[id]\n  }\n\n\n  subscribe(event = 'get_kline_update',params = {},onMessage,listener = 'kline_update'){\n    this.socket.on(listener,data => {\n      if (data.time_type === params.time_type && equalIgnoreCase(data.symbol,params.symbol) && onMessage) {\n        onMessage(data)\n      }\n    })\n    this.socket.emit(event, params)\n    if(this.findEvent(event,params) === -1){\n      this.events.push([event,params])\n    }\n  }\n\n  findEvent(event,params){\n    return this.events.findIndex(item => item[0] === event && item[1].symbol === params.symbol && item[1].time_type === params.time_type);\n  }\n\n  unsubscribe(event,params = {}){\n    this.socket.emit(event,params)\n    const pos = this.findEvent(event,params)\n    this.events.splice(pos,1)\n  }\n}\nexport default new WebSocket()","import './spinner.less'\nexport default function Spinner(){\n  \n  return (\n    <div className='spinner-border'/>\n  )\n}","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { PRIMARY, SECONDARY } from '../../utils/Constants';\nimport classNames from 'classnames';\nimport Spinner from '../Spinner/Spinner';\nimport Icon from '../Icon/Icon';\nconst Wrapper = styled.div`\n    position : ${props => props.position ? props.position : 'initial'};\n    bottom : ${props => props.position ? '10px' : '0px'};\n    display : flex;\n    align-items : center;\n    justify-content: center;\n    border-radius: 4px;\n    background-color : ${props => props.backgroundColor};\n    font-size : ${props => props.fontSize}px;\n    font-weight : ${props => props.fontWeight};\n    color : ${props => props.fontColor};\n    width : ${props => props.width}px;\n    border: ${props => props.borderSize}px solid ${props => props.defaultBorderColor};\n    border : 1px solid ${props => props.backgroundColor};\n    height : ${props => props.height}px;\n    &:hover {\n      border : 1px solid ${props => props.borderColor};\n      cursor: pointer;\n    }\n    &.selected {\n      border : 1px solid ${props => props.borderColor};\n    }\n  `  \nexport default function Button({label,fontColor = '#E0ECFF',type = PRIMARY,bgColor,position ,defaultBorderColor = '#203B60',borderSize = 1, outline = false,isSelected = false,outlineColor = '#CD7A37',icon ,onClick,width = 158,fontSize = 14,fontWeight = 'normal',height = 48,className,styles = {}}){\n  const [pending, setPending] = useState(false)\n  let backgroundColor ;\n  if(bgColor) {\n    backgroundColor = bgColor;\n  } else if(type === PRIMARY) {\n    backgroundColor = '#3756CD';\n  } else if(type === SECONDARY){\n    backgroundColor = '#203B60' \n  }\n  const borderColor = outline ? outlineColor : 'none';\n  \n  const click = async () => {\n    if(onClick && !pending){\n      setPending(true);\n      const result = await onClick();\n      setPending(false)\n    }\n  }\n  const clazz = classNames(className,{\n    selected : isSelected\n  })\n  return (\n    <Wrapper borderColor={borderColor} \n            backgroundColor={backgroundColor} \n            fontColor={fontColor} \n            fontSize={fontSize} \n            fontWeight={fontWeight} \n            width={width} \n            fixed={position}\n            height={height} className={clazz} style={{...styles}} onClick={click}>\n      {icon && <Icon token={icon}/>}{pending && <Spinner/>}{label}\n    </Wrapper>\n  )\n}","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils';\nimport { lTokenLiteAbi } from './abis';\n\nexport class LTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenLiteAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    const res = await this._call('balanceOf', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n}\n","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenLiteAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","import { ContractBase } from '../../shared/contract';\nimport { perpetualPoolLiteViewerAbi } from './abis';\n\nexport class PerpetualPoolLiteViewer extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\n  }\n  async getOffChainOracleSymbols(poolAddress) {\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\n    //return res.filter((s) => s && s !== '');\n    return res\n  }\n}\n","export default __webpack_public_path__ + \"static/media/ethereum.017d2801.svg\";","import config from '../config.json'\nimport {DeriEnv} from '../lib/web3js/index'\nexport default function useConfig(chainId,type = 'chainInfo'){\n  return chainId ? config[DeriEnv.get()][type][chainId] || {} : config[DeriEnv.get()][type]\n}","export default __webpack_public_path__ + \"static/media/close-modal-icon.0c923558.svg\";","export default __webpack_public_path__ + \"static/media/polygon-logo.cdeb3583.svg\";","export default __webpack_public_path__ + \"static/media/rate-down-icon.6c08a648.svg\";","export default __webpack_public_path__ + \"static/media/btc-icon.db6e15a8.svg\";","export default __webpack_public_path__ + \"static/media/btc.b3f0e933.svg\";","export default __webpack_public_path__ + \"static/media/gauge-graph.5143be85.svg\";","export default __webpack_public_path__ + \"static/media/heco.360b1e7b.svg\";","export default __webpack_public_path__ + \"static/media/rate-up-icon.981f328a.svg\";","var map = {\n\t\"./amusdc.svg\": 638,\n\t\"./arrow-down.svg\": 134,\n\t\"./arrow-up.svg\": 639,\n\t\"./bsc-logo.svg\": 158,\n\t\"./btc-icon.svg\": 326,\n\t\"./btc.svg\": 327,\n\t\"./busd-logo.svg\": 640,\n\t\"./busd.svg\": 641,\n\t\"./cake.svg\": 642,\n\t\"./close-modal-icon.svg\": 322,\n\t\"./deposit.svg\": 643,\n\t\"./error.svg\": 644,\n\t\"./ethereum.svg\": 320,\n\t\"./gauge-graph.svg\": 328,\n\t\"./heco.svg\": 329,\n\t\"./lang-icon.svg\": 194,\n\t\"./logo.svg\": 159,\n\t\"./matemask-logo.svg\": 195,\n\t\"./matic.svg\": 645,\n\t\"./polygon-logo.svg\": 323,\n\t\"./rate-down-icon.svg\": 324,\n\t\"./rate-up-icon.svg\": 330,\n\t\"./success.svg\": 646,\n\t\"./tbusd.svg\": 647,\n\t\"./tweth.svg\": 648,\n\t\"./usdt.svg\": 649,\n\t\"./wbnb.svg\": 650,\n\t\"./withdraw.svg\": 651,\n\t\"./wmatic.svg\": 652\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 637;","export default __webpack_public_path__ + \"static/media/amusdc.a91be758.svg\";","export default __webpack_public_path__ + \"static/media/arrow-up.4c5dad08.svg\";","export default __webpack_public_path__ + \"static/media/busd-logo.f4614ed2.svg\";","export default __webpack_public_path__ + \"static/media/busd.42a5f6e9.svg\";","export default __webpack_public_path__ + \"static/media/cake.a2b7e4e1.svg\";","export default __webpack_public_path__ + \"static/media/deposit.cf59e820.svg\";","export default __webpack_public_path__ + \"static/media/error.2cbcf5e8.svg\";","export default __webpack_public_path__ + \"static/media/matic.80d45679.svg\";","export default __webpack_public_path__ + \"static/media/success.07db2aec.svg\";","export default __webpack_public_path__ + \"static/media/tbusd.42a5f6e9.svg\";","export default __webpack_public_path__ + \"static/media/tweth.017d2801.svg\";","export default __webpack_public_path__ + \"static/media/usdt.6db83251.svg\";","export default __webpack_public_path__ + \"static/media/wbnb.a4a83ea5.svg\";","export default __webpack_public_path__ + \"static/media/withdraw.cc1481c5.svg\";","export default __webpack_public_path__ + \"static/media/wmatic.f7fd3f97.svg\";","var map = {\n\t\"./de/Signin.json\": 658,\n\t\"./de/bridge.json\": 659,\n\t\"./de/broker.json\": 660,\n\t\"./de/dip-history-two.json\": 661,\n\t\"./de/dip-history.json\": 662,\n\t\"./de/dip-two.json\": 663,\n\t\"./de/faucet.json\": 664,\n\t\"./de/footer.json\": 665,\n\t\"./de/governance.json\": 666,\n\t\"./de/header.json\": 667,\n\t\"./de/home.json\": 668,\n\t\"./de/lite.json\": 669,\n\t\"./de/mining.json\": 670,\n\t\"./de/mobile-lite.json\": 671,\n\t\"./de/nuls.json\": 672,\n\t\"./de/permission.json\": 673,\n\t\"./de/pool.json\": 674,\n\t\"./de/pro.json\": 675,\n\t\"./de/team.json\": 676,\n\t\"./de/trading-mining.json\": 677,\n\t\"./en/bridge.json\": 678,\n\t\"./en/header.json\": 679,\n\t\"./en/pool.json\": 680,\n\t\"./en/token.json\": 681,\n\t\"./en/trade.json\": 682,\n\t\"./en/trading-mining.json\": 683,\n\t\"./fr/Signin.json\": 684,\n\t\"./fr/bridge.json\": 685,\n\t\"./fr/broker.json\": 686,\n\t\"./fr/dip-history-two.json\": 687,\n\t\"./fr/dip-history.json\": 688,\n\t\"./fr/dip-two.json\": 689,\n\t\"./fr/faucet.json\": 690,\n\t\"./fr/footer.json\": 691,\n\t\"./fr/governance.json\": 692,\n\t\"./fr/header.json\": 693,\n\t\"./fr/home.json\": 694,\n\t\"./fr/lite.json\": 695,\n\t\"./fr/mining.json\": 696,\n\t\"./fr/mobile-lite.json\": 697,\n\t\"./fr/nuls.json\": 698,\n\t\"./fr/permission.json\": 699,\n\t\"./fr/pool.json\": 700,\n\t\"./fr/pro.json\": 701,\n\t\"./fr/team.json\": 702,\n\t\"./fr/trading-mining.json\": 703,\n\t\"./zh/pool.json\": 704,\n\t\"./zh/trade.json\": 705\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 657;","import styled from \"styled-components\"\nconst Wrapper = styled.div`\n  padding : 0 8px;\n  height : ${props => props.height}px;\n  color : ${props => props.color};\n  border-color : ${props => props.borderColor};\n  background-color : ${props => props.bgColor};\n  border-radius : ${props => props.borderRadius};\n  font-size : ${props => props.fontSize}px;\n  text-align : center;\n  .main {\n    display : flex;\n    align-items : center;\n    justify-content : center;\n  }\n  img {\n    margin-right :8px;\n  }\n`\nexport default function Label({text,height ,borderColor ,color,bgColor,borderRadius = '50%',fontSize,icon,className}) {\n\n  return (\n    <Wrapper className={className} height={height} borderColor={borderColor} color={color} bgColor={bgColor} borderRadius={borderRadius} fontSize={fontSize}>\n      <span className='main'>\n        {icon && <img src={icon} alt='' />}\n        {text}\n      </span>\n    </Wrapper>\n  )\n}","import styled from 'styled-components'\nimport { Link,useLocation } from 'react-router-dom'\nimport classNames from 'classnames';\nimport Label from '../Label/Label';\n\nconst Wrapper = styled.div`\nwidth: 795px;\ndisplay: flex;\njustify-content: space-around;\nmargin-left: 14px;\n.menu-item {\n  position : relative;\n  .beta-icon {\n    position : absolute;\n    top: -14px;\n    left: 6px;\n  }\n  a {\n    color : #93A1B8;\n    text-decoration: none;\n  }\n}\n.menu-item.selected a{\n  color : #E0ECFF;\n}\n`\nexport default function Menu({lang}){\n  const location = useLocation();\n\n  const menus = [\n    {text : lang['pools'],link : '/pool'},\n    {text : lang['Futures'],link : '/trade/futures'},\n    {text : lang['options'],link : '/trade/options',icon : <Label text={lang['beta']} height='16' borderRadius = '10px' bgColor='#CD7A37' color='#FFFFFF' fontSize='11' className='beta-icon'/>},\n    {text : lang['token'],link : '/token'},\n    {text : lang['bridge'],link : '/bridge'},\n    {text : lang['docs'],subMenu : [] ,link : ''},\n    {text : lang['more'],subMenu : [],link : ''},\n    {text : lang['trade-to-earn'],icon : '',link : '/trade-to-earn'}\n  ]\n\n  return (\n    <Wrapper>\n      {menus.map((menu,index) => {\n        const clazz = classNames('menu-item',{selected : location.pathname === menu.link})\n        return(\n          <span className={clazz} key={index}>\n            {menu.icon}\n            <Link to={menu.link}>{menu.text}</Link>\n          </span>\n        )\n      })}\n    </Wrapper>\n  ) \n}","import styled from 'styled-components'\nimport langIcon from '../../assets/img/lang-icon.svg'\n\nconst Wrapper = styled.div`\n  display : flex;\n  align-items: center;\n`\n\nconst Panel = styled.div`\n  display : none;\n`\n\nexport default function LangSelector(){\n  return (\n    <Wrapper>\n      <img src={langIcon} alt='lang Selector'/>\n      <Panel>\n        <div>En</div>\n      </Panel>\n    </Wrapper>\n  )\n}","import styled from 'styled-components';\nimport bscLogoIcon from '../../assets/img/bsc-logo.svg'\nimport arrowDownIcon from '../../assets/img/arrow-down.svg'\nconst Wrapper = styled.div`\ndisplay : flex;\nalign-items : center;\ncolor : #E0ECFF;\nwidth : 108px;\nmargin-left : 16px;\n.name {\n  margin-left : 4px\n}\n`  \nexport default function NetworkSelector(){\n\n  return (\n    <Wrapper>\n      <img src={bscLogoIcon} alt='bsc'/>\n      <div className='name'>BSC</div>\n      <img src={arrowDownIcon} alt='select' />\n    </Wrapper>\n  )\n}","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components';\nimport matemaskIcon from '../../assets/img/matemask-logo.svg'\nimport arrowDownIcon from '../../assets/img/arrow-down.svg'\nimport { inject, observer } from 'mobx-react';\nimport { useRouteMatch } from 'react-router';\nimport useConfig from '../../hooks/useConfig';\nimport { formatAddress } from '../../utils/utils';\nimport Button from '../Button/Button';\n\nconst Wrapper = styled.div`\n  display : flex;\n  align-items : center;\n  margin-right : 24px;\n  color : #E0ECFF;\n  cursor: pointer;\n  img {\n    margin-right : 8px;\n  }\n  `\n\n\nfunction WalletSelector({wallet,lang}){\n  const [btnText,setBtnText] = useState(lang['connect-wallet'])\n  const isIndex = useRouteMatch('/index')\n  const isRoot = useRouteMatch({path: '/',exact : true})\n  const isMining = useRouteMatch({path: '/mining',exact : true});\n  const isTeam = useRouteMatch('/team')\n  const isRetired = useRouteMatch('/retired')\n  const isOptionsLite = useRouteMatch('/options/lite')\n  const isOptionsPro = useRouteMatch('/options/pro') \n  const isDownload = useRouteMatch('/logo')\n  const isInfo = useRouteMatch('/info')\n\n  const isOptions = isOptionsLite || isOptionsPro\n  const notConnectWalletPage  = isIndex || isMining || isTeam || isRoot || isRetired || isDownload || isInfo\n  \n\n\n  const setAccountText = (detail) => {\n    //如果用户选择的网络正确\n    if(wallet.isConnected()){\n      if(wallet.isSupportChain(isOptions)) {\n        setBtnText(<span className='address'>{formatAddress(detail.account)}</span>)\n      } else {\n        setBtnText(<span className='no-supported'>{lang['unsupported-chain-id']}{detail.chainId}!</span>)\n      }\n    } else {\n      setBtnText(lang['connect-wallet'])\n    } \n  }\n  useEffect(() => {\n    const init = async () => {\n      const detail = await wallet.connect()\n      if(detail){\n        setAccountText(detail)\n      }\n    }\n    if(!notConnectWalletPage){\n      init();\n    }\n    return () => {}\n  }, [window.location.href])\n\n  useEffect(() => {\n    const init = async () => {\n      const detail = await wallet.connect()\n      if(detail){\n        setAccountText(detail)\n      }\n    }\n    if(!notConnectWalletPage){\n      init();\n    }\n    return () => {}\n  }, [window.location.href])\n\n  useEffect(() => {\n    setAccountText(wallet.detail)\n    return () => {\n    };\n  }, [wallet.detail.account,wallet.detail.formatBalance,lang]);\n\n  return (\n    <Wrapper>\n      {wallet.isConnected() ? \n        <>\n          <img src={matemaskIcon} alt='matemask'/>\n          <div onClick={wallet.connect}>{btnText}</div>\n          {/* <img src={arrowDownIcon} alt='select'/> */}\n        </>\n      :\n        <Button label={btnText} onClick={wallet.connect} width={176} height={32} fontWeight ={700} fontColor='#FFF' fontSize='18'/>\n      }\n      \n    </Wrapper>\n  )\n}\nexport default inject('wallet')(observer(WalletSelector))","import './header.less'\nimport logo from '../../assets/img/logo.svg'\nimport Menu from './Menu'\nimport LangSelector from './LangSelector'\nimport NetworkSelector from './NetworkSelector'\nimport WalletSelector from './WalletSelector'\nimport { inject, observer } from 'mobx-react'\nimport useLang from '../../hooks/useLang'\n\n\nfunction Header({intl}){\n  const lang = useLang(intl.dict,'header');\n  return (\n    <div className='header'>\n      <div className='left'>\n        <div className='logo'>\n          <img src ={logo} alt='logo'/>\n          <span className='name'>DERI</span>\n        </div>\n        <Menu lang={lang}/>\n      </div>\n      <div className='right'>\n        <LangSelector/>\n        <NetworkSelector/>\n        <WalletSelector lang={lang}/>\n      </div>\n    </div>\n  )\n}\nexport default inject('intl')(observer(Header))","\n\nexport default function useLang(dict,page){\n  if(dict){\n    return dict[page]\n  }\n  return {}\n}","export default function Footer(){\n  return (\n    <div></div>\n  )\n}","import React from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass LoadingPage extends React.Component {\n  //类似github页面加载的那个加载条\n  componentWillMount(){\n    NProgress.start()\n  }\n  componentWillUnmount(){\n    NProgress.done()\n  }\n  render () {\n    return (\n      <div/>\n    )\n  }\n}\n\nconst LoadableComponent = (component) => {\n  return Loadable({\n    loader: component,\n    loading: ()=><LoadingPage/>\n  })\n}\n\nexport default LoadableComponent","import React from 'react'\nimport { inject, observer } from 'mobx-react';\nimport { isMobile } from 'react-device-detect';\n\nconst withLanguage =  Component => {\n  class WithLanguage extends React.Component {\n\n    componentDidUpdate(prevProps) {\n      if (this.props.location !== prevProps.location) {\n        this.onRouteChanged(this.props.location);\n      }\n    }\n  \n    onRouteChanged(location) {\n    }\n    \n    render(){\n      const {intl,...props} = this.props\n      const {dict} = intl\n      //如果当前终端为移动端，判断是否存在移动端特殊语言包，如果有覆盖默认的语言包\n      if(isMobile){\n        for(let item in dict){\n          if(dict[item].mobile){\n            Object.assign(dict[item],dict[item].mobile)\n          }\n        }\n      }\n      return (\n      <Component {...props} dict={dict}/>\n      )\n    }\n  }\n  return inject('intl')(observer(WithLanguage)) ;\n}\n\nexport default withLanguage\n","import { Redirect } from \"react-router-dom\";\n\nexport default function IndexRoute(){\n  const url = window.location.href;\n  if(/^https?:\\/\\/(app|alphatest|testnet)/.test(url)) {\n    return  <Redirect to='/futures/pro'/> \n  } else if(/^https?:\\/\\/governance/.test(url)) {\n    return  <Redirect to='/governance'/> \n  } else if(/^https?:\\/\\/bridge/.test(url)) {\n    return  <Redirect to='/bridge'/> \n  } else if(/^https?:\\/\\/info/.test(url)) {\n    return <Redirect to='/info'/>\n  }\n  return <Redirect to='/index'/>\n}","import React from 'react';\nimport {Switch,Route,withRouter} from 'react-router-dom'\nimport LoadableComponent from '../utils/LoadableComponent';\nimport withLanguage from '../hoc/withLanguage';\nimport IndexRoute from '../components/IndexRoute/IndexRoute';\nimport Type from '../model/Type';\nimport { FUTURE, OPTION } from '../utils/Constants';\n\n\nconst Home = LoadableComponent(() => import('./Home/Home')) \nconst Pool = LoadableComponent(() => import('./Pool/Index')) \nconst PoolDetail = LoadableComponent(() => import('./Pool/Detail')) \nconst Trade = LoadableComponent(() => import('./Trade/Trade'))\nconst Bridge = LoadableComponent(() => import('./Bridge/Bridge'))\nconst Governance = LoadableComponent(() => import('./Governance/Governance'))\nconst Token = LoadableComponent(() => import('./Token/Token'))\nconst Info = LoadableComponent(() => import('./Info/Index'))\nconst InfoDetail = LoadableComponent(() => import('./Info/Detail'))\nconst TradingMining = LoadableComponent(() => import('./TradeToEarn/index'))\n\n\n\n@withRouter\n@withLanguage\nclass PageRouter extends React.Component{\n\n  render(){\n    const {dict} = this.props  \n\n    return (\n      <Switch>\n        <Route exact path='/index' component={() => <Home lang={dict['index']} />}></Route>\n        <Route exact path='/pool' component={() => <Pool lang={dict['pool']} />}></Route>\n        <Route exact path='/pool/:version/:chainId/:type/:address' component={() => <PoolDetail lang={dict['pool']}/>}/>\n        <Route exact path='/trade/futures' render={(props) => {\n          Type.setCurrent(FUTURE)\n          return <Trade lang={dict['trade']} />\n        }}/>\n        <Route exact path='/trade/options' render={props => {\n          Type.setCurrent(OPTION)\n          return <Trade lang={dict['trade']} />\n        }}/>\n        <Route exact path='/bridge' component={() => <Bridge lang={dict['bridge']} />}></Route>\n        <Route exact path='/governance' component={() => <Governance lang={dict['governance']} />}></Route>\n        <Route exact path='/token' component={() => <Token lang={dict['token']} />}></Route>\n        <Route exact path='/info' component={() => <Info lang={dict['token']} />}></Route>\n        <Route exact path='/info/:add/:catalog/:bToken/:network' component={() => <InfoDetail/>}/>\n        <Route exact path='/trade-to-earn' component={() => <TradingMining lang={dict['trading-mining']}/>}/>\n        <Route exact path='/' render={() => <IndexRoute/>}/>\n      </Switch>\n    )\n  }\n}\nexport default PageRouter","import Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport PageRouter from './pages/PageRouter';\nimport './app.less';\nimport './assets/css/fonts.less'\n\nfunction App() {\n  return (\n    <div className=\"deri-root\">\n      <Header></Header>\n      <PageRouter></PageRouter>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { makeObservable, observable, action, computed } from \"mobx\";\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\nimport supportedCatalog from '../locales/lang.json'\n\n\nconst cache = {}\n\nfunction importAll(r){\n  return r.keys().forEach(key => {\n    const path = key.split('/')\n    const lang = path[1]\n    const page = path[2].split('.')[0].toLowerCase()\n    if(!cache[lang]) {\n      cache[lang] = {}\n    }\n    \n    if(/mobile-/.test(page)){\n      const pageName= page.split('-')[1]\n      if(!cache[lang][pageName]){ \n        cache[lang][pageName] = {}\n      }\n      cache[lang][pageName]['mobile'] = r(key)\n    } else {\n      cache[lang][page] = r(key)\n    }\n  });\n}\n//lang.json 是语言包目录，需要排除在外\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\n\nclass Intl {\n  locale = 'en'\n  constructor(){\n    makeObservable(this,{\n      locale : observable,\n      setLocale : action,\n      dict : computed,\n      localeLabel: computed\n    })\n    const language = navigator.language\n    const prefix = 'en' //language && language.split('-')[0]\n    const locale = restoreLocale()\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\n      this.locale = locale\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\n      this.locale = prefix\n    }\n  }\n\n  setLocale(locale){\n    if(locale && supportedCatalog[locale]){\n      this.locale = locale;\n      storeLocale(locale)\n    }\n  }\n\n  get(page,key){\n    return cache[this.locale][page][key]\n  }\n\n  get dict(){         \n    return cache[this.locale]\n  }\n\n  get localeLabel(){\n    const label = supportedCatalog[this.locale];\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \n  }\n}\n\nexport default new Intl();","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked,openConfigListCache, unlock } from \"../lib/web3js/index\";\nimport config from '../config.json'\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\nimport version from './Version'\nimport apiProxy from './ApiProxy'\n\nclass Wallet {\n  \n  detail = {}\n  defaultNw = {}\n  \n  constructor(){\n    makeAutoObservable(this,{\n      detail : observable,\n      defaultNw : observable,\n      setDefaultNw : action,\n      setDetail : action,\n      supportV2 : computed,\n      supportV1 : computed,\n      supportAllVersion : computed,\n      supportChain : computed,\n      supportInnocation : computed,\n      supportOpen : computed,\n      balance : computed\n    })\n  }\n\n  supportWeb3 = () => !!window.ethereum\n\n  isConnected = () => !!this.detail.account;\n\n\n  async isApproved(pool,bTokenId){\n    if(this.detail.chainId && this.supportChain){\n      if(version.isOpen){\n        await openConfigListCache.update()\n      }\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\n      this.detail.isApproved = isApproved;\n      this.setDetail(this.detail)\n      return isApproved;\n    }\n  }\n\n  approve = async (pool,bTokenId) => {\n    if(this.detail.chainId){\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\n      return approved\n    }\n  }\n\n  connect =  async () => {\n    const data = await apiProxy.request('connectWallet')\n    return new Promise(async (resolve,reject) => {\n      if(data){\n        const {chainId,account} = data\n        const wallet = await this.loadWalletBalance(chainId,account);      \n        resolve(wallet)\n      } else {\n        reject(null)\n      }\n    })\n  }\n\n  switchNetwork = async (network) => {\n    if(!this.isConnected()){\n      this.connect();\n    }\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\n    network = chainInfo[parseInt(network.id)]\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId}],\n      });\n    } catch (error) {\n      // alert('err' + JSON.stringify(error))\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{chainId,...network.metamask}],\n          });\n        } catch (addError) {\n          console.error('err' ,addError)\n        }\n      }\n    }\n  }\n\n  loadWalletBalance = async (chainId,account) => {\n    if(version.isOpen){\n      await openConfigListCache.update()\n    }\n    const data = await apiProxy.request('getUserWalletBalance',[chainId,account]).catch(e => console.log('wallet account is not exist'))\n    const detail = {chainId,account,balance : data.balance,unit : data.unit,formatBalance : formatBalance(data.balance)}\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    \n    if(chainInfo[chainId]){\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\n      storeChain(chainInfo[chainId])\n    }\n    this.setDetail(detail)\n    return detail;\n  }\n\n  get = () => {\n    return this.detail;\n  }\n\n  setDetail(detail){\n    this.detail = detail;\n  }\n\n  setDefaultNw(network){\n    this.defaultNw = network\n  }\n\n  refresh(){\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\n  }\n\n  isSupportChain(isOptions){\n    const chainId = this.detail.chainId\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    if(isOptions){\n      return chainInfo[chainId] && chainInfo[chainId]['supportOptions']\n    } else {\n      return this.supportChain\n    }\n  }\n\n  get supportV2() {\n    return this.detail.supportV2\n  }\n\n  get supportV1(){\n    return this.detail.supportV1;\n  }\n\n  get supportAllVersion(){\n    return this.detail.supportV1 && this.detail.supportV2\n  }\n\n  get supportChain(){\n    return this.detail.supported\n  }\n\n  get supportInnovation(){\n    return this.detail.supportInnovation || !this.isConnected()\n  }\n\n  get supportOpen(){\n    return this.detail.supportOpen || !this.isConnected()\n  }\n\n  get balance(){\n    return this.detail.balance\n  }\n\n  get balanceUnit(){\n    return this.detail.unit && this.detail.unit.toUpperCase()\n  }\n\n\n}\n\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\nimport { equalIgnoreCase } from \"../utils/utils\";\nimport webSocket from \"./WebSocket\";\n\nclass Oracle {\n  symbol = null\n  timeType = 'min'\n  index = 0.00\n  kData = []\n  ws = null\n  paused = false;\n  listeners = {}\n\n  constructor(){\n    makeAutoObservable(this,{\n      index : observable,\n      kData : observable,\n      setIndex : action,\n    })\n  }\n\n  load(symbol,timeType = 'min'){    \n    if(this.symbol === null || (this.symbol !== symbol && this.timeType !== timeType)) {\n      webSocket.subscribe('get_kline_update',{symbol,time_type : 'min'},data => {\n        if(!this.paused && equalIgnoreCase(symbol,data.symbol)) {\n          this.setIndex(data.close)\n          for(const key of Object.keys(this.listeners)){\n            if(typeof this.listeners[key] === 'function'){\n              this.listeners[key](data)\n            }\n          }\n        }\n      })\n    }\n\n    this.setSymbol(symbol)\n    this.setTimeType(timeType);\n  }\n\n  addListener(id,listener){\n    if(!this.listeners[id]) {\n      this.listeners[id] = listener\n    }    \n  }\n\n  unsubscribeBars(symbol){\n    symbol && webSocket.unsubscribe('un_get_kline',{symbol : symbol,time_type : 'min'});\n  }\n\n\n  resume(){\n    this.setPause(false)\n  }\n\n  pause(){\n    this.setPause(true)\n  }\n\n  clean(){\n    this.unsubscribeBars(this.symbol);\n    this.symbol = null\n  }\n\n  setIndex(index){\n    if(!this.paused) {\n      this.index = index;\n    }\n  }\n\n  setSymbol(symbol){\n    this.symbol = symbol\n  }\n\n  setTimeType(timeType){\n    this.timeType = timeType;\n  }\n  setPause(paused){\n    this.paused = paused\n  }\n}\n\nexport default Oracle","import { getPositionInfo ,bg,getPositionInfos, DeriEnv} from \"../lib/web3js/index\"\nimport { eqInNumber, getDefaultNw, greaterThan } from '../utils/utils';\nimport type from \"./Type\";\nimport ApiProxy from \"./ApiProxy\";\n\nexport default class Position {\n\n   callback = () => {}\n   callbackALL = ()=>{}\n   wallet = null;\n   pool = null\n   counter = 0\n \n   mockPositionInfo = {\n    averageEntryPrice: \"\",\n    liquidationPrice: \"\",\n    margin: \"20000\",\n    marginHeld: \"10068.26538\",\n    marginHeldBySymbol : \"293.16152\",\n    unrealizedPnl: \"3.1311\",\n    volume: \"800\",\n    premiumFundingAccrued:'',\n    deltaFundingAccrued:'',\n    strikePrice:0,\n    timePrice:0,\n    volatility:0,\n    isCall:false,\n   }\n\n   async load(wallet,pool,callback){\n     this.wallet= wallet; \n     this.pool = pool\n     if(callback){\n      this.callback = callback\n     }\n     if(pool && pool.address){\n      const chainId = wallet && wallet.detail ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\n      const account = wallet && wallet.detail ? wallet.detail.account : null;\n      const position = await ApiProxy.request('getPositionInfo',[chainId,pool.address,account,pool.selectedSymbol.symbolId])\n      if(position){\n        if(this.callback){\n          this.callback(position)\n        }\n      }\n      return position;\n     }\n   }\n\n   async loadAll(wallet,pool,callback){\n    this.wallet= wallet; \n    this.pool = pool\n    if(callback){\n      this.callbackALL = callback\n    }\n    if(pool && pool.address){\n      const chainId = wallet && wallet.detail ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\n      const account = wallet && wallet.detail ? wallet.detail.account : null;\n      let positions = await ApiProxy.request('getPositionInfos',[chainId,pool.address,account,pool.selectedSymbol.symbolId])\n      if(positions.length) {\n        positions = positions.map(item => this.wrapperForDisplay(item))\n      }\n      if(positions){\n        if(this.callbackALL){\n          this.callbackALL(positions)\n        }\n      }\n      return positions;\n    }\n   }\n   \n   wrapperForDisplay(item){\n    item.balanceContract = bg(item.margin).plus(item.unrealizedPnl).toString()\n    item.direction = (+item.volume) > 0 ? 'Buy' : (!item.volume || eqInNumber(item.volume, 0) || !item.volume ? '--' : 'Sell')\n    if(item.direction === 'Buy') {\n      item.directionColor = 'green'\n    } else {\n      item.directionColor = 'red'\n    }\n    if(greaterThan(item.unrealizedPnl,0)){\n      item.unrealizedPnlColor = 'green'\n    } else {\n      item.unrealizedPnlColor = 'red'\n    }\n\n    if(greaterThan(item.fundingFee,0)) {\n      item.fundingFeeColor = 'green'\n    } else {\n      item.fundingFeeColor = 'red'\n    }\n\n    if(item.volume){\n      item.notional = bg(Math.abs(item.volume)).times(item.markPrice).toString();\n      item.notionalColor = 'gray'\n    }\n    if(item.markPrice && item.averageEntryPrice){\n      if(greaterThan(item.volume,0)) {\n        item.unrealizedPnlRate = bg(item.markPrice).minus(item.averageEntryPrice).div(item.averageEntryPrice).times(100).toString();\n      } else {\n        item.unrealizedPnlRate = bg(item.averageEntryPrice).minus(item.markPrice).div(item.averageEntryPrice).times(100).toString();\n      }\n      item.unrealizedPnlRateColor = 'gray'\n    }\n    return item;\n   }\n\n   startAll(){\n    this.paused = false;\n    if(!this.started){\n      this.runInAction(async () => await this.loadAll(this.wallet,this.pool))\n    }\n    this.started = true\n  }\n\n   start(){   \n    this.paused = false;\n    if(!this.startedAll){\n      this.runInAction(async () => await this.load(this.wallet,this.pool))\n    }\n    this.startedAll = true\n   }\n\n   runInAction(action){\n    this.timer = window.setTimeout(async () => {\n      if(!this.paused){\n        const position = await action();\n        if(position) {\n          this.runInAction(action);\n        }\n      }\n    },3000)\n   }\n\n   pause(){\n    this.paused = true\n   }\n\n   resume(){\n    this.clean();\n    this.start(this.callback)\n   }\n\n   clean(){\n     this.started = false;\n     this.startedAll = false;\n     this.paused = false;\n     this.timer = null;\n   }\n \n}","import { getSpecification, DeriEnv } from \"../lib/web3js/index\";\nimport { makeObservable, observable, action, computed } from \"mobx\";\nimport Intl from \"./Intl\";\nimport version from \"./Version\";\nimport type from \"./Type\";\nimport { getDefaultNw } from \"../utils/utils\";\nimport ApiProxy from \"./ApiProxy\";\n\nexport default class Contract {\n  info = {\n    bTokenSymbol:[\"BUSD\"],\n    symbol:'BTCUSD',\n    multiplier:'0.0001',\n    fundingRateCoefficient:'0.0000025',\n    deltaFundingCoefficient:'0.2',\n    minInitialMarginRatio:0.1,\n    initialMarginRatio:0.1,\n    minMaintenanceMarginRatio:0.05,\n    maintenanceMarginRatio:0.05,\n    feeRatio:0.0005,\n    underlier :'',\n    strike:0,\n    optionType:'C',\n    bTokenSymbolDisplay : ['BUSD']\n  }\n  // constructor(){\n  //   makeObservable(this,{\n  //     info : observable,\n  //     setInfo : action,\n  //     bTokenSymbolDisplay : computed\n  //   })\n  // }\n\n  async load(wallet,pool){\n    if(pool){\n      const chainId = wallet && wallet.isConnected() ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\n      const spec = await ApiProxy.request('getSpecification',[chainId,pool.address,pool.selectedSymbol.symbolId]);\n      spec.bTokenSymbol = this.bTokenSymbolDisplay(spec)\n      if(type.isOption && spec && spec.symbol){\n        Object.assign(spec,this.extractBySymbol(spec))\n      }\n      this.setInfo(spec)\n    }\n    return this.info\n  }\n\n  setInfo(info){\n    this.info = info\n  }\n\n  extractBySymbol(spec){\n    const symboleInArray = spec.symbol.split('-')\n    const underlier = symboleInArray[0]\n    const strike = symboleInArray[1]\n    const optionType = symboleInArray[2]\n    return {\n      underlier,\n      strike,\n      optionType\n    }\n  }\n\n  bTokenSymbolDisplay(spec){\n    if(version.isV1 || version.isV2Lite || type.isOption || version.isOpen || (version.isV2 && !Array.isArray(spec.bTokenSymbol))){\n      return [spec.bTokenSymbol];\n    }\n    return spec.bTokenSymbol;\n  }\n}","import { getTradeHistory } from \"../lib/web3js/index\";\nimport ApiProxy from \"./ApiProxy\";\n\n\nexport default class History {\n\n   async load(wallet,pool,isOptions){\n      if(wallet && wallet.isSupportChain(isOptions) && wallet.detail.chainId && pool && pool.address){\n         const all = await ApiProxy.request('getTradeHistory',[wallet.detail.chainId,pool.address,wallet.detail.account,pool.selectedSymbol.symbolId]); \n         return all;\n      } else {\n         return []\n      }\n   }\n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport { OPTION, VERSION_V2_OPEN, VERSION_V2, VERSION_V2_LITE } from '../utils/Constants'\nimport apiProxy from './ApiProxy'\nimport { isCakeLP, isSushiLP, getMarkpriceSymbol } from '../utils/utils'\nimport {bg} from '../lib/web3js/index'\nimport {sortOptionSymbols } from \"../lib/web3js/index\";\n\nconst columnMap = {\n  pool: 'address'\n}\nexport default class Pool {\n  chainId = ''\n  chain = ''\n  zone = ''\n  address = ''\n  version = ''\n  type = ''\n  isLp = ''\n  bTokenSymbol = ''\n  symbols = []\n  bTokens = []\n  decimals = 2\n  markpriceSymbolFormat = ''\n  currentSymbol  = null\n\n  constructor(data) {\n    makeObservable(this, {\n      chainId: observable,\n      chain: observable,\n      zone: observable,\n      address: observable,\n      symbols: observable,\n      bTokens: observable,\n      bTokenSymbol:observable,\n      isLp: observable,\n      decimals : observable,\n      markpriceSymbolFormat : observable,\n      currentSymbol : observable,\n      setCurrentSymbol : action,\n      setMarkpriceSymbolFormat : action,\n      setAddress : action,\n      setChain : action,\n      setChainId : action,\n      setZone : action,\n      setVersion : action,\n      setType : action,\n      setSymbols : action,\n      setBTokens : action,\n      setDecimals : action,\n      selectedSymbol : computed,\n      isFuture : computed,\n      isOption : computed,\n      isInno : computed,\n      isOpen : computed\n    })\n    this.init(data)\n  }\n\n  init(data = {}) {\n    const keys = Object.keys(data);\n    for (const k in keys) {\n      const name = columnMap[keys[k]] ? columnMap[keys[k]] : keys[k];\n      if (this.hasOwnProperty(name) && data[keys[k]]) {\n        const attr = name.replace(/^\\S/, s => s.toUpperCase())\n        const method = `set${attr}`        \n        if(this[method]){\n          this[method].call(this,data[keys[k]])\n        } else {\n          this[name] = data[keys[k]]\n        }\n      }\n    }\n  }\n\n  async getPoolInfo(wallet, pool) {\n    let params = [pool.chainId, pool.address]\n    let apyInfo = await apiProxy.request('getPoolInfoApy', params);\n    let liq = await apiProxy.request('getPoolLiquidity', params);\n    const detail = {\n      liquidity: liq.totalValue || liq.totalLiquidity,\n      apy: ((+apyInfo.maxApy) * 100).toFixed(2),\n      bTokensApy: apyInfo.bTokens,\n      bTokensLiq:liq.bTokens,\n    }\n    if (pool.isLp) {\n      let lpApy = await apiProxy.request('getLpPoolInfoApy', params)\n      const apy = ((+lpApy.apy2) * 100).toFixed(2);\n      detail['lpApy'] = apy\n      detail['isCakeLP'] = isCakeLP(pool.address)\n      detail['isSushiLP'] = isSushiLP(pool.address)\n    }\n    return detail\n  }\n\n  async getIsStaked(wallet,pool){\n    let params = [wallet.detail.chainId,pool.address,wallet.detail.account]\n    let bool = await apiProxy.request('getUserStakeInfo',params)\n    return bool\n  }\n\n  async getLiquidityInfo(wallet, address, version, isLp, bTokenId) {\n    let params = [wallet.detail.chainId, address, wallet.detail.account, bTokenId]\n    let info = null;\n    let res;\n    if (isLp) {\n      res = await apiProxy.request('getLpLiquidityInfo', params)\n    } else {\n      res = await apiProxy.request('getLiquidityInfo', params)\n    }\n    const shares = res.shares ? bg(res.shares) : bg(0)\n    if (['clp','slp','v1','v2_lite','v2_lite_open','option'].includes(version)) {\n      const total = shares.isNaN() ? bg(0) : shares.multipliedBy(res.shareValue) \n      info = {\n        total: res.poolLiquidity,\n        shareValue: res.shareValue,\n        percent: res.poolLiquidity > 0 ? total.dividedBy(res.poolLiquidity).multipliedBy(100).toFixed(2) : 0,\n        shares: shares.toFixed(2),\n        formatShares: shares.toFixed(2),\n        totalShares: bg(shares).toString(),\n        values: total.toFixed(4),\n      }\n    } else {\n      info = {\n        total: res.poolLiquidity,\n        pnl: (+res.pnl).toFixed(2),\n        swappedPnl: (+res.swappedPnl).toFixed(2),\n        percent: res.poolLiquidity > 0 ? shares.dividedBy(res.poolLiquidity).multipliedBy(100).toFixed(2) : 0,\n        shares: shares.toFixed(2),\n        formatShares: shares.toFixed(2),\n        totalShares: bg(shares).toString(),\n      }\n    }\n    return info\n  }\n\n  setChainId(chainId) {\n    this.chainId = chainId;\n  }\n\n  setChain(chain) {\n    this.chain = chain\n  }\n\n  setZone(zone) {\n    this.zone = zone;\n  }\n\n  setAddress(address) {\n    this.address = address;\n  }\n\n  setType(type) {\n    this.type = type\n  }\n\n  setSymbols(symbols) {\n    symbols = symbols.map(s => {\n      const tokenInfo = this.bTokens.length > 0 ? this.bTokens[0] : {}\n      s.symbolDisplay = this.isOpen || this.isInno ? `${s.symbol}/${tokenInfo.bTokenSymbol}` : s.symbol\n      s.address = this.address\n      s.version = this.version\n      if (!this.isOpen) {\n        s.markpriceSymbolFormat = getMarkpriceSymbol(this)\n      } \n      return s;\n    })\n    if(this.type === OPTION){\n      this.symbols = sortOptionSymbols(symbols)\n    } else {\n      this.symbols = symbols\n    }\n  }\n\n\n  setCurrentSymbol(symbol){\n    this.currentSymbol = symbol\n  }\n\n\n  setMarkpriceSymbolFormat(markpriceSymbolFormat){\n    this.markpriceSymbolFormat = markpriceSymbolFormat\n  }\n\n  setDecimals(decimals){\n    this.decimals = decimals\n  }\n\n\n  setVersion(version){\n    this.version = version\n  }\n\n  setBTokens(bTokens){\n    this.bTokens = bTokens;\n  }\n\n  get selectedSymbol(){\n    if(this.currentSymbol){\n      return this.currentSymbol\n    } else {\n      return this.symbols.length > 0 ? this.symbols[0] : {}\n    }\n  }\n\n  get isFuture(){\n    return this.type === VERSION_V2;\n  }\n\n  get isOption(){\n    return this.type === OPTION;\n  }\n\n  get isInno(){\n    return this.version === VERSION_V2_LITE\n  }\n\n  get isOpen(){\n    return this.version === VERSION_V2_OPEN\n  }\n\n  \n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Pool from './Pool'\nimport apiProxy from './ApiProxy'\nimport { FUTURE, FUTURE_INNO, OPTION,FUTURE_OPEN } from \"../lib/web3js/shared\";\nexport default class PoolManager {\n  pools = []\n  lpPools = []\n  constructor(){\n    makeObservable(this,{\n      pools : observable,\n      setPools : action,\n      setLpPools : action,\n      v2Pools : computed,\n      innoPools : computed,\n      openPools : computed,\n      optionsPools : computed,\n      ammPools : computed,\n      futurePools : computed\n    })      \n  }\n\n  async load(){\n    const pools = await apiProxy.request('getPoolConfigList');\n    this.loadDoubleMingingPool()\n    const mapPools = pools.map(pool => new Pool(pool))\n    this.setPools(mapPools)\n    return mapPools;\n  }\n\n  async loadByType(type){\n    const pools = await apiProxy.request('getPoolConfigList');\n    return pools.filter(p => p.type === type).map(pool => new Pool(pool))\n  }\n\n  async loadDoubleMingingPool(){\n    const pools = await apiProxy.request('getLpConfigList');\n    const mapPools = pools.map(pool => new Pool(pool))\n    this.setLpPools(mapPools)\n    return mapPools;\n  }\n\n  setPools(pools){\n    this.pools = pools;\n  }\n  setLpPools(pools){\n    this.lpPools = pools\n  } \n\n  get ammPools(){\n    return this.pools.filter(p => p.type === 'option' || p.type === 'future')\n  }\n\n  get v2Pools(){\n    return this.pools.filter(p => p.version === FUTURE)\n  }\n\n  get innoPools(){\n    return this.pools.filter(p => p.version === FUTURE_INNO)\n  }\n\n  get optionsPools(){\n    return this.pools.filter(p => p.version === OPTION)\n  }\n  \n  get openPools(){\n    return this.pools.filter(p => p.version === FUTURE_OPEN)\n  }\n\n  get futurePools(){\n    return this.pools.filter(p => p.type === 'future')\n  }\n\n  \n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Oracle from \"./Oracle\";\nimport Position from \"./Position\";\nimport Contract from \"./Contract\";\nimport History from './History'\nimport Config from \"./Config\";\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol, getMarkpriceSymbol, getDefaultNw, percentTimesAmount, precision } from \"../utils/utils\";\nimport { getFundingRate, priceCache, DeriEnv, getVolatility, sortOptionSymbols } from \"../lib/web3js/index\";\nimport { bg } from \"../lib/web3js/index\";\nimport Intl from \"./Intl\";\nimport version from './Version'\nimport type from './Type'\nimport Type from \"./Type\";\nimport PoolManager from \"./PoolManager\";\nimport ApiProxy from \"./ApiProxy\";\nimport Pool from \"./Pool\";\nimport { OPTION, FUTURE, BUY,TRADE_ENTRY_VOLUME_STATUS, TRADE_ENTRY_DOLLAR_STATUS, TRADE_ENTRY_PERCENTAGE_STATUS, TRADE_ENTRY_SLIDER_STATUS, SELL, TRADING_APPEND_POSITION_STATUS, TRADING_CLOSE_POSITION_STATUS, TRADING_CREATE_POSITION_STATUS } from \"../utils/Constants\";\n\n/**\n * 交易模型\n * 关联对象\n * 1. chain\n * 2. Oracle\n * 3. position\n * 4. contract\n * 5. history\n * 计算\n * 1. dynamic balance\n * 2. available blance\n * 响应事件\n * 1. chain change\n * 2. chain’s symbol changed\n * 3. index update\n * 4. volum change\n * 5. margin change\n * 输出\n * 1. dynamic balance\n * 2. margin\n * 3. available balance\n * 4. volume\n * 5. specs\n * 6. spec\n * 7. position\n * 8. contract\n * 9. fundingRate\n */\n\nexport default class Trading {\n  version = null;\n  wallet = null;\n  type = null;\n  index = ''\n  markPrice = ''\n  volume = ''\n  priceDecimals = 2\n  paused = false\n  slideIncrementMargin = 0\n  position = {}\n  positions = []\n  contract = {}\n  fundingRate = {}\n  volatility = ''\n  history = []\n  userSelectedDirection = 'long'\n  supportChain = true\n  optionsConfigs = {}\n  pools = []\n  pool = {}\n  closeOnly = false\n  percentageAmount = ''\n  direction = ''\n  entryStatus = TRADE_ENTRY_VOLUME_STATUS\n  inputDollarValue = ''\n  inputSliderValue = ''\n  constructor() {\n    makeObservable(this, {\n      index: observable,\n      markPrice: observable,\n      volume: observable,\n      percentageAmount: observable,\n      slideIncrementMargin: observable,\n      fundingRate: observable,\n      volatility: observable,\n      position: observable,\n      positions: observable,\n      history: observable,\n      contract: observable,\n      priceDecimals: observable,\n      userSelectedDirection: observable,\n      supportChain: observable,\n      pools : observable,\n      pool : observable,\n      closeOnly : observable,\n      direction : observable,\n      entryStatus : observable,\n      inputDollarValue : observable,\n      inputSliderValue : observable,\n      setWallet: action,\n      setCloseOnly : action,\n      setPriceDecimals: action,\n      setIndex: action,\n      setMarkPrice: action,\n      setContract: action,\n      setPosition: action,\n      setPositions: action,\n      setVolume: action,\n      setUserSelectedDirection: action,\n      setFundingRate: action,\n      setVolatility: action,\n      setHistory: action,\n      // setSlideMargin: action,\n      setDirection : action,\n      setEntryStatus : action,\n      setInputDollarValue : action,\n      setInputSliderValue : action,\n      // amount: computed,\n      fundingRateTip: computed,\n      optionFundingRateTip: computed,\n      initialMarginRatioTip: computed,\n      maintenanceMarginRatioTip: computed,\n      TransactionFeeTip: computed,\n      dpmmFundingRateTip: computed,\n      fundingCoefficientTip: computed,\n      rateTip: computed,\n      multiplierTip: computed,\n      TotalNetPositionTip: computed,\n      // direction: computed,\n      // volumeDisplay: computed,\n      isNegative: computed,\n      isPositive: computed,\n      symbols : computed,\n      dailyFunding : computed,\n      netPositionNutual : computed,\n      transactionFee : computed,\n      marginReqs : computed,\n      curSymbol : computed,\n      maxEntryVolume : computed,\n      minEntryVolume : computed,\n      // minEntryDollar : computed,\n      curTradeUnit : computed,\n      minTradeScaleDecimal : computed,\n      dollarValue : computed,\n      maxAvailableMargin : computed,\n      positionTradingStatus : computed,\n      curSliderValue : computed,\n      sliderRailColor : computed,\n      accountInfo : computed,\n      transactionSummary : computed,\n      inputHelpText : computed,\n      directionDisplay : computed\n    })\n    this.indexOracle = new Oracle();\n    this.markOracle = new Oracle();\n    this.positionInfo = new Position()\n    this.contractInfo = new Contract();\n    this.historyInfo = new History();\n    this.poolManager = new PoolManager();\n  }\n\n  /**\n   * 初始化\n   * wallet and version changed will init\n   */\n  async init(wallet, finishedCallback) {\n    const isOption = Type.isOption\n    const type = isOption ? OPTION : FUTURE\n    const pools = await this.poolManager.loadByType(type);\n    if (wallet.isConnected()) {\n      this.setWallet(wallet);\n      this.setPools(pools.filter(p => eqInNumber(wallet.detail.chainId,p.chainId)))\n      const defaultPool = this.pools.length > 0 ? this.pools[0] : new Pool()\n      this.setPool(defaultPool);\n    } else if (!wallet.isConnected() || !wallet.supportWeb3()) {\n      this.setPools(pools.filter(p => eqInNumber(getDefaultNw(DeriEnv.get()).id,p.chainId)))\n      const defaultPool = this.pools.length > 0 ? this.pools[0] : new Pool()\n      this.setPool(defaultPool)\n    }\n    this.loadByPool(this.wallet, this.pool, true, finishedCallback, isOption)\n  }\n\n  async onSymbolChange(selected, finishedCallback, isOption) {\n    const pool = this.pools.find(pool => pool.address === selected.address)\n    //v1 只需要比较池子地址，v2 需要比较symbolId\n    const changed = version.isV1 \n          ? selected.address !== this.pool.address \n          : (pool.address !== selected.address || selected.symbolId !== this.pool.symbolId)\n    //设置用户选择的symbol\n    pool.setCurrentSymbol(pool.symbols.find(info => info.symbolId === selected.symbolId))\n    // this.setCurrentSymbol(selected.symbol)\n    this.onChange(pool, changed, finishedCallback, isOption)\n  }\n\n  async onChange(pool, changed, finishedCallback, isOption) {\n    if (pool) {\n      this.clean();      \n      this.setPool(pool)\n      this.loadByPool(this.wallet, pool, changed, finishedCallback, isOption);\n    } else {\n      finishedCallback && finishedCallback()\n    }\n  }\n\n  async loadByPool(wallet, pool, symbolChanged, finishedCallback, isOption) {\n    //切换指数\n    if (symbolChanged && pool) {\n      this.indexOracle.addListener('indexPrice', data => {\n        this.setIndex(data.close)\n      })\n      this.markOracle.addListener('markPrice',data => {\n        this.setMarkPrice(data.close)\n      })\n    }\n    if (pool) {\n      Promise.all([\n        this.positionInfo.load(wallet, pool, position => {\n          this.setPosition(position)\n          this.syncFundingRate(wallet, pool, isOption)\n          type.isOption && this.syncVolatility(wallet, pool);\n        }),\n        this.contractInfo.load(wallet, pool, isOption),\n        this.loadFundingRate(wallet, pool, isOption),\n        this.positionInfo.loadAll(wallet, pool, positions => this.setPositions(positions)),\n      ]).then(results => {\n        if (results.length === 4) {\n          if(results[0]) {\n            this.setIndex(results[0].price)\n            this.setMarkPrice(results[0].markPrice);\n            this.setPosition(results[0]);\n          }\n          results[1] && this.setContract(results[1]);\n          results[2] && this.setFundingRate(results[2]);\n          results[3] && this.setPositions(results[3]);\n        }\n      }).finally(e => {\n        finishedCallback && finishedCallback()\n        // this.indexOracle.load(getFormatSymbol(pool.symbol.split('-')[0]))\n        // this.markOracle.load(getFormatSymbol(pool.markpriceSymbolFormat || `${pool.symbol}-MARKPRICE`))\n        this.positionInfo.start()\n        this.positionInfo.startAll();\n        this.resume();\n      })\n    } else {\n      finishedCallback && finishedCallback()\n    }\n    const histories = await this.historyInfo.load(wallet, pool, isOption)\n    this.setHistory(histories);\n  }\n\n  refreshCache() {\n    const pool  = this.pool;\n    const symbol = type.isOption ? pool.symbol.split('-')[0] : pool.symbol\n    priceCache.clear();\n    priceCache.update(pool, symbol)\n  }\n\n\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\n  getDefaultConfig(configs = [], wallet) {\n    let defaultConfig = null;\n    if (configs.length > 0) {\n      const fromStore = this.getFromStore();\n      if (fromStore && eqInNumber(wallet.detail.chainId, fromStore.chainId)) {\n        defaultConfig = fromStore;\n      }\n      if (defaultConfig) {\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\n        if (pos === -1) {\n          defaultConfig = configs[0];\n        }\n      } else {\n        defaultConfig = configs[0]\n      }\n    }\n    return defaultConfig;\n  }\n\n  //存起来\n  store(config) {\n    storeConfig(version.current, config)\n  }\n\n  getFromStore() {\n    return getConfigFromStore(version.current)\n  }\n\n  async syncFundingRate() {\n    //资金费率和仓位同步\n    const fundingRate = await this.loadFundingRate(this.wallet, this.pool)\n    if (fundingRate) {\n      this.setFundingRate(fundingRate)\n    }\n  }\n\n  async syncVolatility(wallet, pool) {\n    const chainId = wallet && wallet.isConnected() ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\n    if (pool) {\n      const volatility = await ApiProxy.request('getVolatility',[chainId, pool.address, pool.selectedSymbol.symbolId]);\n      this.setVolatility(volatility)\n    }\n  }\n\n  async refresh() {\n    this.pause()\n    this.positionInfo.load(this.wallet, this.pool, position => {\n      this.setPosition(position);\n      this.syncFundingRate();\n      type.isOption && this.syncVolatility(this.wallet, this.pool);\n    });\n    this.positionInfo.loadAll(this.wallet, this.pool, positions => this.setPositions(positions))\n    this.syncFundingRate();\n    type.isOption && this.syncVolatility(this.wallet, this.pool);\n    this.wallet && this.wallet.isConnected() && this.wallet.loadWalletBalance(this.wallet.detail.chainId, this.wallet.detail.account)\n    const history = await this.historyInfo.load(this.wallet, this.pool)\n    if (history) {\n      this.setHistory(history)\n    }\n    this.positionInfo.start();\n    this.positionInfo.startAll();\n    this.setInputDollarValue('')\n    this.setInputSliderValue('')\n    this.setPercentageAmount('')\n    this.setVolume('')\n    this.setCloseOnly(false);\n    this.resume();\n  }\n\n  /**\n   * 暂停实时读取index和定时读取position\n   */\n  pause() {\n    this.setPaused(true)\n    this.indexOracle.pause();\n    this.markOracle.pause();\n    this.positionInfo.pause();\n  }\n\n  /**\n   * 恢复读取\n   */\n  resume() {\n    this.setPaused(false)\n    this.indexOracle.resume();\n    this.markOracle.resume();\n    this.positionInfo.resume();\n  }\n\n  setWallet(wallet) {\n    this.wallet = wallet;\n  }\n\n  setPools(pools){\n    this.pools = pools;\n  }\n\n  setPool(pool){\n    this.pool = pool\n  }\n\n  setPriceDecimals(pool) {\n    if (pool && pool.decimals) {\n      this.priceDecimals = pool.decimals\n    } else {\n      this.priceDecimals = 2\n    }\n  }\n\n  setIndex(index) {\n    this.index = index;\n  }\n\n  setMarkPrice(markPrice) {\n    this.markPrice = markPrice;\n  }\n\n  setPosition(position) {\n    if (position) {\n      this.position = position\n    }\n  }\n\n  setPositions(positions) {\n    if (positions) {\n      this.positions = positions\n    }\n  }\n\n  setContract(contract) {\n    this.contract = contract\n  }\n\n  setHistory(history) {\n    this.history = history\n  }\n\n  setFundingRate(fundingRate) {\n    this.fundingRate = fundingRate;\n  }\n\n  setVolatility(volatility) {\n    this.volatility = volatility\n  }\n\n  setVolume(volume) {\n    this.setEntryStatus(TRADE_ENTRY_VOLUME_STATUS)\n    this.volume = volume;\n  }\n\n  setPercentageAmount(percentage){\n    this.setEntryStatus(TRADE_ENTRY_PERCENTAGE_STATUS);\n    this.percentageAmount = percentage\n    if(percentage){\n      const marginUsed = percentTimesAmount(percentage,this.maxAvailableMargin);\n      const volume = bg(marginUsed).div(this.markPrice).toFixed(this.minTradeScaleDecimal);\n      this.setVolume(volume)\n    } \n  }\n\n  setInputDollarValue(dollarValue){\n    this.setEntryStatus(TRADE_ENTRY_DOLLAR_STATUS);\n    this.inputDollarValue = dollarValue\n    const volume = bg(dollarValue).div(this.markPrice).toFixed(this.minTradeScaleDecimal)\n    this.setVolume(volume)\n  }\n\n  setInputSliderValue(value){\n    this.setEntryStatus(TRADE_ENTRY_SLIDER_STATUS);\n    this.inputSliderValue = value\n    const volume = bg(value).div(this.markPrice).toFixed(this.minTradeScaleDecimal);\n    this.setVolume(volume)\n  }\n\n  \n\n  setPaused(paused) {\n    this.paused = paused\n  }\n\n  setUserSelectedDirection(direction) {\n    this.userSelectedDirection = direction\n  }\n\n  setCloseOnly(closeOnly){\n    this.closeOnly = closeOnly\n  }\n\n  setDirection(direction){\n    this.direction = direction\n  }\n\n  setEntryStatus(status){\n    this.entryStatus = status\n  }\n\n  groupConfigBySymbol(symbols = []) {\n    return symbols.reduce((total, config) => {\n      const symbol = config.symbol.split('-')[0]\n      if (!total[symbol]) {\n        total[symbol] = []\n      }\n      total[symbol].push(config)\n      return total;\n    }, [])\n  }\n\n  // setSlideMargin(slideIncrementMargin) {\n  //   if (slideIncrementMargin !== '') {\n  //     this.slideIncrementMargin = slideIncrementMargin\n  //     const position = this.position;\n  //     const price = position.price || this.index\n  //     const increment = slideIncrementMargin - position.marginHeld\n  //     let MarginRatio = type.isOption ? this.contract.initialMarginRatio : this.contract.minInitialMarginRatio;\n  //     let volume = bg(increment).div(bg(bg(price).times(bg(this.contract.multiplier).times(bg(MarginRatio))))).toString()\n  //     volume = +volume * +this.contract.multiplier\n  //     let multiplier = this.contract.multiplier\n  //     if (multiplier <= 1) {\n  //       let index = this.contract.multiplier.indexOf('.')\n  //       let num = this.contract.multiplier.slice(index);\n  //       let length = num.length\n  //       let value = volume.toString()\n  //       if (value.indexOf(\".\") !== -1) {\n  //         value = value.substring(0, value.indexOf(\".\") + length)\n  //       }\n  //       this.setVolume(value)\n  //     } else {\n  //       let length = multiplier.length - 1\n  //       let value = parseInt(volume).toString()\n  //       let num = value.slice(-length);\n  //       value = value.slice(0, -length)\n  //       num = num.replace(/\\d/gi, '0')\n  //       value = value + num\n  //       this.setVolume(value)\n  //     }\n\n  //   }\n  // }\n\n  //资金费率\n  async loadFundingRate(wallet, pool, isOption) {\n    if (pool) {\n      const chainId = wallet && wallet.isConnected() && wallet.isSupportChain(isOption) ? wallet.detail.chainId : getDefaultNw(DeriEnv.get()).id\n      if (pool) {\n        const res = await ApiProxy.request('getFundingRate',[chainId, pool.address, pool.selectedSymbol.symbolId]).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\n        return res;\n      }\n    }\n  }\n\n\n  doTransaction(){\n    const volume = this.direction === SELL ? -this.volume : this.volume\n    return ApiProxy.request('tradeWithMargin',[this.wallet.detail.chainId, this.pool.address, this.wallet.detail.account, volume, this.pool.selectedSymbol.symbolId],{includeResponse : true})\n  }\n\n  clean() {\n    this.pause();\n    this.indexOracle.clean();\n    this.markOracle.clean();\n    this.positionInfo.clean();\n    this.version = null;\n    this.pool = null;\n    this.markPrice = ''\n    this.index = ''\n    this.volume = ''\n    this.fundingRate = {}\n    this.volatility = ''\n    this.position = {}\n    this.positions = []\n    this.contract = {}\n    this.history = []\n    // this.userSelectedDirection = 'long'\n  }\n\n  // get volumeDisplay() {\n  //   if ((type.isFuture && Math.abs(this.volume) === 0 && isNaN(this.volume)) || this.volume === '' || this.volume === '-' || this.volume === 'e') {\n  //     return '';\n  //   } else {\n  //     return Math.abs(this.volume)\n  //   }\n  // }\n\n\n  get accountInfo(){\n    const position = this.position;\n    const dynEffMargin = bg(position.margin).minus(position.marginHeld).plus(position.unrealizedPnl);\n    return dynEffMargin ? {\n      dynEffMargin : dynEffMargin.toString(),\n      marginUsage : position.marginHeld,\n      availableMargin : dynEffMargin.minus(position.marginHeld).toString(),\n      curSymbolMarginUsage : position.marginHeldBySymbol\n    } : {}\n  }\n\n\n  // get amount() {\n  //   const position = this.position\n  //   const contract = this.contract;\n  //   let initVolume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\n  //   // let optionVolume = type.isOption ? (+initVolume / +this.contract.multiplier):initVolume;\n  //   let optionVolume = (+initVolume / +this.contract.multiplier);\n  //   const volume = optionVolume\n  //   let { margin, marginHeldBySymbol: currentSymbolMarginHeld, marginHeld, unrealizedPnl } = position\n  //   const price = position.markPrice\n  //   //v2\n  //   let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\n  //   otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\n  //   const contractValue = volume * price * contract.multiplier;\n  //   const incrementMarginHeld = type.isOption ? contractValue * contract.initialMarginRatio : contractValue * contract.minInitialMarginRatio\n  //   let totalMarginHeld = bg(marginHeld);\n\n  //   //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\n  //   if ((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')) {\n  //     totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\n  //     if (totalMarginHeld.lt(otherMarginHeld)) {\n  //       totalMarginHeld = otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())\n  //     }\n  //     currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\n  //   } else {\n  //     totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\n  //     if (currentSymbolMarginHeld) {\n  //       currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\n  //     }\n  //   }\n\n  //   const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);\n  //   //总保证金和当前symbol保证金不能超过余额\n  //   totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\n  //   if (currentSymbolMarginHeld) {\n  //     currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\n  //   }\n  //   let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\n  //   const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\n  //   const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) + (+position.volume))\n  //   const totalContractValue = (+totalVolume) * price\n  //   const curContractValue = (+this.volumeDisplay) * price\n  //   const leverage = Math.abs(curContractValue / (+dynBalance)).toFixed(1);\n  //   const afterLeverage = Math.abs((+totalContractValue) / (+dynBalance)).toFixed(1);\n  //   available = (+available) < 0 ? 0 : available\n  //   return {\n  //     volume: this.volume,\n  //     dynBalance: dynBalance,\n  //     margin: totalMarginHeld,\n  //     available: available,\n  //     exchanged: exchanged,\n  //     currentSymbolMarginHeld: currentSymbolMarginHeld,\n  //     leverage: leverage,\n  //     afterLeverage: afterLeverage\n  //   }\n  // }\n\n  // get direction() {\n  //   // 正仓\n  //   if (this.margin !== '') {\n  //     if ((+this.position.volume) > 0) {\n  //       if (Math.abs(this.volume) > Math.abs(this.position.volume)) {\n  //         return 'long'\n  //       } else {\n  //         return 'short'\n  //       }\n  //     } else if ((+this.position.volume) < 0) {\n  //       //负仓\n  //       if ((+this.volume) > Math.abs(+this.position.volume)) {\n  //         return 'short'\n  //       } else {\n  //         return 'long'\n  //       }\n  //     }\n  //   }\n  //   return 0\n  // }\n\n  //正仓\n  get isPositive() {\n    return bg(this.position.volume).gt(0);\n  }\n\n  //负仓\n  get isNegative() {\n    return bg(this.position.volume).isNegative();\n  }\n\n\n  get dailyFunding(){\n    return type.isFuture ? this.fundingRate.funding0 && this.markPrice && bg(this.fundingRate.funding0).div(bg(this.markPrice) ).times(bg(100)).toString() : this.fundingRate.premiumFunding0\n  }\n\n  get transactionFee(){\n    if(type.isFuture){\n      return this.contract.feeRatio && `${this.contract.feeRatio * 100}%` \n    } else {\n      if(this.contract.optionType === 'C'){\n        if(this.contract.strike >= this.index) {\n          return `${Intl.get('trade', 'eo-mark-price')} * ${this.contract.feeRatioOTM * 100}%`\n        } else {\n          return this.contract.underlier && `${this.contract.underlier} ${Intl.get('trade','price')} * ${this.contract.feeRatioITM * 100}%`\n        }\n      } else {\n        if(this.contract.strike < this.index) {\n          return `${Intl.get('trade','eo-mark-price')} * ${this.contract.feeRatioOTM * 100}%`\n        } else {\n          return this.contract.underlier && `${this.contract.underlier} ${Intl.get('trade','price')} * ${this.contract.feeRatioITM * 100}%`\n         } \n      }\n    }\n  }\n\n  get marginReqs(){\n    if(type.isOption){\n      return this.contract.initialMarginRatio  ? `${bg(this.contract.initialMarginRatio).times(100).toFixed(2)}%/${bg(this.contract.maintenanceMarginRatio).times(100).toFixed(2)}%` : ''\n    } else {\n      return this.contract.minInitialMarginRatio ? `${bg(this.contract.minInitialMarginRatio).times(100)}%/${bg(this.contract.minMaintenanceMarginRatio).times(100)}%` : ''\n    }\n  }\n\n  get netPositionNutual(){\n    if(type.isFuture){\n      return this.fundingRate.tradersNetVolume\n    } else {\n      return this.fundingRate && this.contract.multiplier? bg(this.fundingRate.tradersNetVolume).times(this.contract.multiplier).toString() : ''\n    }\n  }\n\n  get fundingRateTip() {\n    if (version && version.isV2) {\n      if (this.fundingRate && this.fundingRate.fundingRatePerBlock && this.pool) {\n        if (Intl.locale === 'zh') {\n          return `${Intl.get('lite', 'funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n            `\\n ${Intl.get('lite', 'per-block')} ${Intl.get('lite', '1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite', 'index-price-camelize')} * ${this.contract.multiplier} ) ${this.pool.bTokenSymbol}`\n        } else {\n          return `${Intl.get('lite', 'funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n            `\\n${Intl.get('lite', '1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite', 'index-price-camelize')} * ${this.contract.multiplier} ) ${this.pool.bTokenSymbol} ${Intl.get('lite', 'per-block')}`\n        }\n\n      }\n    } else {\n      if (this.fundingRate && this.fundingRate.fundingRatePerBlock && this.pool) {\n        if (Intl.locale === 'zh') {\n          return `${Intl.get('lite', 'funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n            `\\n${Intl.get('lite', 'per-block')} ${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.pool.bTokenSymbol} `\n        } else {\n          return `${Intl.get('lite', 'funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n            `\\n${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.pool.bTokenSymbol} ${Intl.get('lite', 'per-block')})`\n        }\n      }\n    }\n    return ''\n  }\n\n  get optionFundingRateTip() {\n    if (this.fundingRate && this.fundingRate.premiumFundingPerSecond && this.pool) {\n      if (Intl.locale === 'zh') {\n        return `${Intl.get('lite', 'funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\n          `\\n ${Intl.get('lite', 'per-second')} ${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.pool.bTokenSymbol} `\n      } else {\n        return `${Intl.get('lite', 'funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\n          `\\n${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.pool.bTokenSymbol} ${Intl.get('lite', 'per-second')}`\n      }\n    }\n    return ''\n  }\n  get dpmmFundingRateTip() {\n    if (this.fundingRate && this.fundingRate.fundingPerSecond && this.pool) {\n      if (Intl.locale === 'zh') {\n        return `${Intl.get('lite', 'funding-rate-per-second')} = ${this.fundingRate.fundingPerSecond}` +\n          `\\n ${Intl.get('lite', 'per-second')} ${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingPerSecond} ${this.pool.bTokenSymbol} `\n      } else {\n        return `${Intl.get('lite', 'funding-rate-per-second')} = ${this.fundingRate.fundingPerSecond}` +\n          `\\n${Intl.get('lite', '1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingPerSecond} ${this.pool.bTokenSymbol} ${Intl.get('lite', 'per-second')}`\n      }\n    }\n    return ''\n  }\n\n  get rateTip() {\n    if (this.fundingRate && this.fundingRate.funding0 && this.markPrice) {\n      return `${Intl.get('lite', 'rate-hover-one')} ${bg(this.fundingRate.funding0).div(bg(this.markPrice)).times(bg(100)).toString()}% ${Intl.get('lite', 'rate-hover-two')}`\n    }\n    return ''\n  }\n\n  get fundingCoefficientTip() {\n    if (this.contract && this.contract.fundingRateCoefficient && this.pool.unit) {\n      if (Intl.locale === 'zh') {\n        return `1${this.pool.unit} ${Intl.get('lite', 'funding-coefficient-hove-one')} ${Intl.get('lite', 'funding-coefficient-hove-two')}${this.contract.fundingRateCoefficient} ${Intl.get('lite', 'funding-coefficient-hove-three')} ${bg(this.contract.fundingRateCoefficient).times(bg(86400)).toString()} ${Intl.get('lite', 'per-day')}\n      `\n      } else {\n        return `${Intl.get('lite', 'funding-coefficient-hove-one')} ${this.pool.unit} ${Intl.get('lite', 'funding-coefficient-hove-two')} ${this.contract.fundingRateCoefficient} ${Intl.get('lite', 'funding-coefficient-hove-three')} ${bg(this.contract.fundingRateCoefficient).times(bg(86400)).toString()} ${Intl.get('lite', 'per-day')}\n      `\n      }\n\n    }\n    return ''\n  }\n\n  get initialMarginRatioTip() {\n    if (this.contract && this.contract.initialMarginRatioOrigin) {\n      return `${Intl.get('lite', 'in-the-money-initial')} = ${this.contract.initialMarginRatioOrigin}` +\n        `\\n${Intl.get('lite', 'out-of-money-initial')} = ${Intl.get('lite', 'in-max')}(${this.contract.initialMarginRatioOrigin}${Intl.get('lite', 'otm-ratio-initial')} ${this.contract.initialMarginRatioOrigin / 10})` +\n        `\\n\\n${Intl.get('lite', 'otm-ratio-max')}`\n    }\n    return ''\n  }\n  get maintenanceMarginRatioTip() {\n    if (this.contract && this.contract.maintenanceMarginRatioOrigin) {\n      return `${Intl.get('lite', 'in-the-money-maintenance')} = ${this.contract.maintenanceMarginRatioOrigin}` +\n        `\\n${Intl.get('lite', 'out-of-money-maintenance')} = ${Intl.get('lite', 'in-max')}(${this.contract.maintenanceMarginRatioOrigin}${Intl.get('lite', 'otm-ratio-maintenance')} ${this.contract.maintenanceMarginRatioOrigin / 10})` +\n        `\\n\\n${Intl.get('lite', 'otm-ratio-max')}`\n    }\n    return ''\n  }\n\n  get multiplierTip() {\n    if (this.contract && this.pool) {\n      return `${Intl.get('lite', 'the-notional-value-of')} ${this.contract.multiplier}${this.pool.unit}`\n    }\n    return ''\n  }\n\n  get TransactionFeeTip() {\n    if (this.contract && (this.contract.feeRatioITM && this.contract.feeRatioOTM)) {\n      return `${Intl.get('lite', 'transaction-fee-tip-in-the-money')} ${this.contract.underlier} ${Intl.get('lite', 'price')}  * ${bg(this.contract.feeRatioITM).times(bg(100)).toString()} %` +\n        `\\n ${Intl.get('lite', 'transaction-fee-tip-out-of-money')} * ${bg(this.contract.feeRatioOTM).times(bg(100)).toString()} %`\n    }\n    return ''\n  }\n  get TotalNetPositionTip() {\n    if (this.contract && this.fundingRate.tradersNetVolume && this.pool) {\n      return `${Intl.get('lite', 'notional-of-total-net-position')} ${this.fundingRate.tradersNetVolume} ${this.pool.unit}`\n    }\n    return ''\n  }\n\n  get symbols(){\n    const s = this.pools.reduce((total,pool) => total.concat(pool.symbols),[])\n    if(Type.isOption){\n      return this.groupConfigBySymbol(s);\n    }\n    return s;\n  }\n\n  get curSymbol(){\n    if(this.pool){\n      return this.pool.selectedSymbol;\n    }\n    return this.symbols.length > 0 ? this.symbols[0] : {}\n  }\n\n  /**\n   * 最大输入数量\n   * 分为两种情况\n   * 1. closeOnly false\n   *  max entry volume = dynamic effective margin / symbol's price (etc BTC) \n   * 2. closeOnly true\n   *  max entry volume = current symbol margin held / symbol's price (etc BTC)\n   */\n  get maxEntryVolume(){\n    return bg(this.maxAvailableMargin).div(this.markPrice).toFixed(this.minTradeScaleDecimal);\n    // if(this.accountInfo){\n    //   if(this.positionTradingStatus === TRADING_CLOSE_POSITION_STATUS){\n    //     if(this.closeOnly ){\n    //       return bg(this.accountInfo.marginUsage).div(this.markPrice).toFixed(this.minTradeScaleDecimal);\n    //     } else {\n    //       return bg(this.accountInfo.dynEffMargin).plus(this.accountInfo.curSymbolMarginUsage).div(this.markPrice).toFixed(this.minTradeScaleDecimal);\n    //     }\n    //   } else {\n    //     return bg(this.accountInfo.dynEffMargin).div(this.markPrice).toFixed(this.minTradeScaleDecimal);\n    //   }\n    // } else {\n    //   return 0\n    // }\n  }\n\n\n  //最小输入数量\n  get minEntryVolume(){\n    return this.contract && this.contract.multiplier;\n  }\n\n  get curTradeUnit(){\n    return this.curSymbol && this.curSymbol.unit;\n  }\n\n  //最小单位，\n  get minTradeScaleDecimal(){\n    return this.contract && precision(this.contract.multiplier)\n  }\n\n  get dollarValue(){\n    return this.entryStatus !== TRADE_ENTRY_DOLLAR_STATUS && !this.inputDollarValue ? bg(this.volume).times(this.markPrice).toFixed(2) : this.inputDollarValue\n  }\n\n  // get minEntryDollar(){\n  //   return this.contract && this.contract.multiplier\n  // }\n\n  //正在交易状态，（开仓、加仓、平仓）\n  get positionTradingStatus(){\n    if((this.isPositive && this.direction === BUY) || (this.isNegative && this.direction === SELL)){\n      return TRADING_APPEND_POSITION_STATUS;\n    } else if((this.isPositive && this.direction === SELL) || (this.isNegative && this.direction === BUY)){\n      return TRADING_CLOSE_POSITION_STATUS;\n    } else {\n      return TRADING_CREATE_POSITION_STATUS;\n    }\n\n  }\n\n  get maxAvailableMargin(){\n    if(this.accountInfo){\n      if(this.positionTradingStatus === TRADING_CLOSE_POSITION_STATUS){\n        if(this.closeOnly){\n          return (+this.accountInfo.curSymbolMarginUsage);\n        } else {\n          //如果平仓交易状态,可用margin= dynamic effective margin + current symbol margin\n          if(this.positionTradingStatus === TRADING_CLOSE_POSITION_STATUS) {\n            return bg(this.accountInfo.dynEffMargin).plus(this.accountInfo.curSymbolMarginUsage).toNumber()\n          } else {\n            return (+this.accountInfo.dynEffMargin);\n          }\n        }\n      }else {\n        return (+this.accountInfo.dynEffMargin)\n      }\n    } else {\n      return 0;\n    }\n  }\n\n  get curSliderValue(){\n    if(this.entryStatus === TRADE_ENTRY_SLIDER_STATUS) {\n      return this.inputSliderValue\n    } else {\n      return  this.volume && this.markPrice ? bg(this.volume).times(this.markPrice).toNumber() : 0\n    }\n  }\n\n  //只负责平仓交易状态下slider bar 的渐变，其他状态css控制\n  get sliderRailColor(){\n    const buyColor = '#59AE99';\n    const sellColor = '#CE5E5E';\n    let startColor , endColor ;\n    let startPercent ,endPercent;\n    if(this.positionTradingStatus === TRADING_CLOSE_POSITION_STATUS){\n      if(!this.closeOnly){\n        startPercent =  bg(this.accountInfo.availableMargin).div(this.maxAvailableMargin).times(100).toFixed(this.minTradeScaleDecimal)\n        endPercent = bg(this.accountInfo.curSymbolMarginUsage).div(this.maxAvailableMargin).times(100).plus(startPercent).plus(7).toFixed(this.minTradeScaleDecimal)\n        if(this.isPositive){\n          startColor = sellColor;\n          endColor = buyColor;\n        } else {\n          startColor = buyColor;\n          endColor = sellColor\n        }\n        return {\n          background : `linear-gradient(270deg, ${startColor} ${startPercent}%, ${endColor} ${endPercent}%, ${endColor} 100%`\n        }\n      } else {\n        return {}\n      }\n    } else {\n      return {}\n    }\n  }\n\n  get transactionSummary(){\n    return {\n      marginUsage : [],\n      tradePrice : '',\n      fee : '',\n      liquidationPrice : ''\n    }\n  }\n\n  get directionDisplay(){\n    if(this.direction === BUY){\n      return 'long'\n    } else {\n      return 'short'\n    }\n  }\n\n  get inputHelpText(){\n    const openText = this.pool && this.pool.selectedSymbol && `${Intl.get('trade','open-a')} ${this.volume} ${this.pool.selectedSymbol.unit} ${this.directionDisplay} `\n    if(this.positionTradingStatus === TRADING_CLOSE_POSITION_STATUS){\n      const percentage = `${bg(this.curSliderValue).div(this.maxAvailableMargin).times(100).toFixed(0,2)}%`;\n      const closeText = `${percentage} ${Intl.get('trade','close-position')}`\n      if(this.closeOnly){\n        return closeText;\n      } else {\n        return  `${closeText} + ${openText}`\n      }\n    } else {\n      return openText\n    }\n  }\n\n\n}","import { makeObservable, observable, action, computed } from \"mobx\";\n\nclass Loading {\n  isLoading = false\n  constructor(){\n    makeObservable(this,{\n      isLoading : observable,\n      setIsLoading : action,\n      loading : action,\n      isShowMask : computed\n    })\n  }\n\n  setIsLoading(isLoading){\n    this.isLoading = isLoading\n  }\n\n  loading(){\n    this.setIsLoading(true)\n  }\n\n  loaded(){\n    this.setIsLoading(false)\n  }\n\n  get isShowMask(){\n    return this.isLoading === true;\n  }\n\n  \n}\n\nexport default new Loading();","import styled from \"styled-components\"\nimport Icon from \"../Icon/Icon\"\n\nconst Wraper = styled.div`\n  display : flex;\n  align-items : center;\n  width: 288px;\n  height: 71px;\n  font-size : 14px;\n  color : #E0ECFF;\n  background: #0A172B;\n  border: 1px solid #444444;\n  box-sizing: border-box;\n  border-radius: 6px;\n  img {\n    padding-left : 24px;\n    margin-right : 16px;\n  }\n`\nexport default function MessageTemplate({style, options, message, close}){\n  return (\n    <Wraper style={style}>\n      {options.type === 'success' && <Icon token='success' width={25} height={25}/>}\n      {options.type === 'error'  && <Icon token='error' width={25} height={25}/>}\n      {message}\n    </Wraper>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'mobx-react';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport { DeriEnv } from './lib/web3js/index';\nimport Wallet from './model/Wallet';\nimport Trading from './model/Trading';\nimport PoolManager from './model/PoolManager';\nimport version from './model/Version';\nimport intl from './model/Intl';\nimport loading from './model/Loading';\nimport type from './model/Type';\nimport {positions, Provider as AlertProvider } from 'react-alert'\nimport MessageTemplate from './components/Message/MessageTemplate';\nconst wallet = new Wallet();\nconst trading = new Trading();\nconst poolManager = new PoolManager();\nif(process.env.NODE_ENV === 'production') {\n  DeriEnv.set('prod')\n}\nDeriEnv.set('testnet')\n// DeriEnv.set('prod')\nReactDOM.render(\n  // <React.StrictMode>\n    <HashRouter>\n      <Provider wallet={wallet} poolManager={poolManager} type={type}  trading={trading} version={version} intl={intl} loading={loading}>\n        <AlertProvider position ={positions.TOP_RIGHT}  timeout ={5000}  offset ='30px'  template={MessageTemplate}>\n          <App />\n        </AlertProvider>\n      </Provider>\n    </HashRouter>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bi  t.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}