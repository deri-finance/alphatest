{"version":3,"sources":["desktop/pages/Mining/Mining.js"],"names":["env","DeriEnv","get","chainInfo","config","inject","observer","wallet","lang","currentTab","setCurrentTab","useState","history","useHistory","isController","setIsController","version","chainId","symbol","baseToken","address","type","useParams","query","useQuery","networkText","name","props","url","has","useEffect","detail","account","async","res","isPoolController","PoolController","openConfigListCache","update","openConfigList","poolInfoClass","classnames","className","onClick","push","gotoMining"],"mappings":"4KAAA,yHAYA,MAAMA,EAAMC,IAAQC,OACd,UAACC,GAAaC,EAAOJ,GAoEZK,sBAAO,SAAPA,CAAiBC,aAlEhC,UAAgB,OAACC,EAAD,KAAQC,IACvB,MAAOC,EAAWC,GAAiBC,mBAAS,aACtCC,EAAUC,wBACTC,EAAaC,GAAmBJ,oBAAS,IAC1C,QAACK,EAAD,QAASC,EAAT,OAAiBC,EAAjB,UAAwBC,EAAxB,QAAkCC,EAAlC,KAA0CC,GAASC,sBACnDC,EAAQC,cACRC,EAActB,EAAUc,IAAYd,EAAUc,GAASS,KACvDC,EAAQ,CAACX,UAAQC,UAAQC,SAAOC,YAAUC,UAAQb,SAAOc,OAAKb,QAC9DoB,EAAO,cAAaZ,GAAW,QAAQC,KAAWI,KAAQH,KAAUC,KAAaC,IACpFG,EAAMM,IAAI,iBACZF,EAAK,YAAkBJ,EAAMrB,IAAI,gBAE/BqB,EAAMM,IAAI,cACZF,EAAK,SAAeJ,EAAMrB,IAAI,aAiB/B4B,qBAAU,KAfqBvB,GAAUA,EAAOwB,QAAUxB,EAAOwB,OAAOC,UAEjDC,WACtB,IAAIC,QAAYC,YAAiB5B,EAAOwB,OAAOd,QAAQG,EAAQb,EAAOwB,OAAOC,SAC7EjB,EAAgBmB,IAafE,GACe,iBAAZpB,GAXkBiB,iBAChBI,IAAoBC,UAWxBC,MAGD,CAAChC,EAAOA,EAAOwB,OAAOX,IAExB,MAAMoB,EAAgBC,IAAW,cAAchC,EAAW,CAAC,YAA0B,iBAAZO,IACzE,OACG,sBAAK0B,UAAWF,EAAhB,UACD,sBAAKE,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,SACW,OAATrB,GAAgE,OAAZL,GAAgC,YAAZA,GAAqC,iBAAZA,GAA0C,WAAZA,EAA9G,GAAEG,OAAeM,IAAwJ,GAAEP,KAAUC,OAAeM,MAE1M,iBAAZT,GAA8B,qBAAK0B,UAAU,wBAAf,SAC7B,qBAAKA,UAAU,mBAAmBC,QAAS,IAAMjC,EAAc,aAA/D,SACGF,EAAK,2BAIZ,qBAAKkC,UAAU,YAAf,SACE,cAAC,IAAD,IAAqBf,MAEtBb,GAAgB,mCAChB,qBAAK4B,UAAU,aAAf,SACC,wBAAQC,QAAS,IA/BDf,KACnBhB,EAAQgC,KAAKhB,IA8BaiB,CAAWjB,GAAlC,SACEpB,EAAK","file":"static/js/32.54f8ca5b.chunk.js","sourcesContent":["import {useEffect, useState} from 'react'\r\nimport {useParams,useHistory} from \"react-router-dom\";\r\nimport LiquidityMining from \"../../../components/Mining/Liquidity/LiquidityMining\";\r\nimport TradeMining from \"../../../components/Mining/Trade/TradeMining\";\r\nimport {DeriEnv,isPoolController,openConfigListCache} from '../../../lib/web3js/indexV2'\r\nimport config from '../../../config.json'\r\nimport './mining.less'\r\nimport './zh-mining.less'\r\nimport classnames from \"classnames\";\r\nimport { inject, observer } from 'mobx-react';\r\nimport useQuery from '../../../hooks/useQuery'\r\n\r\nconst env = DeriEnv.get();\r\nconst {chainInfo} = config[env]\r\n\r\nfunction Mining({wallet,lang}){\r\n\tconst [currentTab,setCurrentTab] = useState('liquidity')\r\n\tconst history = useHistory();\r\n\tconst [isController,setIsController] = useState(false)\r\n\tconst {version,chainId,symbol,baseToken,address,type} =  useParams();\r\n\tconst query = useQuery();\r\n\tconst networkText = chainInfo[chainId] && chainInfo[chainId].name;\r\n\tconst props = {version,chainId,symbol,baseToken,address,wallet,type,lang}\r\n\tconst url = `/addsymbol/${version || 'v1'}/${chainId}/${type}/${symbol}/${baseToken}/${address}`\r\n\tif(query.has('baseTokenId')) {\r\n\t\tprops['baseTokenId'] = query.get('baseTokenId')\r\n\t}\r\n\tif(query.has('symbolId')){\r\n\t\tprops['symbolId'] = query.get('symbolId')\r\n\t}\r\n\tconst hasConnectWallet = () => wallet && wallet.detail && wallet.detail.account\r\n\r\n\tconst PoolController = async () => {\r\n\t\tlet res = await isPoolController(wallet.detail.chainId,address,wallet.detail.account)\r\n\t\tsetIsController(res)\r\n\t}\r\n\r\n\tconst openConfigList = async ()=>{\r\n\t\tawait openConfigListCache.update()\r\n\t}\r\n\r\n\tconst gotoMining = (url)=>{\r\n\t\thistory.push(url)\r\n\t}\r\n\r\n\tuseEffect(()=>{\r\n\t\tif(hasConnectWallet()){\r\n\t\t\tPoolController()\r\n\t\t\tif(version === 'v2_lite_open'){\r\n\t\t\t\topenConfigList()\r\n\t\t\t}\r\n\t\t}\r\n\t},[wallet,wallet.detail,address])\r\n\r\n\tconst poolInfoClass = classnames('mining-info',currentTab,{'open-zone' : version === 'v2_lite_open'})\r\n\treturn(\r\n    <div className={poolInfoClass}>\r\n\t\t\t<div className=\"pool-header\">\r\n\t\t\t\t\t<div className=\"pool-network\">\r\n\t\t\t\t\t\t{type === 'lp' ? `${baseToken} @ ${networkText}` :  (version === 'v2' || version === 'v2_lite' || version === 'v2_lite_open' || version === 'option') ? `${baseToken} @ ${networkText}` : `${symbol}/${baseToken} @ ${networkText}` }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{version !== 'v2_lite_open' && <div className=\"check-trade-liquidity\">\r\n\t\t\t\t\t\t\t<div className='liquidity-mining' onClick={() => setCurrentTab('liquidity')} >\r\n\t\t\t\t\t\t\t\t\t{lang['liquidity-mining']}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>}\r\n\t\t\t</div>\r\n\t\t\t<div className='pool-info'>\r\n\t\t\t\t\t<LiquidityMining {...props}/>\r\n\t\t\t</div>\r\n\t\t\t{isController && <>\r\n\t\t\t\t<div className='add-symbol'>\r\n\t\t\t\t\t<button onClick={() => gotoMining(url)} >\r\n\t\t\t\t\t\t{lang['add-symbol']}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default inject('wallet')(observer(Mining))"],"sourceRoot":""}