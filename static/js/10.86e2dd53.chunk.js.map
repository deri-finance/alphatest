{"version":3,"sources":["components/Button/Button.js","utils/DeriNumberFormat.js","components/Pool/PoolBox.js","hooks/useMiningPool.js","desktop/components/Mining/Pool.js"],"names":["Button","btnText","className","disabled","click","afterClick","useState","status","setStatus","pending","setPending","loadRef","useRef","onClick","a","current","style","display","ref","marginRight","DeriNumberFormat","props","renderablity","setRenderablity","useEffect","allowZero","others","value","Math","abs","displayType","chainConfig","config","DeriEnv","get","inject","observer","wallet","pool","buttonElement","setButtonElement","logoClassName","bTokenSymbol","history","useHistory","airdrop","res","getUserInfoAllForAirDrop","chainId","valid","alert","eqInNumber","detail","mintAirdrop","account","mining","push","type","symbol","address","connectWallet","connect","isConnected","network","toUpperCase","liquidity","thousandSeparator","decimalScale","sushiApy","title","apy","suffix","target","rel","href","env","chainInfo","useMiningPool","loaded","setLoaded","pools","setPools","configs","getContractAddressConfig","map","getPoolLiquidity","liqPool","getPoolInfoApy","apyPool","Object","assign","name","formatAddress","buttonText","slpConfig","getLpContractAddressConfig","liqInfo","isSushi","allConfigs","concat","Promise","all","then","length","Pool","index"],"mappings":"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","file":"static/js/10.86e2dd53.chunk.js","sourcesContent":["import {useState,useRef} from 'react';\nexport default function Button({btnText,className,disabled,click,afterClick}){\n  const [status, setStatus] = useState(disabled ? 'disabled' : 'enabled');\n  const [pending, setPending] = useState(false);\n  const loadRef = useRef(null)\n\n  const onClick = async () => {\n    if(status !== 'enabled') {\n      return ;\n    }\n    setStatus('disabled')\n    setPending(true);\n    loadRef.current && (loadRef.current.style.display = 'inline-block')\n    const result = await click();    \n    if(result){\n      afterClick && afterClick()\n    } \n    loadRef.current && (loadRef.current.style.display = 'none')\n    setStatus('enabled')\n    setPending(false);\n  }\n\n  return(\n    <button className={className} onClick={onClick} >\n        <span className='btn-loading-wrap'>\n          <span ref={loadRef}\n            className='spinner spinner-border spinner-border-sm'\n            style={{display : 'none' ,marginRight : '2'}}>\n          </span>\n        </span>\n          {pending ? 'PENDING' : btnText  }\n        </button>\n  )\n}","import React,{useState,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\n\nexport default function DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState('--');\n\n  useEffect(() => {\n    const {allowZero,...others} = props \n    if((props.value || ((Math.abs(props.value)) === 0 && allowZero === true))) {\n      setRenderablity(<NumberFormat {...others} displayType = 'text' />)\n    } \n    return () => {};\n  }, [props.value]);\n\n  return renderablity;\n}","import React, { useState, useEffect } from 'react'\nimport {useHistory} from 'react-router-dom'\nimport config from  '../../config.json'\nimport { DeriEnv, getUserInfoAllForAirDrop, connectWallet, mintAirdrop, isUnlocked, unlock } from '../../lib/web3js/indexV2';\nimport DeriNumberFormat from '../../utils/DeriNumberFormat';\nimport { inject, observer } from 'mobx-react';\nimport Button from '../Button/Button.js';\nimport { eqInNumber } from '../../utils/utils.js';\n\nconst chainConfig = config[DeriEnv.get()]['chainInfo'];\n\nfunction PoolBox({wallet,pool}){\n  const [buttonElement, setButtonElement] = useState('');\n  const logoClassName = `logo ${pool.bTokenSymbol}`\n  const history = useHistory();\n\n  const airdrop = () => {\n    const res = getUserInfoAllForAirDrop(pool.pool)\n    if(res){\n      const {chainId,valid} = res;\n      if(!valid){\n        alert('No DERI to claim')\n        return;\n      }\n      if(!eqInNumber(wallet.detail.chainId,chainId)) {\n        alert('Please switch to BSC to claim DERI')\n        return;\n      }\n      mintAirdrop(chainId,wallet.detail.account)\n    }\n  }\n  const mining = () => history.push(`/mining/${pool.chainId}/${pool.type}/${pool.symbol}/${pool.bTokenSymbol}/${pool.address}`)  \n\n  const connectWallet = () => {\n    wallet.connect()\n  }\n  \n\n  useEffect(() => {\n    if(pool && pool.airdrop){\n      if(!wallet.isConnected()) {\n        setButtonElement(<Button btnText='Connect Wallet' click={connectWallet}></Button>)\n      } else {\n        setButtonElement(<Button btnText='CLAIM' click={airdrop}></Button>)\n      }\n    } else {\n      setButtonElement(\n        <button onClick={mining}>\n          STAKING\n        </button>)\n    }    \n    return () => {};\n  }, [pool]);\n\n  return(\n    <div className=\"pool\" >\n      <div className=\"pool-header\">\n        <div className=\"network\">\n          {pool.network && pool.network.toUpperCase()}\n        </div>\n      </div>\n      <div className=\"pool-info\">\n        <div className=\"info-center\">\n          <div className=\"top-info\">\n            <div className={logoClassName} ></div>\n            <div className=\"pool-detail\">\n              <div className=\"base-token\">{pool.bTokenSymbol}</div>\n              <div>\n                <span>{pool.airdrop ? 'Total' : 'Pool Liq'}</span>\n                <DeriNumberFormat value={pool.liquidity} displayType='text' thousandSeparator={true} decimalScale={pool.sushiApy ? 7 : 0}/>\n              </div>\n              <div>\n                <span>Symbol</span>\n                {pool.symbol}\n              </div>\n              <div className=\"apy\">\n                <span>APY</span>\n                <span>\n                  <span className={pool.sushiApy ? 'sushi-apy-underline' : ''} title={ pool.sushiApy && 'DERI-APY'}>\n                    {pool.apy ? <DeriNumberFormat value={pool.apy} suffix='%' displayType='text' allowZero={true} decimalScale={2}/> : '--'}                 \n                  </span>\n                  {pool.sushiApy &&<>\n                  <span> + </span>\n                  <span className={pool.sushiApy ? 'sushi-apy-underline' : '' } title={ pool.sushiApy && 'SUSHI-APY'}> <DeriNumberFormat value={pool.sushiApy} displayType='text' suffix='%' decimalScale={2}/></span>\n                  </>}\n                </span>\n                \n              </div>\n              <div className=\"pool-address\">\n                <span>Address</span>\n                {!pool.airdrop ? <a target='_blank' rel='noreferrer' href={`${chainConfig[pool.chainId]['viewUrl']}/address/${pool.address || pool.pool}`}> \n                  {pool.pool}\n                </a> : '--'}\n              </div>\n            </div>\n          </div>\n          <div className=\"bottom-btn\">\n            {buttonElement}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default  inject('wallet')(observer(PoolBox))","import {useState,useEffect} from 'react';\nimport {\n  DeriEnv,\n  getContractAddressConfig,\n  getPoolLiquidity,\n  getPoolInfoApy,\n  getLpContractAddressConfig\n} from '../lib/web3js/indexV2'\nimport config from '../config.json'\nimport { formatAddress, isSushi } from '../utils/utils';\n\nconst env = DeriEnv.get();\nconst {chainInfo} = config[env]\n\nexport default function useMiningPool(){\n  const [loaded,setLoaded] = useState(false)\n  const [pools, setPools] = useState([])\n\n\n  useEffect(() => {\n    const configs = getContractAddressConfig(env).map(async config =>  {\n      const liqPool = await getPoolLiquidity(config.chainId,config.pool) || {}\n      const apyPool = await getPoolInfoApy(config.chainId,config.pool) || {}\n      const pool = config.pool || ''\n      return Object.assign(config,{ \n        network : chainInfo[config.chainId].name,\n        liquidity : liqPool.liquidity,\n        apy :  (+apyPool.apy) * 100,\n        pool : formatAddress(pool),\n        address : pool,\n        type : 'perpetual',\n        buttonText : 'STAKING'        \n      })\n    })\n    const slpConfig = getLpContractAddressConfig(env).map(async config => {\n      const liqInfo = await getPoolLiquidity(config.chainId,config.pool) || {}\n      const apyPool = await getPoolInfoApy(config.chainId,config.pool) || {} \n      const pool = config.pool || ''      \n      let sushiApy ;\n      if(isSushi(config.pool)){\n        sushiApy =  0.22008070161007/liqInfo.liquidity * 100;           \n      }\n      return Object.assign(config,{\n        network : chainInfo[config.chainId].name,\n        liquidity : liqInfo.liquidity,\n        apy : (+apyPool.apy) * 100,\n        pool : formatAddress(pool),\n        sushiApy : sushiApy,\n        address : pool,\n        type : 'lp',\n        buttonText : 'STAKING'\n      })    \n    })\n    const allConfigs = configs.concat(slpConfig)\n    Promise.all(allConfigs).then(pools => {\n      const airDrop = {\n        network : 'BSC',\n        bTokenSymbol : 'GIVEAWAY',\n        liquidity : '12800',\n        symbol : '--',\n        airdrop : true,\n        buttonText : 'CLAIM'\n      }\n      pools.push(airDrop)\n      setPools(pools);\n      setLoaded(true)\n    })\n    return () => pools.length = 0\n  })\n  return [loaded,pools];\n}","import PoolBox from '../../../components/Pool/PoolBox';\nimport useMiningPool from '../../../hooks/useMiningPool';\nimport './pool.less'\n\n\nexport default function Pool(){\n  const [loaded,pools] = useMiningPool();\n  return (\n    <div className=\"mining-info\">\n      <div className=\"pools\">\n        {pools.map((pool,index) => <PoolBox pool={pool} key={index}/>)}\n        {!loaded && <div className=\"loading\">\n          <span\n            className=\"spinner spinner-border spinner-border-sm\">\n            </span>\n          </div>}  \n      </div>\n    </div>\n  )\n}"],"sourceRoot":""}